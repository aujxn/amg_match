<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1542" onload="init(evt)" viewBox="0 0 1200 1542" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1542" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1525.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1525.00"> </text><svg id="frames" x="10" width="1180" total_samples="69180"><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (56 samples, 0.08%)</title><rect x="0.0087%" y="1445" width="0.0809%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="56"/><text x="0.2587%" y="1455.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number (9 samples, 0.01%)</title><rect x="0.0896%" y="1445" width="0.0130%" height="15" fill="rgb(217,0,24)" fg:x="62" fg:w="9"/><text x="0.3396%" y="1455.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Sign (12 samples, 0.02%)</title><rect x="0.1026%" y="1445" width="0.0173%" height="15" fill="rgb(221,193,54)" fg:x="71" fg:w="12"/><text x="0.3526%" y="1455.50"></text></g><g><title>core::slice::sort::recurse (8 samples, 0.01%)</title><rect x="0.1474%" y="1445" width="0.0116%" height="15" fill="rgb(248,212,6)" fg:x="102" fg:w="8"/><text x="0.3974%" y="1455.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (11 samples, 0.02%)</title><rect x="0.1605%" y="1445" width="0.0159%" height="15" fill="rgb(208,68,35)" fg:x="111" fg:w="11"/><text x="0.4105%" y="1455.50"></text></g><g><title>[[heap]] (122 samples, 0.18%)</title><rect x="0.0087%" y="1461" width="0.1764%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="122"/><text x="0.2587%" y="1471.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (95 samples, 0.14%)</title><rect x="0.1850%" y="1445" width="0.1373%" height="15" fill="rgb(207,160,47)" fg:x="128" fg:w="95"/><text x="0.4350%" y="1455.50"></text></g><g><title>amg_match::partitioner::modularity_matching (8 samples, 0.01%)</title><rect x="0.3267%" y="1445" width="0.0116%" height="15" fill="rgb(228,23,34)" fg:x="226" fg:w="8"/><text x="0.5767%" y="1455.50"></text></g><g><title>amg_match::partitioner::build_weighted_matrix (8 samples, 0.01%)</title><rect x="0.3267%" y="1429" width="0.0116%" height="15" fill="rgb(218,30,26)" fg:x="226" fg:w="8"/><text x="0.5767%" y="1439.50"></text></g><g><title>[[stack]] (119 samples, 0.17%)</title><rect x="0.1850%" y="1461" width="0.1720%" height="15" fill="rgb(220,122,19)" fg:x="128" fg:w="119"/><text x="0.4350%" y="1471.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (21 samples, 0.03%)</title><rect x="0.3570%" y="1445" width="0.0304%" height="15" fill="rgb(250,228,42)" fg:x="247" fg:w="21"/><text x="0.6070%" y="1455.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (19 samples, 0.03%)</title><rect x="0.3599%" y="1429" width="0.0275%" height="15" fill="rgb(240,193,28)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1439.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (19 samples, 0.03%)</title><rect x="0.3599%" y="1413" width="0.0275%" height="15" fill="rgb(216,20,37)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1423.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (19 samples, 0.03%)</title><rect x="0.3599%" y="1397" width="0.0275%" height="15" fill="rgb(206,188,39)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1407.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (19 samples, 0.03%)</title><rect x="0.3599%" y="1381" width="0.0275%" height="15" fill="rgb(217,207,13)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1391.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (19 samples, 0.03%)</title><rect x="0.3599%" y="1365" width="0.0275%" height="15" fill="rgb(231,73,38)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1375.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (19 samples, 0.03%)</title><rect x="0.3599%" y="1349" width="0.0275%" height="15" fill="rgb(225,20,46)" fg:x="249" fg:w="19"/><text x="0.6099%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (15 samples, 0.02%)</title><rect x="0.3657%" y="1333" width="0.0217%" height="15" fill="rgb(210,31,41)" fg:x="253" fg:w="15"/><text x="0.6157%" y="1343.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (15 samples, 0.02%)</title><rect x="0.3657%" y="1317" width="0.0217%" height="15" fill="rgb(221,200,47)" fg:x="253" fg:w="15"/><text x="0.6157%" y="1327.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (15 samples, 0.02%)</title><rect x="0.3657%" y="1301" width="0.0217%" height="15" fill="rgb(226,26,5)" fg:x="253" fg:w="15"/><text x="0.6157%" y="1311.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real (12 samples, 0.02%)</title><rect x="0.3874%" y="1445" width="0.0173%" height="15" fill="rgb(249,33,26)" fg:x="268" fg:w="12"/><text x="0.6374%" y="1455.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (7 samples, 0.01%)</title><rect x="0.3946%" y="1429" width="0.0101%" height="15" fill="rgb(235,183,28)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1439.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}} (7 samples, 0.01%)</title><rect x="0.3946%" y="1413" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1423.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (7 samples, 0.01%)</title><rect x="0.3946%" y="1397" width="0.0101%" height="15" fill="rgb(247,18,42)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1407.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="0.3946%" y="1381" width="0.0101%" height="15" fill="rgb(241,131,45)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1391.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (7 samples, 0.01%)</title><rect x="0.3946%" y="1365" width="0.0101%" height="15" fill="rgb(249,31,29)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1375.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="0.3946%" y="1349" width="0.0101%" height="15" fill="rgb(225,111,53)" fg:x="273" fg:w="7"/><text x="0.6446%" y="1359.50"></text></g><g><title>[anon] (49 samples, 0.07%)</title><rect x="0.3570%" y="1461" width="0.0708%" height="15" fill="rgb(238,160,17)" fg:x="247" fg:w="49"/><text x="0.6070%" y="1471.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (14 samples, 0.02%)</title><rect x="0.4076%" y="1445" width="0.0202%" height="15" fill="rgb(214,148,48)" fg:x="282" fg:w="14"/><text x="0.6576%" y="1455.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (10 samples, 0.01%)</title><rect x="0.7733%" y="1445" width="0.0145%" height="15" fill="rgb(232,36,49)" fg:x="535" fg:w="10"/><text x="1.0233%" y="1455.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (24 samples, 0.03%)</title><rect x="0.7878%" y="1445" width="0.0347%" height="15" fill="rgb(209,103,24)" fg:x="545" fg:w="24"/><text x="1.0378%" y="1455.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (14 samples, 0.02%)</title><rect x="0.8023%" y="1429" width="0.0202%" height="15" fill="rgb(229,88,8)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1439.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (14 samples, 0.02%)</title><rect x="0.8023%" y="1413" width="0.0202%" height="15" fill="rgb(213,181,19)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1423.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (14 samples, 0.02%)</title><rect x="0.8023%" y="1397" width="0.0202%" height="15" fill="rgb(254,191,54)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1407.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (14 samples, 0.02%)</title><rect x="0.8023%" y="1381" width="0.0202%" height="15" fill="rgb(241,83,37)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1391.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (14 samples, 0.02%)</title><rect x="0.8023%" y="1365" width="0.0202%" height="15" fill="rgb(233,36,39)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1375.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (14 samples, 0.02%)</title><rect x="0.8023%" y="1349" width="0.0202%" height="15" fill="rgb(226,3,54)" fg:x="555" fg:w="14"/><text x="1.0523%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (12 samples, 0.02%)</title><rect x="0.8051%" y="1333" width="0.0173%" height="15" fill="rgb(245,192,40)" fg:x="557" fg:w="12"/><text x="1.0551%" y="1343.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="0.8051%" y="1317" width="0.0173%" height="15" fill="rgb(238,167,29)" fg:x="557" fg:w="12"/><text x="1.0551%" y="1327.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (12 samples, 0.02%)</title><rect x="0.8051%" y="1301" width="0.0173%" height="15" fill="rgb(232,182,51)" fg:x="557" fg:w="12"/><text x="1.0551%" y="1311.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="0.8225%" y="1445" width="0.0101%" height="15" fill="rgb(231,60,39)" fg:x="569" fg:w="7"/><text x="1.0725%" y="1455.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26 samples, 0.04%)</title><rect x="0.8615%" y="1301" width="0.0376%" height="15" fill="rgb(208,69,12)" fg:x="596" fg:w="26"/><text x="1.1115%" y="1311.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.04%)</title><rect x="0.8615%" y="1285" width="0.0376%" height="15" fill="rgb(235,93,37)" fg:x="596" fg:w="26"/><text x="1.1115%" y="1295.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (26 samples, 0.04%)</title><rect x="0.8615%" y="1269" width="0.0376%" height="15" fill="rgb(213,116,39)" fg:x="596" fg:w="26"/><text x="1.1115%" y="1279.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.04%)</title><rect x="0.8615%" y="1253" width="0.0376%" height="15" fill="rgb(222,207,29)" fg:x="596" fg:w="26"/><text x="1.1115%" y="1263.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number (63 samples, 0.09%)</title><rect x="0.8442%" y="1445" width="0.0911%" height="15" fill="rgb(206,96,30)" fg:x="584" fg:w="63"/><text x="1.0942%" y="1455.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (56 samples, 0.08%)</title><rect x="0.8543%" y="1429" width="0.0809%" height="15" fill="rgb(218,138,4)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1439.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}} (56 samples, 0.08%)</title><rect x="0.8543%" y="1413" width="0.0809%" height="15" fill="rgb(250,191,14)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1423.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (56 samples, 0.08%)</title><rect x="0.8543%" y="1397" width="0.0809%" height="15" fill="rgb(239,60,40)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1407.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}} (56 samples, 0.08%)</title><rect x="0.8543%" y="1381" width="0.0809%" height="15" fill="rgb(206,27,48)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1391.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (56 samples, 0.08%)</title><rect x="0.8543%" y="1365" width="0.0809%" height="15" fill="rgb(225,35,8)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1375.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}} (56 samples, 0.08%)</title><rect x="0.8543%" y="1349" width="0.0809%" height="15" fill="rgb(250,213,24)" fg:x="591" fg:w="56"/><text x="1.1043%" y="1359.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (51 samples, 0.07%)</title><rect x="0.8615%" y="1333" width="0.0737%" height="15" fill="rgb(247,123,22)" fg:x="596" fg:w="51"/><text x="1.1115%" y="1343.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (51 samples, 0.07%)</title><rect x="0.8615%" y="1317" width="0.0737%" height="15" fill="rgb(231,138,38)" fg:x="596" fg:w="51"/><text x="1.1115%" y="1327.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (25 samples, 0.04%)</title><rect x="0.8991%" y="1301" width="0.0361%" height="15" fill="rgb(231,145,46)" fg:x="622" fg:w="25"/><text x="1.1491%" y="1311.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (25 samples, 0.04%)</title><rect x="0.8991%" y="1285" width="0.0361%" height="15" fill="rgb(251,118,11)" fg:x="622" fg:w="25"/><text x="1.1491%" y="1295.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.03%)</title><rect x="0.9034%" y="1269" width="0.0318%" height="15" fill="rgb(217,147,25)" fg:x="625" fg:w="22"/><text x="1.1534%" y="1279.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (22 samples, 0.03%)</title><rect x="0.9034%" y="1253" width="0.0318%" height="15" fill="rgb(247,81,37)" fg:x="625" fg:w="22"/><text x="1.1534%" y="1263.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (22 samples, 0.03%)</title><rect x="0.9034%" y="1237" width="0.0318%" height="15" fill="rgb(209,12,38)" fg:x="625" fg:w="22"/><text x="1.1534%" y="1247.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real (13 samples, 0.02%)</title><rect x="0.9352%" y="1445" width="0.0188%" height="15" fill="rgb(227,1,9)" fg:x="647" fg:w="13"/><text x="1.1852%" y="1455.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex (14 samples, 0.02%)</title><rect x="0.9598%" y="1445" width="0.0202%" height="15" fill="rgb(248,47,43)" fg:x="664" fg:w="14"/><text x="1.2098%" y="1455.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (10 samples, 0.01%)</title><rect x="0.9656%" y="1429" width="0.0145%" height="15" fill="rgb(221,10,30)" fg:x="668" fg:w="10"/><text x="1.2156%" y="1439.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}} (10 samples, 0.01%)</title><rect x="0.9656%" y="1413" width="0.0145%" height="15" fill="rgb(210,229,1)" fg:x="668" fg:w="10"/><text x="1.2156%" y="1423.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (10 samples, 0.01%)</title><rect x="0.9656%" y="1397" width="0.0145%" height="15" fill="rgb(222,148,37)" fg:x="668" fg:w="10"/><text x="1.2156%" y="1407.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="0.9656%" y="1381" width="0.0145%" height="15" fill="rgb(234,67,33)" fg:x="668" fg:w="10"/><text x="1.2156%" y="1391.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.01%)</title><rect x="0.9699%" y="1365" width="0.0101%" height="15" fill="rgb(247,98,35)" fg:x="671" fg:w="7"/><text x="1.2199%" y="1375.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="0.9699%" y="1349" width="0.0101%" height="15" fill="rgb(247,138,52)" fg:x="671" fg:w="7"/><text x="1.2199%" y="1359.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseReal (10 samples, 0.01%)</title><rect x="0.9801%" y="1445" width="0.0145%" height="15" fill="rgb(213,79,30)" fg:x="678" fg:w="10"/><text x="1.2301%" y="1455.50"></text></g><g><title>[libc-2.33.so] (13 samples, 0.02%)</title><rect x="1.0003%" y="1445" width="0.0188%" height="15" fill="rgb(246,177,23)" fg:x="692" fg:w="13"/><text x="1.2503%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.02%)</title><rect x="1.0205%" y="1157" width="0.0159%" height="15" fill="rgb(230,62,27)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1167.50"></text></g><g><title>&lt;indexmap::set::IndexSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="1.0205%" y="1141" width="0.0159%" height="15" fill="rgb(216,154,8)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1151.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="1.0205%" y="1125" width="0.0159%" height="15" fill="rgb(244,35,45)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1135.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.02%)</title><rect x="1.0205%" y="1109" width="0.0159%" height="15" fill="rgb(251,115,12)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.02%)</title><rect x="1.0205%" y="1093" width="0.0159%" height="15" fill="rgb(240,54,50)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="1.0205%" y="1077" width="0.0159%" height="15" fill="rgb(233,84,52)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.02%)</title><rect x="1.0205%" y="1061" width="0.0159%" height="15" fill="rgb(207,117,47)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.02%)</title><rect x="1.0205%" y="1045" width="0.0159%" height="15" fill="rgb(249,43,39)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.02%)</title><rect x="1.0205%" y="1029" width="0.0159%" height="15" fill="rgb(209,38,44)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1039.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (11 samples, 0.02%)</title><rect x="1.0205%" y="1013" width="0.0159%" height="15" fill="rgb(236,212,23)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1023.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (11 samples, 0.02%)</title><rect x="1.0205%" y="997" width="0.0159%" height="15" fill="rgb(242,79,21)" fg:x="706" fg:w="11"/><text x="1.2705%" y="1007.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (11 samples, 0.02%)</title><rect x="1.0205%" y="981" width="0.0159%" height="15" fill="rgb(211,96,35)" fg:x="706" fg:w="11"/><text x="1.2705%" y="991.50"></text></g><g><title>amg_match::partitioner::build_partition_from_pairs (17 samples, 0.02%)</title><rect x="1.0205%" y="1173" width="0.0246%" height="15" fill="rgb(253,215,40)" fg:x="706" fg:w="17"/><text x="1.2705%" y="1183.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Sub&lt;f64&gt;&gt;::sub (37 samples, 0.05%)</title><rect x="1.4773%" y="1157" width="0.0535%" height="15" fill="rgb(211,81,21)" fg:x="1022" fg:w="37"/><text x="1.7273%" y="1167.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (37 samples, 0.05%)</title><rect x="1.4773%" y="1141" width="0.0535%" height="15" fill="rgb(208,190,38)" fg:x="1022" fg:w="37"/><text x="1.7273%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.05%)</title><rect x="1.5308%" y="1141" width="0.0477%" height="15" fill="rgb(235,213,38)" fg:x="1059" fg:w="33"/><text x="1.7808%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (25 samples, 0.04%)</title><rect x="1.5828%" y="1125" width="0.0361%" height="15" fill="rgb(237,122,38)" fg:x="1095" fg:w="25"/><text x="1.8328%" y="1135.50"></text></g><g><title>&lt;nalgebra_sparse::csr::CsrTripletIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.13%)</title><rect x="1.5308%" y="1157" width="0.1272%" height="15" fill="rgb(244,218,35)" fg:x="1059" fg:w="88"/><text x="1.7808%" y="1167.50"></text></g><g><title>&lt;nalgebra_sparse::pattern::SparsityPatternIter as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.08%)</title><rect x="1.5785%" y="1141" width="0.0795%" height="15" fill="rgb(240,68,47)" fg:x="1092" fg:w="55"/><text x="1.8285%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.04%)</title><rect x="1.6190%" y="1125" width="0.0390%" height="15" fill="rgb(210,16,53)" fg:x="1120" fg:w="27"/><text x="1.8690%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.04%)</title><rect x="1.6190%" y="1109" width="0.0390%" height="15" fill="rgb(235,124,12)" fg:x="1120" fg:w="27"/><text x="1.8690%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (27 samples, 0.04%)</title><rect x="1.6190%" y="1093" width="0.0390%" height="15" fill="rgb(224,169,11)" fg:x="1120" fg:w="27"/><text x="1.8690%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (27 samples, 0.04%)</title><rect x="1.6190%" y="1077" width="0.0390%" height="15" fill="rgb(250,166,2)" fg:x="1120" fg:w="27"/><text x="1.8690%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (21 samples, 0.03%)</title><rect x="1.6276%" y="1061" width="0.0304%" height="15" fill="rgb(242,216,29)" fg:x="1126" fg:w="21"/><text x="1.8776%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (21 samples, 0.03%)</title><rect x="1.6276%" y="1045" width="0.0304%" height="15" fill="rgb(230,116,27)" fg:x="1126" fg:w="21"/><text x="1.8776%" y="1055.50"></text></g><g><title>amg_match::partitioner::build_sparse_modularity_matrix (445 samples, 0.64%)</title><rect x="1.0451%" y="1173" width="0.6432%" height="15" fill="rgb(228,99,48)" fg:x="723" fg:w="445"/><text x="1.2951%" y="1183.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (21 samples, 0.03%)</title><rect x="1.6580%" y="1157" width="0.0304%" height="15" fill="rgb(253,11,6)" fg:x="1147" fg:w="21"/><text x="1.9080%" y="1167.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (21 samples, 0.03%)</title><rect x="1.6580%" y="1141" width="0.0304%" height="15" fill="rgb(247,143,39)" fg:x="1147" fg:w="21"/><text x="1.9080%" y="1151.50"></text></g><g><title>amg_match::partitioner::find_pairs (28 samples, 0.04%)</title><rect x="1.6883%" y="1173" width="0.0405%" height="15" fill="rgb(236,97,10)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::collections::vec_deque::VecDeque&lt;usize&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="1.6883%" y="1157" width="0.0405%" height="15" fill="rgb(233,208,19)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="1.6883%" y="1141" width="0.0405%" height="15" fill="rgb(216,164,2)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::collections::vec_deque::VecDeque&lt;usize&gt;]&gt; (28 samples, 0.04%)</title><rect x="1.6883%" y="1125" width="0.0405%" height="15" fill="rgb(220,129,5)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;usize&gt;&gt; (28 samples, 0.04%)</title><rect x="1.6883%" y="1109" width="0.0405%" height="15" fill="rgb(242,17,10)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (28 samples, 0.04%)</title><rect x="1.6883%" y="1093" width="0.0405%" height="15" fill="rgb(242,107,0)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="1.6883%" y="1077" width="0.0405%" height="15" fill="rgb(251,28,31)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.04%)</title><rect x="1.6883%" y="1061" width="0.0405%" height="15" fill="rgb(233,223,10)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.04%)</title><rect x="1.6883%" y="1045" width="0.0405%" height="15" fill="rgb(215,21,27)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1055.50"></text></g><g><title>cfree (28 samples, 0.04%)</title><rect x="1.6883%" y="1029" width="0.0405%" height="15" fill="rgb(232,23,21)" fg:x="1168" fg:w="28"/><text x="1.9383%" y="1039.50"></text></g><g><title>[libc-2.33.so] (27 samples, 0.04%)</title><rect x="1.6898%" y="1013" width="0.0390%" height="15" fill="rgb(244,5,23)" fg:x="1169" fg:w="27"/><text x="1.9398%" y="1023.50"></text></g><g><title>__libc_start_main (494 samples, 0.71%)</title><rect x="1.0191%" y="1445" width="0.7141%" height="15" fill="rgb(226,81,46)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1455.50"></text></g><g><title>main (494 samples, 0.71%)</title><rect x="1.0191%" y="1429" width="0.7141%" height="15" fill="rgb(247,70,30)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1439.50"></text></g><g><title>std::rt::lang_start_internal (494 samples, 0.71%)</title><rect x="1.0191%" y="1413" width="0.7141%" height="15" fill="rgb(212,68,19)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (494 samples, 0.71%)</title><rect x="1.0191%" y="1397" width="0.7141%" height="15" fill="rgb(240,187,13)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1407.50"></text></g><g><title>std::panicking::try (494 samples, 0.71%)</title><rect x="1.0191%" y="1381" width="0.7141%" height="15" fill="rgb(223,113,26)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (494 samples, 0.71%)</title><rect x="1.0191%" y="1365" width="0.7141%" height="15" fill="rgb(206,192,2)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1375.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (494 samples, 0.71%)</title><rect x="1.0191%" y="1349" width="0.7141%" height="15" fill="rgb(241,108,4)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (494 samples, 0.71%)</title><rect x="1.0191%" y="1333" width="0.7141%" height="15" fill="rgb(247,173,49)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1343.50"></text></g><g><title>std::panicking::try (494 samples, 0.71%)</title><rect x="1.0191%" y="1317" width="0.7141%" height="15" fill="rgb(224,114,35)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (494 samples, 0.71%)</title><rect x="1.0191%" y="1301" width="0.7141%" height="15" fill="rgb(245,159,27)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (494 samples, 0.71%)</title><rect x="1.0191%" y="1285" width="0.7141%" height="15" fill="rgb(245,172,44)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1295.50"></text></g><g><title>std::rt::lang_start::{{closure}} (494 samples, 0.71%)</title><rect x="1.0191%" y="1269" width="0.7141%" height="15" fill="rgb(236,23,11)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1279.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (494 samples, 0.71%)</title><rect x="1.0191%" y="1253" width="0.7141%" height="15" fill="rgb(205,117,38)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (494 samples, 0.71%)</title><rect x="1.0191%" y="1237" width="0.7141%" height="15" fill="rgb(237,72,25)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1247.50"></text></g><g><title>adaptive::main (494 samples, 0.71%)</title><rect x="1.0191%" y="1221" width="0.7141%" height="15" fill="rgb(244,70,9)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1231.50"></text></g><g><title>amg_match::adaptive::build_adaptive (494 samples, 0.71%)</title><rect x="1.0191%" y="1205" width="0.7141%" height="15" fill="rgb(217,125,39)" fg:x="705" fg:w="494"/><text x="1.2691%" y="1215.50"></text></g><g><title>amg_match::partitioner::modularity_matching (493 samples, 0.71%)</title><rect x="1.0205%" y="1189" width="0.7126%" height="15" fill="rgb(235,36,10)" fg:x="706" fg:w="493"/><text x="1.2705%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="1.9269%" y="1333" width="0.0202%" height="15" fill="rgb(251,123,47)" fg:x="1333" fg:w="14"/><text x="2.1769%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (14 samples, 0.02%)</title><rect x="1.9269%" y="1317" width="0.0202%" height="15" fill="rgb(221,13,13)" fg:x="1333" fg:w="14"/><text x="2.1769%" y="1327.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (23 samples, 0.03%)</title><rect x="1.9471%" y="1333" width="0.0332%" height="15" fill="rgb(238,131,9)" fg:x="1347" fg:w="23"/><text x="2.1971%" y="1343.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (11 samples, 0.02%)</title><rect x="1.9803%" y="1333" width="0.0159%" height="15" fill="rgb(211,50,8)" fg:x="1370" fg:w="11"/><text x="2.2303%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (29 samples, 0.04%)</title><rect x="2.0107%" y="1285" width="0.0419%" height="15" fill="rgb(245,182,24)" fg:x="1391" fg:w="29"/><text x="2.2607%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.02%)</title><rect x="2.0280%" y="1269" width="0.0246%" height="15" fill="rgb(242,14,37)" fg:x="1403" fg:w="17"/><text x="2.2780%" y="1279.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc::{{closure}} (17 samples, 0.02%)</title><rect x="2.0280%" y="1253" width="0.0246%" height="15" fill="rgb(246,228,12)" fg:x="1403" fg:w="17"/><text x="2.2780%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="2.0280%" y="1237" width="0.0246%" height="15" fill="rgb(213,55,15)" fg:x="1403" fg:w="17"/><text x="2.2780%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (17 samples, 0.02%)</title><rect x="2.0280%" y="1221" width="0.0246%" height="15" fill="rgb(209,9,3)" fg:x="1403" fg:w="17"/><text x="2.2780%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (246 samples, 0.36%)</title><rect x="1.9962%" y="1333" width="0.3556%" height="15" fill="rgb(230,59,30)" fg:x="1381" fg:w="246"/><text x="2.2462%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (246 samples, 0.36%)</title><rect x="1.9962%" y="1317" width="0.3556%" height="15" fill="rgb(209,121,21)" fg:x="1381" fg:w="246"/><text x="2.2462%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (246 samples, 0.36%)</title><rect x="1.9962%" y="1301" width="0.3556%" height="15" fill="rgb(220,109,13)" fg:x="1381" fg:w="246"/><text x="2.2462%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (207 samples, 0.30%)</title><rect x="2.0526%" y="1285" width="0.2992%" height="15" fill="rgb(232,18,1)" fg:x="1420" fg:w="207"/><text x="2.3026%" y="1295.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (11 samples, 0.02%)</title><rect x="2.3518%" y="1317" width="0.0159%" height="15" fill="rgb(215,41,42)" fg:x="1627" fg:w="11"/><text x="2.6018%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (11 samples, 0.02%)</title><rect x="2.3518%" y="1301" width="0.0159%" height="15" fill="rgb(224,123,36)" fg:x="1627" fg:w="11"/><text x="2.6018%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (12 samples, 0.02%)</title><rect x="2.3518%" y="1333" width="0.0173%" height="15" fill="rgb(240,125,3)" fg:x="1627" fg:w="12"/><text x="2.6018%" y="1343.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="2.3779%" y="1333" width="0.0145%" height="15" fill="rgb(205,98,50)" fg:x="1645" fg:w="10"/><text x="2.6279%" y="1343.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="2.3779%" y="1317" width="0.0145%" height="15" fill="rgb(205,185,37)" fg:x="1645" fg:w="10"/><text x="2.6279%" y="1327.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="2.3779%" y="1301" width="0.0145%" height="15" fill="rgb(238,207,15)" fg:x="1645" fg:w="10"/><text x="2.6279%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="2.3779%" y="1285" width="0.0145%" height="15" fill="rgb(213,199,42)" fg:x="1645" fg:w="10"/><text x="2.6279%" y="1295.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_lane (28 samples, 0.04%)</title><rect x="2.3923%" y="1333" width="0.0405%" height="15" fill="rgb(235,201,11)" fg:x="1655" fg:w="28"/><text x="2.6423%" y="1343.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_index_range (19 samples, 0.03%)</title><rect x="2.4053%" y="1317" width="0.0275%" height="15" fill="rgb(207,46,11)" fg:x="1664" fg:w="19"/><text x="2.6553%" y="1327.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_prealloc (477 samples, 0.69%)</title><rect x="1.7447%" y="1365" width="0.6895%" height="15" fill="rgb(241,35,35)" fg:x="1207" fg:w="477"/><text x="1.9947%" y="1375.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc (477 samples, 0.69%)</title><rect x="1.7447%" y="1349" width="0.6895%" height="15" fill="rgb(243,32,47)" fg:x="1207" fg:w="477"/><text x="1.9947%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (11 samples, 0.02%)</title><rect x="2.5253%" y="1349" width="0.0159%" height="15" fill="rgb(247,202,23)" fg:x="1747" fg:w="11"/><text x="2.7753%" y="1359.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 0.01%)</title><rect x="2.5267%" y="1333" width="0.0145%" height="15" fill="rgb(219,102,11)" fg:x="1748" fg:w="10"/><text x="2.7767%" y="1343.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 0.01%)</title><rect x="2.5267%" y="1317" width="0.0145%" height="15" fill="rgb(243,110,44)" fg:x="1748" fg:w="10"/><text x="2.7767%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="2.5412%" y="1349" width="0.0332%" height="15" fill="rgb(222,74,54)" fg:x="1758" fg:w="23"/><text x="2.7912%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="2.5744%" y="1349" width="0.0188%" height="15" fill="rgb(216,99,12)" fg:x="1781" fg:w="13"/><text x="2.8244%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (19 samples, 0.03%)</title><rect x="2.6323%" y="1333" width="0.0275%" height="15" fill="rgb(226,22,26)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.03%)</title><rect x="2.6323%" y="1317" width="0.0275%" height="15" fill="rgb(217,163,10)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.03%)</title><rect x="2.6323%" y="1301" width="0.0275%" height="15" fill="rgb(213,25,53)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.03%)</title><rect x="2.6323%" y="1285" width="0.0275%" height="15" fill="rgb(252,105,26)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1295.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.03%)</title><rect x="2.6323%" y="1269" width="0.0275%" height="15" fill="rgb(220,39,43)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1279.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.03%)</title><rect x="2.6323%" y="1253" width="0.0275%" height="15" fill="rgb(229,68,48)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1263.50"></text></g><g><title>realloc (19 samples, 0.03%)</title><rect x="2.6323%" y="1237" width="0.0275%" height="15" fill="rgb(252,8,32)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1247.50"></text></g><g><title>[libc-2.33.so] (19 samples, 0.03%)</title><rect x="2.6323%" y="1221" width="0.0275%" height="15" fill="rgb(223,20,43)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1231.50"></text></g><g><title>[libc-2.33.so] (19 samples, 0.03%)</title><rect x="2.6323%" y="1205" width="0.0275%" height="15" fill="rgb(229,81,49)" fg:x="1821" fg:w="19"/><text x="2.8823%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.07%)</title><rect x="2.5932%" y="1349" width="0.0708%" height="15" fill="rgb(236,28,36)" fg:x="1794" fg:w="49"/><text x="2.8432%" y="1359.50"></text></g><g><title>core::slice::sort::insertion_sort (21 samples, 0.03%)</title><rect x="2.6756%" y="1301" width="0.0304%" height="15" fill="rgb(249,185,26)" fg:x="1851" fg:w="21"/><text x="2.9256%" y="1311.50"></text></g><g><title>core::slice::sort::shift_tail (15 samples, 0.02%)</title><rect x="2.6843%" y="1285" width="0.0217%" height="15" fill="rgb(249,174,33)" fg:x="1857" fg:w="15"/><text x="2.9343%" y="1295.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.01%)</title><rect x="2.7248%" y="1269" width="0.0101%" height="15" fill="rgb(233,201,37)" fg:x="1885" fg:w="7"/><text x="2.9748%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="2.7248%" y="1253" width="0.0101%" height="15" fill="rgb(221,78,26)" fg:x="1885" fg:w="7"/><text x="2.9748%" y="1263.50"></text></g><g><title>core::slice::sort::partition (23 samples, 0.03%)</title><rect x="2.7060%" y="1301" width="0.0332%" height="15" fill="rgb(250,127,30)" fg:x="1872" fg:w="23"/><text x="2.9560%" y="1311.50"></text></g><g><title>core::slice::sort::partition_in_blocks (20 samples, 0.03%)</title><rect x="2.7103%" y="1285" width="0.0289%" height="15" fill="rgb(230,49,44)" fg:x="1875" fg:w="20"/><text x="2.9603%" y="1295.50"></text></g><g><title>core::slice::sort::insertion_sort (22 samples, 0.03%)</title><rect x="2.7421%" y="1285" width="0.0318%" height="15" fill="rgb(229,67,23)" fg:x="1897" fg:w="22"/><text x="2.9921%" y="1295.50"></text></g><g><title>core::slice::sort::shift_tail (19 samples, 0.03%)</title><rect x="2.7465%" y="1269" width="0.0275%" height="15" fill="rgb(249,83,47)" fg:x="1900" fg:w="19"/><text x="2.9965%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (82 samples, 0.12%)</title><rect x="2.6641%" y="1349" width="0.1185%" height="15" fill="rgb(215,43,3)" fg:x="1843" fg:w="82"/><text x="2.9141%" y="1359.50"></text></g><g><title>core::slice::sort::quicksort (82 samples, 0.12%)</title><rect x="2.6641%" y="1333" width="0.1185%" height="15" fill="rgb(238,154,13)" fg:x="1843" fg:w="82"/><text x="2.9141%" y="1343.50"></text></g><g><title>core::slice::sort::recurse (82 samples, 0.12%)</title><rect x="2.6641%" y="1317" width="0.1185%" height="15" fill="rgb(219,56,2)" fg:x="1843" fg:w="82"/><text x="2.9141%" y="1327.50"></text></g><g><title>core::slice::sort::recurse (30 samples, 0.04%)</title><rect x="2.7392%" y="1301" width="0.0434%" height="15" fill="rgb(233,0,4)" fg:x="1895" fg:w="30"/><text x="2.9892%" y="1311.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::lane (17 samples, 0.02%)</title><rect x="2.7826%" y="1349" width="0.0246%" height="15" fill="rgb(235,30,7)" fg:x="1925" fg:w="17"/><text x="3.0326%" y="1359.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (17 samples, 0.02%)</title><rect x="2.7826%" y="1333" width="0.0246%" height="15" fill="rgb(250,79,13)" fg:x="1925" fg:w="17"/><text x="3.0326%" y="1343.50"></text></g><g><title>amg_match::partitioner::Hierarchy::push (761 samples, 1.10%)</title><rect x="1.7361%" y="1397" width="1.1000%" height="15" fill="rgb(211,146,34)" fg:x="1201" fg:w="761"/><text x="1.9861%" y="1407.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (759 samples, 1.10%)</title><rect x="1.7389%" y="1381" width="1.0971%" height="15" fill="rgb(228,22,38)" fg:x="1203" fg:w="759"/><text x="1.9889%" y="1391.50"></text></g><g><title>nalgebra_sparse::ops::serial::pattern::spmm_csr_pattern (278 samples, 0.40%)</title><rect x="2.4342%" y="1365" width="0.4019%" height="15" fill="rgb(235,168,5)" fg:x="1684" fg:w="278"/><text x="2.6842%" y="1375.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (20 samples, 0.03%)</title><rect x="2.8072%" y="1349" width="0.0289%" height="15" fill="rgb(221,155,16)" fg:x="1942" fg:w="20"/><text x="3.0572%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (14 samples, 0.02%)</title><rect x="2.8476%" y="1333" width="0.0202%" height="15" fill="rgb(215,215,53)" fg:x="1970" fg:w="14"/><text x="3.0976%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (14 samples, 0.02%)</title><rect x="2.8476%" y="1317" width="0.0202%" height="15" fill="rgb(223,4,10)" fg:x="1970" fg:w="14"/><text x="3.0976%" y="1327.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="2.8563%" y="1301" width="0.0116%" height="15" fill="rgb(234,103,6)" fg:x="1976" fg:w="8"/><text x="3.1063%" y="1311.50"></text></g><g><title>[libc-2.33.so] (8 samples, 0.01%)</title><rect x="2.8563%" y="1285" width="0.0116%" height="15" fill="rgb(227,97,0)" fg:x="1976" fg:w="8"/><text x="3.1063%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (52 samples, 0.08%)</title><rect x="2.9705%" y="1285" width="0.0752%" height="15" fill="rgb(234,150,53)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.08%)</title><rect x="2.9705%" y="1269" width="0.0752%" height="15" fill="rgb(228,201,54)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.08%)</title><rect x="2.9705%" y="1253" width="0.0752%" height="15" fill="rgb(222,22,37)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 0.08%)</title><rect x="2.9705%" y="1237" width="0.0752%" height="15" fill="rgb(237,53,32)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1247.50"></text></g><g><title>alloc::alloc::Global::grow_impl (52 samples, 0.08%)</title><rect x="2.9705%" y="1221" width="0.0752%" height="15" fill="rgb(233,25,53)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1231.50"></text></g><g><title>alloc::alloc::realloc (52 samples, 0.08%)</title><rect x="2.9705%" y="1205" width="0.0752%" height="15" fill="rgb(210,40,34)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1215.50"></text></g><g><title>realloc (52 samples, 0.08%)</title><rect x="2.9705%" y="1189" width="0.0752%" height="15" fill="rgb(241,220,44)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1199.50"></text></g><g><title>[libc-2.33.so] (52 samples, 0.08%)</title><rect x="2.9705%" y="1173" width="0.0752%" height="15" fill="rgb(235,28,35)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1183.50"></text></g><g><title>[libc-2.33.so] (52 samples, 0.08%)</title><rect x="2.9705%" y="1157" width="0.0752%" height="15" fill="rgb(210,56,17)" fg:x="2055" fg:w="52"/><text x="3.2205%" y="1167.50"></text></g><g><title>nalgebra_sparse::convert::serial::combine_duplicates (123 samples, 0.18%)</title><rect x="2.8766%" y="1333" width="0.1778%" height="15" fill="rgb(224,130,29)" fg:x="1990" fg:w="123"/><text x="3.1266%" y="1343.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs::{{closure}} (97 samples, 0.14%)</title><rect x="2.9141%" y="1317" width="0.1402%" height="15" fill="rgb(235,212,8)" fg:x="2016" fg:w="97"/><text x="3.1641%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (97 samples, 0.14%)</title><rect x="2.9141%" y="1301" width="0.1402%" height="15" fill="rgb(223,33,50)" fg:x="2016" fg:w="97"/><text x="3.1641%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="3.2206%" y="1317" width="0.0116%" height="15" fill="rgb(219,149,13)" fg:x="2228" fg:w="8"/><text x="3.4706%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8 samples, 0.01%)</title><rect x="3.2206%" y="1301" width="0.0116%" height="15" fill="rgb(250,156,29)" fg:x="2228" fg:w="8"/><text x="3.4706%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="3.2321%" y="1317" width="0.0130%" height="15" fill="rgb(216,193,19)" fg:x="2236" fg:w="9"/><text x="3.4821%" y="1327.50"></text></g><g><title>nalgebra_sparse::convert::serial::coo_to_unsorted_cs (133 samples, 0.19%)</title><rect x="3.0544%" y="1333" width="0.1923%" height="15" fill="rgb(216,135,14)" fg:x="2113" fg:w="133"/><text x="3.3044%" y="1343.50"></text></g><g><title>nalgebra_sparse::utils::apply_permutation (50 samples, 0.07%)</title><rect x="3.2466%" y="1317" width="0.0723%" height="15" fill="rgb(241,47,5)" fg:x="2246" fg:w="50"/><text x="3.4966%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="3.2900%" y="1301" width="0.0289%" height="15" fill="rgb(233,42,35)" fg:x="2276" fg:w="20"/><text x="3.5400%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20 samples, 0.03%)</title><rect x="3.2900%" y="1285" width="0.0289%" height="15" fill="rgb(231,13,6)" fg:x="2276" fg:w="20"/><text x="3.5400%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="3.3304%" y="1301" width="0.0101%" height="15" fill="rgb(207,181,40)" fg:x="2304" fg:w="7"/><text x="3.5804%" y="1311.50"></text></g><g><title>core::slice::sort::choose_pivot (8 samples, 0.01%)</title><rect x="3.3449%" y="1253" width="0.0116%" height="15" fill="rgb(254,173,49)" fg:x="2314" fg:w="8"/><text x="3.5949%" y="1263.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (7 samples, 0.01%)</title><rect x="3.3463%" y="1237" width="0.0101%" height="15" fill="rgb(221,1,38)" fg:x="2315" fg:w="7"/><text x="3.5963%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.02%)</title><rect x="3.3666%" y="1221" width="0.0159%" height="15" fill="rgb(206,124,46)" fg:x="2329" fg:w="11"/><text x="3.6166%" y="1231.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs (388 samples, 0.56%)</title><rect x="2.8419%" y="1349" width="0.5609%" height="15" fill="rgb(249,21,11)" fg:x="1966" fg:w="388"/><text x="3.0919%" y="1359.50"></text></g><g><title>nalgebra_sparse::convert::serial::sort_lane (108 samples, 0.16%)</title><rect x="3.2466%" y="1333" width="0.1561%" height="15" fill="rgb(222,201,40)" fg:x="2246" fg:w="108"/><text x="3.4966%" y="1343.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation (58 samples, 0.08%)</title><rect x="3.3189%" y="1317" width="0.0838%" height="15" fill="rgb(235,61,29)" fg:x="2296" fg:w="58"/><text x="3.5689%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (43 samples, 0.06%)</title><rect x="3.3406%" y="1301" width="0.0622%" height="15" fill="rgb(219,207,3)" fg:x="2311" fg:w="43"/><text x="3.5906%" y="1311.50"></text></g><g><title>core::slice::sort::quicksort (43 samples, 0.06%)</title><rect x="3.3406%" y="1285" width="0.0622%" height="15" fill="rgb(222,56,46)" fg:x="2311" fg:w="43"/><text x="3.5906%" y="1295.50"></text></g><g><title>core::slice::sort::recurse (42 samples, 0.06%)</title><rect x="3.3420%" y="1269" width="0.0607%" height="15" fill="rgb(239,76,54)" fg:x="2312" fg:w="42"/><text x="3.5920%" y="1279.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (27 samples, 0.04%)</title><rect x="3.3637%" y="1253" width="0.0390%" height="15" fill="rgb(231,124,27)" fg:x="2327" fg:w="27"/><text x="3.6137%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (25 samples, 0.04%)</title><rect x="3.3666%" y="1237" width="0.0361%" height="15" fill="rgb(249,195,6)" fg:x="2329" fg:w="25"/><text x="3.6166%" y="1247.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation::{{closure}} (14 samples, 0.02%)</title><rect x="3.3825%" y="1221" width="0.0202%" height="15" fill="rgb(237,174,47)" fg:x="2340" fg:w="14"/><text x="3.6325%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="3.4403%" y="1317" width="0.0246%" height="15" fill="rgb(206,201,31)" fg:x="2380" fg:w="17"/><text x="3.6903%" y="1327.50"></text></g><g><title>amg_match::partitioner::build_sparse_modularity_matrix (439 samples, 0.63%)</title><rect x="2.8419%" y="1397" width="0.6346%" height="15" fill="rgb(231,57,52)" fg:x="1966" fg:w="439"/><text x="3.0919%" y="1407.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::coo::CooMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::from (439 samples, 0.63%)</title><rect x="2.8419%" y="1381" width="0.6346%" height="15" fill="rgb(248,177,22)" fg:x="1966" fg:w="439"/><text x="3.0919%" y="1391.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_csr (439 samples, 0.63%)</title><rect x="2.8419%" y="1365" width="0.6346%" height="15" fill="rgb(215,211,37)" fg:x="1966" fg:w="439"/><text x="3.0919%" y="1375.50"></text></g><g><title>nalgebra_sparse::csr::CsrMatrix&lt;T&gt;::try_from_csr_data (51 samples, 0.07%)</title><rect x="3.4027%" y="1349" width="0.0737%" height="15" fill="rgb(241,128,51)" fg:x="2354" fg:w="51"/><text x="3.6527%" y="1359.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (51 samples, 0.07%)</title><rect x="3.4027%" y="1333" width="0.0737%" height="15" fill="rgb(227,165,31)" fg:x="2354" fg:w="51"/><text x="3.6527%" y="1343.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (7 samples, 0.01%)</title><rect x="3.4663%" y="1317" width="0.0101%" height="15" fill="rgb(228,167,24)" fg:x="2398" fg:w="7"/><text x="3.7163%" y="1327.50"></text></g><g><title>nalgebra_sparse::convert::serial::combine_duplicates (10 samples, 0.01%)</title><rect x="3.4764%" y="1333" width="0.0145%" height="15" fill="rgb(228,143,12)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1343.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs::{{closure}} (10 samples, 0.01%)</title><rect x="3.4764%" y="1317" width="0.0145%" height="15" fill="rgb(249,149,8)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="3.4764%" y="1301" width="0.0145%" height="15" fill="rgb(243,35,44)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.01%)</title><rect x="3.4764%" y="1285" width="0.0145%" height="15" fill="rgb(246,89,9)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="3.4764%" y="1269" width="0.0145%" height="15" fill="rgb(233,213,13)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="3.4764%" y="1253" width="0.0145%" height="15" fill="rgb(233,141,41)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="3.4764%" y="1237" width="0.0145%" height="15" fill="rgb(239,167,4)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1247.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="3.4764%" y="1221" width="0.0145%" height="15" fill="rgb(209,217,16)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1231.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.01%)</title><rect x="3.4764%" y="1205" width="0.0145%" height="15" fill="rgb(219,88,35)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1215.50"></text></g><g><title>realloc (10 samples, 0.01%)</title><rect x="3.4764%" y="1189" width="0.0145%" height="15" fill="rgb(220,193,23)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1199.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="3.4764%" y="1173" width="0.0145%" height="15" fill="rgb(230,90,52)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1183.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="3.4764%" y="1157" width="0.0145%" height="15" fill="rgb(252,106,19)" fg:x="2405" fg:w="10"/><text x="3.7264%" y="1167.50"></text></g><g><title>core::slice::sort::choose_pivot (20 samples, 0.03%)</title><rect x="3.4923%" y="1253" width="0.0289%" height="15" fill="rgb(206,74,20)" fg:x="2416" fg:w="20"/><text x="3.7423%" y="1263.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (18 samples, 0.03%)</title><rect x="3.4952%" y="1237" width="0.0260%" height="15" fill="rgb(230,138,44)" fg:x="2418" fg:w="18"/><text x="3.7452%" y="1247.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (17 samples, 0.02%)</title><rect x="3.4967%" y="1221" width="0.0246%" height="15" fill="rgb(235,182,43)" fg:x="2419" fg:w="17"/><text x="3.7467%" y="1231.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (15 samples, 0.02%)</title><rect x="3.4996%" y="1205" width="0.0217%" height="15" fill="rgb(242,16,51)" fg:x="2421" fg:w="15"/><text x="3.7496%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (10 samples, 0.01%)</title><rect x="3.5068%" y="1189" width="0.0145%" height="15" fill="rgb(248,9,4)" fg:x="2426" fg:w="10"/><text x="3.7568%" y="1199.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation::{{closure}} (10 samples, 0.01%)</title><rect x="3.5068%" y="1173" width="0.0145%" height="15" fill="rgb(210,31,22)" fg:x="2426" fg:w="10"/><text x="3.7568%" y="1183.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs (54 samples, 0.08%)</title><rect x="3.4764%" y="1349" width="0.0781%" height="15" fill="rgb(239,54,39)" fg:x="2405" fg:w="54"/><text x="3.7264%" y="1359.50"></text></g><g><title>nalgebra_sparse::convert::serial::sort_lane (44 samples, 0.06%)</title><rect x="3.4909%" y="1333" width="0.0636%" height="15" fill="rgb(230,99,41)" fg:x="2415" fg:w="44"/><text x="3.7409%" y="1343.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation (44 samples, 0.06%)</title><rect x="3.4909%" y="1317" width="0.0636%" height="15" fill="rgb(253,106,12)" fg:x="2415" fg:w="44"/><text x="3.7409%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (44 samples, 0.06%)</title><rect x="3.4909%" y="1301" width="0.0636%" height="15" fill="rgb(213,46,41)" fg:x="2415" fg:w="44"/><text x="3.7409%" y="1311.50"></text></g><g><title>core::slice::sort::quicksort (44 samples, 0.06%)</title><rect x="3.4909%" y="1285" width="0.0636%" height="15" fill="rgb(215,133,35)" fg:x="2415" fg:w="44"/><text x="3.7409%" y="1295.50"></text></g><g><title>core::slice::sort::recurse (44 samples, 0.06%)</title><rect x="3.4909%" y="1269" width="0.0636%" height="15" fill="rgb(213,28,5)" fg:x="2415" fg:w="44"/><text x="3.7409%" y="1279.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (23 samples, 0.03%)</title><rect x="3.5212%" y="1253" width="0.0332%" height="15" fill="rgb(215,77,49)" fg:x="2436" fg:w="23"/><text x="3.7712%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (14 samples, 0.02%)</title><rect x="3.5343%" y="1237" width="0.0202%" height="15" fill="rgb(248,100,22)" fg:x="2445" fg:w="14"/><text x="3.7843%" y="1247.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation::{{closure}} (9 samples, 0.01%)</title><rect x="3.5415%" y="1221" width="0.0130%" height="15" fill="rgb(208,67,9)" fg:x="2450" fg:w="9"/><text x="3.7915%" y="1231.50"></text></g><g><title>amg_match::partitioner::build_weighted_matrix (78 samples, 0.11%)</title><rect x="3.4764%" y="1397" width="0.1127%" height="15" fill="rgb(219,133,21)" fg:x="2405" fg:w="78"/><text x="3.7264%" y="1407.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::coo::CooMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::from (78 samples, 0.11%)</title><rect x="3.4764%" y="1381" width="0.1127%" height="15" fill="rgb(246,46,29)" fg:x="2405" fg:w="78"/><text x="3.7264%" y="1391.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_csr (78 samples, 0.11%)</title><rect x="3.4764%" y="1365" width="0.1127%" height="15" fill="rgb(246,185,52)" fg:x="2405" fg:w="78"/><text x="3.7264%" y="1375.50"></text></g><g><title>nalgebra_sparse::csr::CsrMatrix&lt;T&gt;::try_from_csr_data (24 samples, 0.03%)</title><rect x="3.5545%" y="1349" width="0.0347%" height="15" fill="rgb(252,136,11)" fg:x="2459" fg:w="24"/><text x="3.8045%" y="1359.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (24 samples, 0.03%)</title><rect x="3.5545%" y="1333" width="0.0347%" height="15" fill="rgb(219,138,53)" fg:x="2459" fg:w="24"/><text x="3.8045%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="3.6875%" y="1157" width="0.0101%" height="15" fill="rgb(211,51,23)" fg:x="2551" fg:w="7"/><text x="3.9375%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (18 samples, 0.03%)</title><rect x="3.6875%" y="1189" width="0.0260%" height="15" fill="rgb(247,221,28)" fg:x="2551" fg:w="18"/><text x="3.9375%" y="1199.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}}::{{closure}} (18 samples, 0.03%)</title><rect x="3.6875%" y="1173" width="0.0260%" height="15" fill="rgb(251,222,45)" fg:x="2551" fg:w="18"/><text x="3.9375%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (11 samples, 0.02%)</title><rect x="3.6976%" y="1157" width="0.0159%" height="15" fill="rgb(217,162,53)" fg:x="2558" fg:w="11"/><text x="3.9476%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (27 samples, 0.04%)</title><rect x="3.9563%" y="1125" width="0.0390%" height="15" fill="rgb(229,93,14)" fg:x="2737" fg:w="27"/><text x="4.2063%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (27 samples, 0.04%)</title><rect x="3.9563%" y="1109" width="0.0390%" height="15" fill="rgb(209,67,49)" fg:x="2737" fg:w="27"/><text x="4.2063%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (165 samples, 0.24%)</title><rect x="3.7583%" y="1141" width="0.2385%" height="15" fill="rgb(213,87,29)" fg:x="2600" fg:w="165"/><text x="4.0083%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (220 samples, 0.32%)</title><rect x="3.7583%" y="1173" width="0.3180%" height="15" fill="rgb(205,151,52)" fg:x="2600" fg:w="220"/><text x="4.0083%" y="1183.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}}::{{closure}} (220 samples, 0.32%)</title><rect x="3.7583%" y="1157" width="0.3180%" height="15" fill="rgb(253,215,39)" fg:x="2600" fg:w="220"/><text x="4.0083%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (55 samples, 0.08%)</title><rect x="3.9968%" y="1141" width="0.0795%" height="15" fill="rgb(221,220,41)" fg:x="2765" fg:w="55"/><text x="4.2468%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.03%)</title><rect x="4.0763%" y="1173" width="0.0318%" height="15" fill="rgb(218,133,21)" fg:x="2820" fg:w="22"/><text x="4.3263%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.04%)</title><rect x="4.1081%" y="1173" width="0.0390%" height="15" fill="rgb(221,193,43)" fg:x="2842" fg:w="27"/><text x="4.3581%" y="1183.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.04%)</title><rect x="4.1081%" y="1157" width="0.0390%" height="15" fill="rgb(240,128,52)" fg:x="2842" fg:w="27"/><text x="4.3581%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (25 samples, 0.04%)</title><rect x="4.1110%" y="1141" width="0.0361%" height="15" fill="rgb(253,114,12)" fg:x="2844" fg:w="25"/><text x="4.3610%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::slice::insert_head::InsertionHole&lt;(usize,f64)&gt;&gt; (29 samples, 0.04%)</title><rect x="4.1472%" y="1173" width="0.0419%" height="15" fill="rgb(215,223,47)" fg:x="2869" fg:w="29"/><text x="4.3972%" y="1183.50"></text></g><g><title>&lt;alloc::slice::insert_head::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="4.1472%" y="1157" width="0.0419%" height="15" fill="rgb(248,225,23)" fg:x="2869" fg:w="29"/><text x="4.3972%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.04%)</title><rect x="4.1472%" y="1141" width="0.0419%" height="15" fill="rgb(250,108,0)" fg:x="2869" fg:w="29"/><text x="4.3972%" y="1151.50"></text></g><g><title>alloc::slice::insert_head (330 samples, 0.48%)</title><rect x="3.7135%" y="1189" width="0.4770%" height="15" fill="rgb(228,208,7)" fg:x="2569" fg:w="330"/><text x="3.9635%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (64 samples, 0.09%)</title><rect x="4.2295%" y="1141" width="0.0925%" height="15" fill="rgb(244,45,10)" fg:x="2926" fg:w="64"/><text x="4.4795%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (177 samples, 0.26%)</title><rect x="4.2295%" y="1173" width="0.2559%" height="15" fill="rgb(207,125,25)" fg:x="2926" fg:w="177"/><text x="4.4795%" y="1183.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}}::{{closure}} (177 samples, 0.26%)</title><rect x="4.2295%" y="1157" width="0.2559%" height="15" fill="rgb(210,195,18)" fg:x="2926" fg:w="177"/><text x="4.4795%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (113 samples, 0.16%)</title><rect x="4.3221%" y="1141" width="0.1633%" height="15" fill="rgb(249,80,12)" fg:x="2990" fg:w="113"/><text x="4.5721%" y="1151.50"></text></g><g><title>alloc::slice::merge::get_and_increment (40 samples, 0.06%)</title><rect x="4.4854%" y="1173" width="0.0578%" height="15" fill="rgb(221,65,9)" fg:x="3103" fg:w="40"/><text x="4.7354%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (40 samples, 0.06%)</title><rect x="4.4854%" y="1157" width="0.0578%" height="15" fill="rgb(235,49,36)" fg:x="3103" fg:w="40"/><text x="4.7354%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.07%)</title><rect x="4.5432%" y="1173" width="0.0679%" height="15" fill="rgb(225,32,20)" fg:x="3143" fg:w="47"/><text x="4.7932%" y="1183.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="4.5967%" y="1157" width="0.0145%" height="15" fill="rgb(215,141,46)" fg:x="3180" fg:w="10"/><text x="4.8467%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::slice::merge::MergeHole&lt;(usize,f64)&gt;&gt; (7 samples, 0.01%)</title><rect x="4.6112%" y="1173" width="0.0101%" height="15" fill="rgb(250,160,47)" fg:x="3190" fg:w="7"/><text x="4.8612%" y="1183.50"></text></g><g><title>&lt;alloc::slice::merge::MergeHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="4.6112%" y="1157" width="0.0101%" height="15" fill="rgb(216,222,40)" fg:x="3190" fg:w="7"/><text x="4.8612%" y="1167.50"></text></g><g><title>alloc::slice::merge (300 samples, 0.43%)</title><rect x="4.1905%" y="1189" width="0.4337%" height="15" fill="rgb(234,217,39)" fg:x="2899" fg:w="300"/><text x="4.4405%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort::collapse (16 samples, 0.02%)</title><rect x="4.6242%" y="1189" width="0.0231%" height="15" fill="rgb(207,178,40)" fg:x="3199" fg:w="16"/><text x="4.8742%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="4.6473%" y="1189" width="0.0246%" height="15" fill="rgb(221,136,13)" fg:x="3215" fg:w="17"/><text x="4.8973%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (8 samples, 0.01%)</title><rect x="4.6719%" y="1189" width="0.0116%" height="15" fill="rgb(249,199,10)" fg:x="3232" fg:w="8"/><text x="4.9219%" y="1199.50"></text></g><g><title>__libc_malloc (9 samples, 0.01%)</title><rect x="4.6834%" y="1077" width="0.0130%" height="15" fill="rgb(249,222,13)" fg:x="3240" fg:w="9"/><text x="4.9334%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.01%)</title><rect x="4.6834%" y="1189" width="0.0145%" height="15" fill="rgb(244,185,38)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="4.6834%" y="1173" width="0.0145%" height="15" fill="rgb(236,202,9)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="4.6834%" y="1157" width="0.0145%" height="15" fill="rgb(250,229,37)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="4.6834%" y="1141" width="0.0145%" height="15" fill="rgb(206,174,23)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="4.6834%" y="1125" width="0.0145%" height="15" fill="rgb(211,33,43)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="4.6834%" y="1109" width="0.0145%" height="15" fill="rgb(245,58,50)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="4.6834%" y="1093" width="0.0145%" height="15" fill="rgb(244,68,36)" fg:x="3240" fg:w="10"/><text x="4.9334%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (7 samples, 0.01%)</title><rect x="4.6979%" y="1189" width="0.0101%" height="15" fill="rgb(232,229,15)" fg:x="3250" fg:w="7"/><text x="4.9479%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (7 samples, 0.01%)</title><rect x="4.6979%" y="1173" width="0.0101%" height="15" fill="rgb(254,30,23)" fg:x="3250" fg:w="7"/><text x="4.9479%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="4.6979%" y="1157" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="3250" fg:w="7"/><text x="4.9479%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (785 samples, 1.13%)</title><rect x="3.5892%" y="1221" width="1.1347%" height="15" fill="rgb(212,155,44)" fg:x="2483" fg:w="785"/><text x="3.8392%" y="1231.50"></text></g><g><title>alloc::slice::merge_sort (785 samples, 1.13%)</title><rect x="3.5892%" y="1205" width="1.1347%" height="15" fill="rgb(226,2,50)" fg:x="2483" fg:w="785"/><text x="3.8392%" y="1215.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.01%)</title><rect x="4.7239%" y="1189" width="0.0101%" height="15" fill="rgb(234,177,6)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,f64)&gt;,amg_match::partitioner::find_pairs::{{closure}}::{{closure}}&gt;&gt; (7 samples, 0.01%)</title><rect x="4.7239%" y="1173" width="0.0101%" height="15" fill="rgb(217,24,9)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,f64)&gt;&gt; (7 samples, 0.01%)</title><rect x="4.7239%" y="1157" width="0.0101%" height="15" fill="rgb(220,13,46)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="4.7239%" y="1141" width="0.0101%" height="15" fill="rgb(239,221,27)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,f64),alloc::alloc::Global&gt;&gt; (7 samples, 0.01%)</title><rect x="4.7239%" y="1125" width="0.0101%" height="15" fill="rgb(222,198,25)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="4.7239%" y="1109" width="0.0101%" height="15" fill="rgb(211,99,13)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (7 samples, 0.01%)</title><rect x="4.7239%" y="1093" width="0.0101%" height="15" fill="rgb(232,111,31)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="4.7239%" y="1077" width="0.0101%" height="15" fill="rgb(245,82,37)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="4.7239%" y="1061" width="0.0101%" height="15" fill="rgb(227,149,46)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="4.7239%" y="1045" width="0.0101%" height="15" fill="rgb(218,36,50)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1055.50"></text></g><g><title>cfree (7 samples, 0.01%)</title><rect x="4.7239%" y="1029" width="0.0101%" height="15" fill="rgb(226,80,48)" fg:x="3268" fg:w="7"/><text x="4.9739%" y="1039.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="4.7239%" y="1205" width="0.0304%" height="15" fill="rgb(238,224,15)" fg:x="3268" fg:w="21"/><text x="4.9739%" y="1215.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (14 samples, 0.02%)</title><rect x="4.7340%" y="1189" width="0.0202%" height="15" fill="rgb(241,136,10)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1199.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="4.7340%" y="1173" width="0.0202%" height="15" fill="rgb(208,32,45)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="4.7340%" y="1157" width="0.0202%" height="15" fill="rgb(207,135,9)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="4.7340%" y="1141" width="0.0202%" height="15" fill="rgb(206,86,44)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="4.7340%" y="1125" width="0.0202%" height="15" fill="rgb(245,177,15)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="4.7340%" y="1109" width="0.0202%" height="15" fill="rgb(206,64,50)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="4.7340%" y="1093" width="0.0202%" height="15" fill="rgb(234,36,40)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1103.50"></text></g><g><title>__libc_malloc (14 samples, 0.02%)</title><rect x="4.7340%" y="1077" width="0.0202%" height="15" fill="rgb(213,64,8)" fg:x="3275" fg:w="14"/><text x="4.9840%" y="1087.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="4.7398%" y="1061" width="0.0145%" height="15" fill="rgb(210,75,36)" fg:x="3279" fg:w="10"/><text x="4.9898%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (71 samples, 0.10%)</title><rect x="4.7543%" y="1157" width="0.1026%" height="15" fill="rgb(229,88,21)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (71 samples, 0.10%)</title><rect x="4.7543%" y="1141" width="0.1026%" height="15" fill="rgb(252,204,47)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (71 samples, 0.10%)</title><rect x="4.7543%" y="1125" width="0.1026%" height="15" fill="rgb(208,77,27)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71 samples, 0.10%)</title><rect x="4.7543%" y="1109" width="0.1026%" height="15" fill="rgb(221,76,26)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.10%)</title><rect x="4.7543%" y="1093" width="0.1026%" height="15" fill="rgb(225,139,18)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (71 samples, 0.10%)</title><rect x="4.7543%" y="1077" width="0.1026%" height="15" fill="rgb(230,137,11)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 0.10%)</title><rect x="4.7543%" y="1061" width="0.1026%" height="15" fill="rgb(212,28,1)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (71 samples, 0.10%)</title><rect x="4.7543%" y="1045" width="0.1026%" height="15" fill="rgb(248,164,17)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (71 samples, 0.10%)</title><rect x="4.7543%" y="1029" width="0.1026%" height="15" fill="rgb(222,171,42)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (71 samples, 0.10%)</title><rect x="4.7543%" y="1013" width="0.1026%" height="15" fill="rgb(243,84,45)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1023.50"></text></g><g><title>realloc (71 samples, 0.10%)</title><rect x="4.7543%" y="997" width="0.1026%" height="15" fill="rgb(252,49,23)" fg:x="3289" fg:w="71"/><text x="5.0043%" y="1007.50"></text></g><g><title>[libc-2.33.so] (53 samples, 0.08%)</title><rect x="4.7803%" y="981" width="0.0766%" height="15" fill="rgb(215,19,7)" fg:x="3307" fg:w="53"/><text x="5.0303%" y="991.50"></text></g><g><title>[libc-2.33.so] (48 samples, 0.07%)</title><rect x="4.7875%" y="965" width="0.0694%" height="15" fill="rgb(238,81,41)" fg:x="3312" fg:w="48"/><text x="5.0375%" y="975.50"></text></g><g><title>[libc-2.33.so] (8 samples, 0.01%)</title><rect x="4.8453%" y="949" width="0.0116%" height="15" fill="rgb(210,199,37)" fg:x="3352" fg:w="8"/><text x="5.0953%" y="959.50"></text></g><g><title>amg_match::partitioner::find_pairs (884 samples, 1.28%)</title><rect x="3.5892%" y="1397" width="1.2778%" height="15" fill="rgb(244,192,49)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (884 samples, 1.28%)</title><rect x="3.5892%" y="1381" width="1.2778%" height="15" fill="rgb(226,211,11)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (884 samples, 1.28%)</title><rect x="3.5892%" y="1365" width="1.2778%" height="15" fill="rgb(236,162,54)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (884 samples, 1.28%)</title><rect x="3.5892%" y="1349" width="1.2778%" height="15" fill="rgb(220,229,9)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (884 samples, 1.28%)</title><rect x="3.5892%" y="1333" width="1.2778%" height="15" fill="rgb(250,87,22)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (884 samples, 1.28%)</title><rect x="3.5892%" y="1317" width="1.2778%" height="15" fill="rgb(239,43,17)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (884 samples, 1.28%)</title><rect x="3.5892%" y="1301" width="1.2778%" height="15" fill="rgb(231,177,25)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (884 samples, 1.28%)</title><rect x="3.5892%" y="1285" width="1.2778%" height="15" fill="rgb(219,179,1)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (884 samples, 1.28%)</title><rect x="3.5892%" y="1269" width="1.2778%" height="15" fill="rgb(238,219,53)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (884 samples, 1.28%)</title><rect x="3.5892%" y="1253" width="1.2778%" height="15" fill="rgb(232,167,36)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1263.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}} (884 samples, 1.28%)</title><rect x="3.5892%" y="1237" width="1.2778%" height="15" fill="rgb(244,19,51)" fg:x="2483" fg:w="884"/><text x="3.8392%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (99 samples, 0.14%)</title><rect x="4.7239%" y="1221" width="0.1431%" height="15" fill="rgb(224,6,22)" fg:x="3268" fg:w="99"/><text x="4.9739%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.11%)</title><rect x="4.7543%" y="1205" width="0.1127%" height="15" fill="rgb(224,145,5)" fg:x="3289" fg:w="78"/><text x="5.0043%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (78 samples, 0.11%)</title><rect x="4.7543%" y="1189" width="0.1127%" height="15" fill="rgb(234,130,49)" fg:x="3289" fg:w="78"/><text x="5.0043%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (78 samples, 0.11%)</title><rect x="4.7543%" y="1173" width="0.1127%" height="15" fill="rgb(254,6,2)" fg:x="3289" fg:w="78"/><text x="5.0043%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="4.8569%" y="1157" width="0.0101%" height="15" fill="rgb(208,96,46)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="4.8569%" y="1141" width="0.0101%" height="15" fill="rgb(239,3,39)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="4.8569%" y="1125" width="0.0101%" height="15" fill="rgb(233,210,1)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="4.8569%" y="1109" width="0.0101%" height="15" fill="rgb(244,137,37)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.01%)</title><rect x="4.8569%" y="1093" width="0.0101%" height="15" fill="rgb(240,136,2)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="4.8569%" y="1077" width="0.0101%" height="15" fill="rgb(239,18,37)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.01%)</title><rect x="4.8569%" y="1061" width="0.0101%" height="15" fill="rgb(218,185,22)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1071.50"></text></g><g><title>__libc_malloc (7 samples, 0.01%)</title><rect x="4.8569%" y="1045" width="0.0101%" height="15" fill="rgb(225,218,4)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1055.50"></text></g><g><title>[libc-2.33.so] (7 samples, 0.01%)</title><rect x="4.8569%" y="1029" width="0.0101%" height="15" fill="rgb(230,182,32)" fg:x="3360" fg:w="7"/><text x="5.1069%" y="1039.50"></text></g><g><title>nalgebra_sparse::cs::transpose_cs (8 samples, 0.01%)</title><rect x="4.8670%" y="1349" width="0.0116%" height="15" fill="rgb(242,56,43)" fg:x="3367" fg:w="8"/><text x="5.1170%" y="1359.50"></text></g><g><title>nalgebra_sparse::csr::CsrMatrix&lt;T&gt;::transpose (9 samples, 0.01%)</title><rect x="4.8670%" y="1397" width="0.0130%" height="15" fill="rgb(233,99,24)" fg:x="3367" fg:w="9"/><text x="5.1170%" y="1407.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt; for nalgebra_sparse::csc::CscMatrix&lt;T&gt;&gt;::from (9 samples, 0.01%)</title><rect x="4.8670%" y="1381" width="0.0130%" height="15" fill="rgb(234,209,42)" fg:x="3367" fg:w="9"/><text x="5.1170%" y="1391.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_csr_csc (9 samples, 0.01%)</title><rect x="4.8670%" y="1365" width="0.0130%" height="15" fill="rgb(227,7,12)" fg:x="3367" fg:w="9"/><text x="5.1170%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.08%)</title><rect x="5.4611%" y="1349" width="0.0766%" height="15" fill="rgb(245,203,43)" fg:x="3778" fg:w="53"/><text x="5.7111%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (53 samples, 0.08%)</title><rect x="5.4611%" y="1333" width="0.0766%" height="15" fill="rgb(238,205,33)" fg:x="3778" fg:w="53"/><text x="5.7111%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="5.5377%" y="1349" width="0.0159%" height="15" fill="rgb(231,56,7)" fg:x="3831" fg:w="11"/><text x="5.7877%" y="1359.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (57 samples, 0.08%)</title><rect x="5.5536%" y="1349" width="0.0824%" height="15" fill="rgb(244,186,29)" fg:x="3842" fg:w="57"/><text x="5.8036%" y="1359.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (45 samples, 0.07%)</title><rect x="5.6360%" y="1349" width="0.0650%" height="15" fill="rgb(234,111,31)" fg:x="3899" fg:w="45"/><text x="5.8860%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (57 samples, 0.08%)</title><rect x="5.7531%" y="1301" width="0.0824%" height="15" fill="rgb(241,149,10)" fg:x="3980" fg:w="57"/><text x="6.0031%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.03%)</title><rect x="5.8023%" y="1285" width="0.0332%" height="15" fill="rgb(249,206,44)" fg:x="4014" fg:w="23"/><text x="6.0523%" y="1295.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc::{{closure}} (23 samples, 0.03%)</title><rect x="5.8023%" y="1269" width="0.0332%" height="15" fill="rgb(251,153,30)" fg:x="4014" fg:w="23"/><text x="6.0523%" y="1279.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.03%)</title><rect x="5.8023%" y="1253" width="0.0332%" height="15" fill="rgb(239,152,38)" fg:x="4014" fg:w="23"/><text x="6.0523%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (23 samples, 0.03%)</title><rect x="5.8023%" y="1237" width="0.0332%" height="15" fill="rgb(249,139,47)" fg:x="4014" fg:w="23"/><text x="6.0523%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,104 samples, 1.60%)</title><rect x="5.7069%" y="1349" width="1.5958%" height="15" fill="rgb(244,64,35)" fg:x="3948" fg:w="1104"/><text x="5.9569%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,104 samples, 1.60%)</title><rect x="5.7069%" y="1333" width="1.5958%" height="15" fill="rgb(216,46,15)" fg:x="3948" fg:w="1104"/><text x="5.9569%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,104 samples, 1.60%)</title><rect x="5.7069%" y="1317" width="1.5958%" height="15" fill="rgb(250,74,19)" fg:x="3948" fg:w="1104"/><text x="5.9569%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,015 samples, 1.47%)</title><rect x="5.8355%" y="1301" width="1.4672%" height="15" fill="rgb(249,42,33)" fg:x="4037" fg:w="1015"/><text x="6.0855%" y="1311.50"></text></g><g><title>core::cmp::min (24 samples, 0.03%)</title><rect x="7.3027%" y="1301" width="0.0347%" height="15" fill="rgb(242,149,17)" fg:x="5052" fg:w="24"/><text x="7.5527%" y="1311.50"></text></g><g><title>core::cmp::Ord::min (24 samples, 0.03%)</title><rect x="7.3027%" y="1285" width="0.0347%" height="15" fill="rgb(244,29,21)" fg:x="5052" fg:w="24"/><text x="7.5527%" y="1295.50"></text></g><g><title>core::cmp::min_by (24 samples, 0.03%)</title><rect x="7.3027%" y="1269" width="0.0347%" height="15" fill="rgb(220,130,37)" fg:x="5052" fg:w="24"/><text x="7.5527%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (63 samples, 0.09%)</title><rect x="7.3027%" y="1349" width="0.0911%" height="15" fill="rgb(211,67,2)" fg:x="5052" fg:w="63"/><text x="7.5527%" y="1359.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (63 samples, 0.09%)</title><rect x="7.3027%" y="1333" width="0.0911%" height="15" fill="rgb(235,68,52)" fg:x="5052" fg:w="63"/><text x="7.5527%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (63 samples, 0.09%)</title><rect x="7.3027%" y="1317" width="0.0911%" height="15" fill="rgb(246,142,3)" fg:x="5052" fg:w="63"/><text x="7.5527%" y="1327.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (39 samples, 0.06%)</title><rect x="7.3374%" y="1301" width="0.0564%" height="15" fill="rgb(241,25,7)" fg:x="5076" fg:w="39"/><text x="7.5874%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (39 samples, 0.06%)</title><rect x="7.3374%" y="1285" width="0.0564%" height="15" fill="rgb(242,119,39)" fg:x="5076" fg:w="39"/><text x="7.5874%" y="1295.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (15 samples, 0.02%)</title><rect x="7.3938%" y="1349" width="0.0217%" height="15" fill="rgb(241,98,45)" fg:x="5115" fg:w="15"/><text x="7.6438%" y="1359.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="7.3938%" y="1333" width="0.0217%" height="15" fill="rgb(254,28,30)" fg:x="5115" fg:w="15"/><text x="7.6438%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (15 samples, 0.02%)</title><rect x="7.3938%" y="1317" width="0.0217%" height="15" fill="rgb(241,142,54)" fg:x="5115" fg:w="15"/><text x="7.6438%" y="1327.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (15 samples, 0.02%)</title><rect x="7.3938%" y="1301" width="0.0217%" height="15" fill="rgb(222,85,15)" fg:x="5115" fg:w="15"/><text x="7.6438%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (52 samples, 0.08%)</title><rect x="7.4154%" y="1349" width="0.0752%" height="15" fill="rgb(210,85,47)" fg:x="5130" fg:w="52"/><text x="7.6654%" y="1359.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (52 samples, 0.08%)</title><rect x="7.4154%" y="1333" width="0.0752%" height="15" fill="rgb(224,206,25)" fg:x="5130" fg:w="52"/><text x="7.6654%" y="1343.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (52 samples, 0.08%)</title><rect x="7.4154%" y="1317" width="0.0752%" height="15" fill="rgb(243,201,19)" fg:x="5130" fg:w="52"/><text x="7.6654%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (52 samples, 0.08%)</title><rect x="7.4154%" y="1301" width="0.0752%" height="15" fill="rgb(236,59,4)" fg:x="5130" fg:w="52"/><text x="7.6654%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (31 samples, 0.04%)</title><rect x="7.5022%" y="1333" width="0.0448%" height="15" fill="rgb(254,179,45)" fg:x="5190" fg:w="31"/><text x="7.7522%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (31 samples, 0.04%)</title><rect x="7.5022%" y="1317" width="0.0448%" height="15" fill="rgb(226,14,10)" fg:x="5190" fg:w="31"/><text x="7.7522%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.01%)</title><rect x="7.5340%" y="1301" width="0.0130%" height="15" fill="rgb(244,27,41)" fg:x="5212" fg:w="9"/><text x="7.7840%" y="1311.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="7.5340%" y="1285" width="0.0130%" height="15" fill="rgb(235,35,32)" fg:x="5212" fg:w="9"/><text x="7.7840%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="7.5340%" y="1269" width="0.0130%" height="15" fill="rgb(218,68,31)" fg:x="5212" fg:w="9"/><text x="7.7840%" y="1279.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_lane (124 samples, 0.18%)</title><rect x="7.4906%" y="1349" width="0.1792%" height="15" fill="rgb(207,120,37)" fg:x="5182" fg:w="124"/><text x="7.7406%" y="1359.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_index_range (85 samples, 0.12%)</title><rect x="7.5470%" y="1333" width="0.1229%" height="15" fill="rgb(227,98,0)" fg:x="5221" fg:w="85"/><text x="7.7970%" y="1343.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_prealloc (1,937 samples, 2.80%)</title><rect x="4.8800%" y="1381" width="2.7999%" height="15" fill="rgb(207,7,3)" fg:x="3376" fg:w="1937"/><text x="5.1300%" y="1391.50">na..</text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc (1,937 samples, 2.80%)</title><rect x="4.8800%" y="1365" width="2.7999%" height="15" fill="rgb(206,98,19)" fg:x="3376" fg:w="1937"/><text x="5.1300%" y="1375.50">na..</text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_lane_mut (7 samples, 0.01%)</title><rect x="7.6698%" y="1349" width="0.0101%" height="15" fill="rgb(217,5,26)" fg:x="5306" fg:w="7"/><text x="7.9198%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68 samples, 0.10%)</title><rect x="7.6800%" y="1365" width="0.0983%" height="15" fill="rgb(235,190,38)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (68 samples, 0.10%)</title><rect x="7.6800%" y="1349" width="0.0983%" height="15" fill="rgb(247,86,24)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (68 samples, 0.10%)</title><rect x="7.6800%" y="1333" width="0.0983%" height="15" fill="rgb(205,101,16)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1343.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.10%)</title><rect x="7.6800%" y="1317" width="0.0983%" height="15" fill="rgb(246,168,33)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (68 samples, 0.10%)</title><rect x="7.6800%" y="1301" width="0.0983%" height="15" fill="rgb(231,114,1)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1311.50"></text></g><g><title>alloc::alloc::Global::grow_impl (68 samples, 0.10%)</title><rect x="7.6800%" y="1285" width="0.0983%" height="15" fill="rgb(207,184,53)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1295.50"></text></g><g><title>alloc::alloc::realloc (68 samples, 0.10%)</title><rect x="7.6800%" y="1269" width="0.0983%" height="15" fill="rgb(224,95,51)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1279.50"></text></g><g><title>realloc (68 samples, 0.10%)</title><rect x="7.6800%" y="1253" width="0.0983%" height="15" fill="rgb(212,188,45)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1263.50"></text></g><g><title>[libc-2.33.so] (68 samples, 0.10%)</title><rect x="7.6800%" y="1237" width="0.0983%" height="15" fill="rgb(223,154,38)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1247.50"></text></g><g><title>[libc-2.33.so] (68 samples, 0.10%)</title><rect x="7.6800%" y="1221" width="0.0983%" height="15" fill="rgb(251,22,52)" fg:x="5313" fg:w="68"/><text x="7.9300%" y="1231.50"></text></g><g><title>core::slice::sort::choose_pivot (20 samples, 0.03%)</title><rect x="7.8332%" y="1317" width="0.0289%" height="15" fill="rgb(229,209,22)" fg:x="5419" fg:w="20"/><text x="8.0832%" y="1327.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (15 samples, 0.02%)</title><rect x="7.8404%" y="1301" width="0.0217%" height="15" fill="rgb(234,138,34)" fg:x="5424" fg:w="15"/><text x="8.0904%" y="1311.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (13 samples, 0.02%)</title><rect x="7.8433%" y="1285" width="0.0188%" height="15" fill="rgb(212,95,11)" fg:x="5426" fg:w="13"/><text x="8.0933%" y="1295.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (8 samples, 0.01%)</title><rect x="7.8505%" y="1269" width="0.0116%" height="15" fill="rgb(240,179,47)" fg:x="5431" fg:w="8"/><text x="8.1005%" y="1279.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="7.8621%" y="1301" width="0.0231%" height="15" fill="rgb(240,163,11)" fg:x="5439" fg:w="16"/><text x="8.1121%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.02%)</title><rect x="7.8621%" y="1285" width="0.0231%" height="15" fill="rgb(236,37,12)" fg:x="5439" fg:w="16"/><text x="8.1121%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="7.9170%" y="1285" width="0.0188%" height="15" fill="rgb(232,164,16)" fg:x="5477" fg:w="13"/><text x="8.1670%" y="1295.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (13 samples, 0.02%)</title><rect x="7.9170%" y="1269" width="0.0188%" height="15" fill="rgb(244,205,15)" fg:x="5477" fg:w="13"/><text x="8.1670%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (13 samples, 0.02%)</title><rect x="7.9170%" y="1253" width="0.0188%" height="15" fill="rgb(223,117,47)" fg:x="5477" fg:w="13"/><text x="8.1670%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.02%)</title><rect x="7.9170%" y="1237" width="0.0188%" height="15" fill="rgb(244,107,35)" fg:x="5477" fg:w="13"/><text x="8.1670%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.02%)</title><rect x="7.9358%" y="1285" width="0.0231%" height="15" fill="rgb(205,140,8)" fg:x="5490" fg:w="16"/><text x="8.1858%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;usize&gt;&gt; (18 samples, 0.03%)</title><rect x="7.9589%" y="1285" width="0.0260%" height="15" fill="rgb(228,84,46)" fg:x="5506" fg:w="18"/><text x="8.2089%" y="1295.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="7.9589%" y="1269" width="0.0260%" height="15" fill="rgb(254,188,9)" fg:x="5506" fg:w="18"/><text x="8.2089%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="7.9589%" y="1253" width="0.0260%" height="15" fill="rgb(206,112,54)" fg:x="5506" fg:w="18"/><text x="8.2089%" y="1263.50"></text></g><g><title>core::slice::sort::insertion_sort (89 samples, 0.13%)</title><rect x="7.8621%" y="1317" width="0.1286%" height="15" fill="rgb(216,84,49)" fg:x="5439" fg:w="89"/><text x="8.1121%" y="1327.50"></text></g><g><title>core::slice::sort::shift_tail (73 samples, 0.11%)</title><rect x="7.8852%" y="1301" width="0.1055%" height="15" fill="rgb(214,194,35)" fg:x="5455" fg:w="73"/><text x="8.1352%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (7 samples, 0.01%)</title><rect x="8.0023%" y="1301" width="0.0101%" height="15" fill="rgb(249,28,3)" fg:x="5536" fg:w="7"/><text x="8.2523%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.01%)</title><rect x="8.0023%" y="1285" width="0.0101%" height="15" fill="rgb(222,56,52)" fg:x="5536" fg:w="7"/><text x="8.2523%" y="1295.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (22 samples, 0.03%)</title><rect x="7.9907%" y="1317" width="0.0318%" height="15" fill="rgb(245,217,50)" fg:x="5528" fg:w="22"/><text x="8.2407%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (8 samples, 0.01%)</title><rect x="8.0717%" y="1301" width="0.0116%" height="15" fill="rgb(213,201,24)" fg:x="5584" fg:w="8"/><text x="8.3217%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.01%)</title><rect x="8.0717%" y="1285" width="0.0116%" height="15" fill="rgb(248,116,28)" fg:x="5584" fg:w="8"/><text x="8.3217%" y="1295.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.03%)</title><rect x="8.1830%" y="1285" width="0.0260%" height="15" fill="rgb(219,72,43)" fg:x="5661" fg:w="18"/><text x="8.4330%" y="1295.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.03%)</title><rect x="8.1830%" y="1269" width="0.0260%" height="15" fill="rgb(209,138,14)" fg:x="5661" fg:w="18"/><text x="8.4330%" y="1279.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.02%)</title><rect x="8.2105%" y="1285" width="0.0188%" height="15" fill="rgb(222,18,33)" fg:x="5680" fg:w="13"/><text x="8.4605%" y="1295.50"></text></g><g><title>core::ptr::swap (11 samples, 0.02%)</title><rect x="8.2293%" y="1285" width="0.0159%" height="15" fill="rgb(213,199,7)" fg:x="5693" fg:w="11"/><text x="8.4793%" y="1295.50"></text></g><g><title>core::slice::sort::partition (162 samples, 0.23%)</title><rect x="8.0225%" y="1317" width="0.2342%" height="15" fill="rgb(250,110,10)" fg:x="5550" fg:w="162"/><text x="8.2725%" y="1327.50"></text></g><g><title>core::slice::sort::partition_in_blocks (113 samples, 0.16%)</title><rect x="8.0934%" y="1301" width="0.1633%" height="15" fill="rgb(248,123,6)" fg:x="5599" fg:w="113"/><text x="8.3434%" y="1311.50"></text></g><g><title>core::slice::sort::choose_pivot (9 samples, 0.01%)</title><rect x="8.2943%" y="1301" width="0.0130%" height="15" fill="rgb(206,91,31)" fg:x="5738" fg:w="9"/><text x="8.5443%" y="1311.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.02%)</title><rect x="8.3073%" y="1285" width="0.0246%" height="15" fill="rgb(211,154,13)" fg:x="5747" fg:w="17"/><text x="8.5573%" y="1295.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.02%)</title><rect x="8.3073%" y="1269" width="0.0246%" height="15" fill="rgb(225,148,7)" fg:x="5747" fg:w="17"/><text x="8.5573%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.04%)</title><rect x="8.3839%" y="1269" width="0.0390%" height="15" fill="rgb(220,160,43)" fg:x="5800" fg:w="27"/><text x="8.6339%" y="1279.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (27 samples, 0.04%)</title><rect x="8.3839%" y="1253" width="0.0390%" height="15" fill="rgb(213,52,39)" fg:x="5800" fg:w="27"/><text x="8.6339%" y="1263.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (27 samples, 0.04%)</title><rect x="8.3839%" y="1237" width="0.0390%" height="15" fill="rgb(243,137,7)" fg:x="5800" fg:w="27"/><text x="8.6339%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (25 samples, 0.04%)</title><rect x="8.3868%" y="1221" width="0.0361%" height="15" fill="rgb(230,79,13)" fg:x="5802" fg:w="25"/><text x="8.6368%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.05%)</title><rect x="8.4230%" y="1269" width="0.0549%" height="15" fill="rgb(247,105,23)" fg:x="5827" fg:w="38"/><text x="8.6730%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;usize&gt;&gt; (34 samples, 0.05%)</title><rect x="8.4779%" y="1269" width="0.0491%" height="15" fill="rgb(223,179,41)" fg:x="5865" fg:w="34"/><text x="8.7279%" y="1279.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.05%)</title><rect x="8.4779%" y="1253" width="0.0491%" height="15" fill="rgb(218,9,34)" fg:x="5865" fg:w="34"/><text x="8.7279%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.05%)</title><rect x="8.4779%" y="1237" width="0.0491%" height="15" fill="rgb(222,106,8)" fg:x="5865" fg:w="34"/><text x="8.7279%" y="1247.50"></text></g><g><title>core::slice::sort::insertion_sort (162 samples, 0.23%)</title><rect x="8.3073%" y="1301" width="0.2342%" height="15" fill="rgb(211,220,0)" fg:x="5747" fg:w="162"/><text x="8.5573%" y="1311.50"></text></g><g><title>core::slice::sort::shift_tail (145 samples, 0.21%)</title><rect x="8.3319%" y="1285" width="0.2096%" height="15" fill="rgb(229,52,16)" fg:x="5764" fg:w="145"/><text x="8.5819%" y="1295.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (10 samples, 0.01%)</title><rect x="8.5270%" y="1269" width="0.0145%" height="15" fill="rgb(212,155,18)" fg:x="5899" fg:w="10"/><text x="8.7770%" y="1279.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (10 samples, 0.01%)</title><rect x="8.5270%" y="1253" width="0.0145%" height="15" fill="rgb(242,21,14)" fg:x="5899" fg:w="10"/><text x="8.7770%" y="1263.50"></text></g><g><title>core::slice::sort::partition (46 samples, 0.07%)</title><rect x="8.5429%" y="1301" width="0.0665%" height="15" fill="rgb(222,19,48)" fg:x="5910" fg:w="46"/><text x="8.7929%" y="1311.50"></text></g><g><title>core::slice::sort::partition_in_blocks (35 samples, 0.05%)</title><rect x="8.5588%" y="1285" width="0.0506%" height="15" fill="rgb(232,45,27)" fg:x="5921" fg:w="35"/><text x="8.8088%" y="1295.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.01%)</title><rect x="8.6239%" y="1269" width="0.0101%" height="15" fill="rgb(249,103,42)" fg:x="5966" fg:w="7"/><text x="8.8739%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="8.6239%" y="1253" width="0.0101%" height="15" fill="rgb(246,81,33)" fg:x="5966" fg:w="7"/><text x="8.8739%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="8.6441%" y="1253" width="0.0101%" height="15" fill="rgb(252,33,42)" fg:x="5980" fg:w="7"/><text x="8.8941%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;usize&gt;&gt; (10 samples, 0.01%)</title><rect x="8.6542%" y="1253" width="0.0145%" height="15" fill="rgb(209,212,41)" fg:x="5987" fg:w="10"/><text x="8.9042%" y="1263.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="8.6542%" y="1237" width="0.0145%" height="15" fill="rgb(207,154,6)" fg:x="5987" fg:w="10"/><text x="8.9042%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="8.6542%" y="1221" width="0.0145%" height="15" fill="rgb(223,64,47)" fg:x="5987" fg:w="10"/><text x="8.9042%" y="1231.50"></text></g><g><title>core::slice::sort::insertion_sort (34 samples, 0.05%)</title><rect x="8.6224%" y="1285" width="0.0491%" height="15" fill="rgb(211,161,38)" fg:x="5965" fg:w="34"/><text x="8.8724%" y="1295.50"></text></g><g><title>core::slice::sort::shift_tail (26 samples, 0.04%)</title><rect x="8.6340%" y="1269" width="0.0376%" height="15" fill="rgb(219,138,40)" fg:x="5973" fg:w="26"/><text x="8.8840%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (620 samples, 0.90%)</title><rect x="7.7783%" y="1365" width="0.8962%" height="15" fill="rgb(241,228,46)" fg:x="5381" fg:w="620"/><text x="8.0283%" y="1375.50"></text></g><g><title>core::slice::sort::quicksort (620 samples, 0.90%)</title><rect x="7.7783%" y="1349" width="0.8962%" height="15" fill="rgb(223,209,38)" fg:x="5381" fg:w="620"/><text x="8.0283%" y="1359.50"></text></g><g><title>core::slice::sort::recurse (620 samples, 0.90%)</title><rect x="7.7783%" y="1333" width="0.8962%" height="15" fill="rgb(236,164,45)" fg:x="5381" fg:w="620"/><text x="8.0283%" y="1343.50"></text></g><g><title>core::slice::sort::recurse (289 samples, 0.42%)</title><rect x="8.2567%" y="1317" width="0.4178%" height="15" fill="rgb(231,15,5)" fg:x="5712" fg:w="289"/><text x="8.5067%" y="1327.50"></text></g><g><title>core::slice::sort::recurse (45 samples, 0.07%)</title><rect x="8.6094%" y="1301" width="0.0650%" height="15" fill="rgb(252,35,15)" fg:x="5956" fg:w="45"/><text x="8.8594%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.04%)</title><rect x="8.7757%" y="1349" width="0.0448%" height="15" fill="rgb(248,181,18)" fg:x="6071" fg:w="31"/><text x="9.0257%" y="1359.50"></text></g><g><title>adaptive::main (4,918 samples, 7.11%)</title><rect x="1.7361%" y="1445" width="7.1090%" height="15" fill="rgb(233,39,42)" fg:x="1201" fg:w="4918"/><text x="1.9861%" y="1455.50">adaptive::..</text></g><g><title>amg_match::adaptive::build_adaptive (4,918 samples, 7.11%)</title><rect x="1.7361%" y="1429" width="7.1090%" height="15" fill="rgb(238,110,33)" fg:x="1201" fg:w="4918"/><text x="1.9861%" y="1439.50">amg_match:..</text></g><g><title>amg_match::partitioner::modularity_matching (4,918 samples, 7.11%)</title><rect x="1.7361%" y="1413" width="7.1090%" height="15" fill="rgb(233,195,10)" fg:x="1201" fg:w="4918"/><text x="1.9861%" y="1423.50">amg_match:..</text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (2,743 samples, 3.97%)</title><rect x="4.8800%" y="1397" width="3.9650%" height="15" fill="rgb(254,105,3)" fg:x="3376" fg:w="2743"/><text x="5.1300%" y="1407.50">nalg..</text></g><g><title>nalgebra_sparse::ops::serial::pattern::spmm_csr_pattern (806 samples, 1.17%)</title><rect x="7.6800%" y="1381" width="1.1651%" height="15" fill="rgb(221,225,9)" fg:x="5313" fg:w="806"/><text x="7.9300%" y="1391.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (118 samples, 0.17%)</title><rect x="8.6745%" y="1365" width="0.1706%" height="15" fill="rgb(224,227,45)" fg:x="6001" fg:w="118"/><text x="8.9245%" y="1375.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (13 samples, 0.02%)</title><rect x="8.8263%" y="1349" width="0.0188%" height="15" fill="rgb(229,198,43)" fg:x="6106" fg:w="13"/><text x="9.0763%" y="1359.50"></text></g><g><title>core::num::dec2flt::dec2flt (10 samples, 0.01%)</title><rect x="8.8682%" y="1445" width="0.0145%" height="15" fill="rgb(206,209,35)" fg:x="6135" fg:w="10"/><text x="9.1182%" y="1455.50"></text></g><g><title>core::slice::sort::recurse (26 samples, 0.04%)</title><rect x="8.8971%" y="1445" width="0.0376%" height="15" fill="rgb(245,195,53)" fg:x="6155" fg:w="26"/><text x="9.1471%" y="1455.50"></text></g><g><title>main (18 samples, 0.03%)</title><rect x="8.9361%" y="1445" width="0.0260%" height="15" fill="rgb(240,92,26)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1455.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 0.03%)</title><rect x="8.9361%" y="1429" width="0.0260%" height="15" fill="rgb(207,40,23)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.03%)</title><rect x="8.9361%" y="1413" width="0.0260%" height="15" fill="rgb(223,111,35)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1423.50"></text></g><g><title>std::panicking::try (18 samples, 0.03%)</title><rect x="8.9361%" y="1397" width="0.0260%" height="15" fill="rgb(229,147,28)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.03%)</title><rect x="8.9361%" y="1381" width="0.0260%" height="15" fill="rgb(211,29,28)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1391.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (18 samples, 0.03%)</title><rect x="8.9361%" y="1365" width="0.0260%" height="15" fill="rgb(228,72,33)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.03%)</title><rect x="8.9361%" y="1349" width="0.0260%" height="15" fill="rgb(205,214,31)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1359.50"></text></g><g><title>std::panicking::try (18 samples, 0.03%)</title><rect x="8.9361%" y="1333" width="0.0260%" height="15" fill="rgb(224,111,15)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.03%)</title><rect x="8.9361%" y="1317" width="0.0260%" height="15" fill="rgb(253,21,26)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 0.03%)</title><rect x="8.9361%" y="1301" width="0.0260%" height="15" fill="rgb(245,139,43)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1311.50"></text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 0.03%)</title><rect x="8.9361%" y="1285" width="0.0260%" height="15" fill="rgb(252,170,7)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.03%)</title><rect x="8.9361%" y="1269" width="0.0260%" height="15" fill="rgb(231,118,14)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.03%)</title><rect x="8.9361%" y="1253" width="0.0260%" height="15" fill="rgb(238,83,0)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1263.50"></text></g><g><title>adaptive::main (18 samples, 0.03%)</title><rect x="8.9361%" y="1237" width="0.0260%" height="15" fill="rgb(221,39,39)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1247.50"></text></g><g><title>amg_match::adaptive::build_adaptive (18 samples, 0.03%)</title><rect x="8.9361%" y="1221" width="0.0260%" height="15" fill="rgb(222,119,46)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1231.50"></text></g><g><title>amg_match::partitioner::modularity_matching (18 samples, 0.03%)</title><rect x="8.9361%" y="1205" width="0.0260%" height="15" fill="rgb(222,165,49)" fg:x="6182" fg:w="18"/><text x="9.1861%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (17 samples, 0.02%)</title><rect x="8.9376%" y="1189" width="0.0246%" height="15" fill="rgb(219,113,52)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1199.50"></text></g><g><title>alloc::vec::from_elem (17 samples, 0.02%)</title><rect x="8.9376%" y="1173" width="0.0246%" height="15" fill="rgb(214,7,15)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1183.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (17 samples, 0.02%)</title><rect x="8.9376%" y="1157" width="0.0246%" height="15" fill="rgb(235,32,4)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (17 samples, 0.02%)</title><rect x="8.9376%" y="1141" width="0.0246%" height="15" fill="rgb(238,90,54)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="8.9376%" y="1125" width="0.0246%" height="15" fill="rgb(213,208,19)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (17 samples, 0.02%)</title><rect x="8.9376%" y="1109" width="0.0246%" height="15" fill="rgb(233,156,4)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="8.9376%" y="1093" width="0.0246%" height="15" fill="rgb(207,194,5)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1103.50"></text></g><g><title>alloc::alloc::alloc_zeroed (17 samples, 0.02%)</title><rect x="8.9376%" y="1077" width="0.0246%" height="15" fill="rgb(206,111,30)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1087.50"></text></g><g><title>[libc-2.33.so] (17 samples, 0.02%)</title><rect x="8.9376%" y="1061" width="0.0246%" height="15" fill="rgb(243,70,54)" fg:x="6183" fg:w="17"/><text x="9.1876%" y="1071.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (50 samples, 0.07%)</title><rect x="8.9621%" y="1445" width="0.0723%" height="15" fill="rgb(242,28,8)" fg:x="6200" fg:w="50"/><text x="9.2121%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="9.0778%" y="1125" width="0.0188%" height="15" fill="rgb(219,106,18)" fg:x="6280" fg:w="13"/><text x="9.3278%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="9.0778%" y="1109" width="0.0188%" height="15" fill="rgb(244,222,10)" fg:x="6280" fg:w="13"/><text x="9.3278%" y="1119.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (7 samples, 0.01%)</title><rect x="9.0966%" y="1125" width="0.0101%" height="15" fill="rgb(236,179,52)" fg:x="6293" fg:w="7"/><text x="9.3466%" y="1135.50"></text></g><g><title>alloc::collections::vec_deque::count (7 samples, 0.01%)</title><rect x="9.0966%" y="1109" width="0.0101%" height="15" fill="rgb(213,23,39)" fg:x="6293" fg:w="7"/><text x="9.3466%" y="1119.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (7 samples, 0.01%)</title><rect x="9.0966%" y="1093" width="0.0101%" height="15" fill="rgb(238,48,10)" fg:x="6293" fg:w="7"/><text x="9.3466%" y="1103.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (40 samples, 0.06%)</title><rect x="9.0561%" y="1141" width="0.0578%" height="15" fill="rgb(251,196,23)" fg:x="6265" fg:w="40"/><text x="9.3061%" y="1151.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (51 samples, 0.07%)</title><rect x="9.0489%" y="1157" width="0.0737%" height="15" fill="rgb(250,152,24)" fg:x="6260" fg:w="51"/><text x="9.2989%" y="1167.50"></text></g><g><title>std::rt::lang_start::{{closure}} (56 samples, 0.08%)</title><rect x="9.0489%" y="1445" width="0.0809%" height="15" fill="rgb(209,150,17)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1455.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 0.08%)</title><rect x="9.0489%" y="1429" width="0.0809%" height="15" fill="rgb(234,202,34)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1439.50"></text></g><g><title>core::ops::function::FnOnce::call_once (56 samples, 0.08%)</title><rect x="9.0489%" y="1413" width="0.0809%" height="15" fill="rgb(253,148,53)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1423.50"></text></g><g><title>adaptive::main (56 samples, 0.08%)</title><rect x="9.0489%" y="1397" width="0.0809%" height="15" fill="rgb(218,129,16)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1407.50"></text></g><g><title>amg_match::adaptive::build_adaptive (56 samples, 0.08%)</title><rect x="9.0489%" y="1381" width="0.0809%" height="15" fill="rgb(216,85,19)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1391.50"></text></g><g><title>amg_match::partitioner::modularity_matching (56 samples, 0.08%)</title><rect x="9.0489%" y="1365" width="0.0809%" height="15" fill="rgb(235,228,7)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1375.50"></text></g><g><title>amg_match::partitioner::find_pairs (56 samples, 0.08%)</title><rect x="9.0489%" y="1349" width="0.0809%" height="15" fill="rgb(245,175,0)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (56 samples, 0.08%)</title><rect x="9.0489%" y="1333" width="0.0809%" height="15" fill="rgb(208,168,36)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (56 samples, 0.08%)</title><rect x="9.0489%" y="1317" width="0.0809%" height="15" fill="rgb(246,171,24)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.08%)</title><rect x="9.0489%" y="1301" width="0.0809%" height="15" fill="rgb(215,142,24)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (56 samples, 0.08%)</title><rect x="9.0489%" y="1285" width="0.0809%" height="15" fill="rgb(250,187,7)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (56 samples, 0.08%)</title><rect x="9.0489%" y="1269" width="0.0809%" height="15" fill="rgb(228,66,33)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (56 samples, 0.08%)</title><rect x="9.0489%" y="1253" width="0.0809%" height="15" fill="rgb(234,215,21)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.08%)</title><rect x="9.0489%" y="1237" width="0.0809%" height="15" fill="rgb(222,191,20)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (56 samples, 0.08%)</title><rect x="9.0489%" y="1221" width="0.0809%" height="15" fill="rgb(245,79,54)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (56 samples, 0.08%)</title><rect x="9.0489%" y="1205" width="0.0809%" height="15" fill="rgb(240,10,37)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1215.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}} (56 samples, 0.08%)</title><rect x="9.0489%" y="1189" width="0.0809%" height="15" fill="rgb(214,192,32)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (56 samples, 0.08%)</title><rect x="9.0489%" y="1173" width="0.0809%" height="15" fill="rgb(209,36,54)" fg:x="6260" fg:w="56"/><text x="9.2989%" y="1183.50"></text></g><g><title>amg_match::partitioner::build_partition_from_pairs (20 samples, 0.03%)</title><rect x="9.1298%" y="1205" width="0.0289%" height="15" fill="rgb(220,10,11)" fg:x="6316" fg:w="20"/><text x="9.3798%" y="1215.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::coo::CooMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::from (17 samples, 0.02%)</title><rect x="9.1341%" y="1189" width="0.0246%" height="15" fill="rgb(221,106,17)" fg:x="6319" fg:w="17"/><text x="9.3841%" y="1199.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_csr (17 samples, 0.02%)</title><rect x="9.1341%" y="1173" width="0.0246%" height="15" fill="rgb(251,142,44)" fg:x="6319" fg:w="17"/><text x="9.3841%" y="1183.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs (17 samples, 0.02%)</title><rect x="9.1341%" y="1157" width="0.0246%" height="15" fill="rgb(238,13,15)" fg:x="6319" fg:w="17"/><text x="9.3841%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (71 samples, 0.10%)</title><rect x="9.2556%" y="1157" width="0.1026%" height="15" fill="rgb(208,107,27)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (71 samples, 0.10%)</title><rect x="9.2556%" y="1141" width="0.1026%" height="15" fill="rgb(205,136,37)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 0.10%)</title><rect x="9.2556%" y="1125" width="0.1026%" height="15" fill="rgb(250,205,27)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (71 samples, 0.10%)</title><rect x="9.2556%" y="1109" width="0.1026%" height="15" fill="rgb(210,80,43)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (71 samples, 0.10%)</title><rect x="9.2556%" y="1093" width="0.1026%" height="15" fill="rgb(247,160,36)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (71 samples, 0.10%)</title><rect x="9.2556%" y="1077" width="0.1026%" height="15" fill="rgb(234,13,49)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1087.50"></text></g><g><title>realloc (71 samples, 0.10%)</title><rect x="9.2556%" y="1061" width="0.1026%" height="15" fill="rgb(234,122,0)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1071.50"></text></g><g><title>[libc-2.33.so] (71 samples, 0.10%)</title><rect x="9.2556%" y="1045" width="0.1026%" height="15" fill="rgb(207,146,38)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1055.50"></text></g><g><title>[libc-2.33.so] (71 samples, 0.10%)</title><rect x="9.2556%" y="1029" width="0.1026%" height="15" fill="rgb(207,177,25)" fg:x="6403" fg:w="71"/><text x="9.5056%" y="1039.50"></text></g><g><title>amg_match::partitioner::build_sparse_modularity_matrix (163 samples, 0.24%)</title><rect x="9.1587%" y="1205" width="0.2356%" height="15" fill="rgb(211,178,42)" fg:x="6336" fg:w="163"/><text x="9.4087%" y="1215.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (163 samples, 0.24%)</title><rect x="9.1587%" y="1189" width="0.2356%" height="15" fill="rgb(230,69,54)" fg:x="6336" fg:w="163"/><text x="9.4087%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (154 samples, 0.22%)</title><rect x="9.1717%" y="1173" width="0.2226%" height="15" fill="rgb(214,135,41)" fg:x="6345" fg:w="154"/><text x="9.4217%" y="1183.50"></text></g><g><title>core::ptr::write (25 samples, 0.04%)</title><rect x="9.3582%" y="1157" width="0.0361%" height="15" fill="rgb(237,67,25)" fg:x="6474" fg:w="25"/><text x="9.6082%" y="1167.50"></text></g><g><title>nalgebra_sparse::convert::serial::combine_duplicates (48 samples, 0.07%)</title><rect x="9.3958%" y="1141" width="0.0694%" height="15" fill="rgb(222,189,50)" fg:x="6500" fg:w="48"/><text x="9.6458%" y="1151.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs::{{closure}} (32 samples, 0.05%)</title><rect x="9.4189%" y="1125" width="0.0463%" height="15" fill="rgb(245,148,34)" fg:x="6516" fg:w="32"/><text x="9.6689%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.05%)</title><rect x="9.4189%" y="1109" width="0.0463%" height="15" fill="rgb(222,29,6)" fg:x="6516" fg:w="32"/><text x="9.6689%" y="1119.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="9.4507%" y="1093" width="0.0145%" height="15" fill="rgb(221,189,43)" fg:x="6538" fg:w="10"/><text x="9.7007%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="9.5794%" y="1125" width="0.0130%" height="15" fill="rgb(207,36,27)" fg:x="6627" fg:w="9"/><text x="9.8294%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9 samples, 0.01%)</title><rect x="9.5794%" y="1109" width="0.0130%" height="15" fill="rgb(217,90,24)" fg:x="6627" fg:w="9"/><text x="9.8294%" y="1119.50"></text></g><g><title>nalgebra_sparse::convert::serial::coo_to_unsorted_cs (95 samples, 0.14%)</title><rect x="9.4652%" y="1141" width="0.1373%" height="15" fill="rgb(224,66,35)" fg:x="6548" fg:w="95"/><text x="9.7152%" y="1151.50"></text></g><g><title>nalgebra_sparse::utils::apply_permutation (27 samples, 0.04%)</title><rect x="9.6025%" y="1125" width="0.0390%" height="15" fill="rgb(221,13,50)" fg:x="6643" fg:w="27"/><text x="9.8525%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="9.6285%" y="1109" width="0.0130%" height="15" fill="rgb(236,68,49)" fg:x="6661" fg:w="9"/><text x="9.8785%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9 samples, 0.01%)</title><rect x="9.6285%" y="1093" width="0.0130%" height="15" fill="rgb(229,146,28)" fg:x="6661" fg:w="9"/><text x="9.8785%" y="1103.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::coo::CooMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::from (173 samples, 0.25%)</title><rect x="9.3943%" y="1189" width="0.2501%" height="15" fill="rgb(225,31,38)" fg:x="6499" fg:w="173"/><text x="9.6443%" y="1199.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_csr (173 samples, 0.25%)</title><rect x="9.3943%" y="1173" width="0.2501%" height="15" fill="rgb(250,208,3)" fg:x="6499" fg:w="173"/><text x="9.6443%" y="1183.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs (173 samples, 0.25%)</title><rect x="9.3943%" y="1157" width="0.2501%" height="15" fill="rgb(246,54,23)" fg:x="6499" fg:w="173"/><text x="9.6443%" y="1167.50"></text></g><g><title>nalgebra_sparse::convert::serial::sort_lane (29 samples, 0.04%)</title><rect x="9.6025%" y="1141" width="0.0419%" height="15" fill="rgb(243,76,11)" fg:x="6643" fg:w="29"/><text x="9.8525%" y="1151.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (10 samples, 0.01%)</title><rect x="9.6444%" y="1189" width="0.0145%" height="15" fill="rgb(245,21,50)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="9.6444%" y="1173" width="0.0145%" height="15" fill="rgb(228,9,43)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.01%)</title><rect x="9.6444%" y="1157" width="0.0145%" height="15" fill="rgb(208,100,47)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="9.6444%" y="1141" width="0.0145%" height="15" fill="rgb(232,26,8)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="9.6444%" y="1125" width="0.0145%" height="15" fill="rgb(216,166,38)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="9.6444%" y="1109" width="0.0145%" height="15" fill="rgb(251,202,51)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="9.6444%" y="1093" width="0.0145%" height="15" fill="rgb(254,216,34)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.01%)</title><rect x="9.6444%" y="1077" width="0.0145%" height="15" fill="rgb(251,32,27)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1087.50"></text></g><g><title>realloc (10 samples, 0.01%)</title><rect x="9.6444%" y="1061" width="0.0145%" height="15" fill="rgb(208,127,28)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1071.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="9.6444%" y="1045" width="0.0145%" height="15" fill="rgb(224,137,22)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1055.50"></text></g><g><title>[libc-2.33.so] (10 samples, 0.01%)</title><rect x="9.6444%" y="1029" width="0.0145%" height="15" fill="rgb(254,70,32)" fg:x="6672" fg:w="10"/><text x="9.8944%" y="1039.50"></text></g><g><title>amg_match::partitioner::build_weighted_matrix (203 samples, 0.29%)</title><rect x="9.3943%" y="1205" width="0.2934%" height="15" fill="rgb(229,75,37)" fg:x="6499" fg:w="203"/><text x="9.6443%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (20 samples, 0.03%)</title><rect x="9.6589%" y="1189" width="0.0289%" height="15" fill="rgb(252,64,23)" fg:x="6682" fg:w="20"/><text x="9.9089%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (20 samples, 0.03%)</title><rect x="9.6589%" y="1173" width="0.0289%" height="15" fill="rgb(232,162,48)" fg:x="6682" fg:w="20"/><text x="9.9089%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (20 samples, 0.03%)</title><rect x="9.6589%" y="1157" width="0.0289%" height="15" fill="rgb(246,160,12)" fg:x="6682" fg:w="20"/><text x="9.9089%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (20 samples, 0.03%)</title><rect x="9.6589%" y="1141" width="0.0289%" height="15" fill="rgb(247,166,0)" fg:x="6682" fg:w="20"/><text x="9.9089%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (20 samples, 0.03%)</title><rect x="9.6589%" y="1125" width="0.0289%" height="15" fill="rgb(249,219,21)" fg:x="6682" fg:w="20"/><text x="9.9089%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="9.6878%" y="1077" width="0.0116%" height="15" fill="rgb(205,209,3)" fg:x="6702" fg:w="8"/><text x="9.9378%" y="1087.50"></text></g><g><title>&lt;nalgebra_sparse::csr::CsrRowIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="9.6892%" y="1061" width="0.0101%" height="15" fill="rgb(243,44,1)" fg:x="6703" fg:w="7"/><text x="9.9392%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="9.7441%" y="869" width="0.0145%" height="15" fill="rgb(206,159,16)" fg:x="6741" fg:w="10"/><text x="9.9941%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.01%)</title><rect x="9.7441%" y="853" width="0.0145%" height="15" fill="rgb(244,77,30)" fg:x="6741" fg:w="10"/><text x="9.9941%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.05%)</title><rect x="9.7297%" y="917" width="0.0491%" height="15" fill="rgb(218,69,12)" fg:x="6731" fg:w="34"/><text x="9.9797%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (34 samples, 0.05%)</title><rect x="9.7297%" y="901" width="0.0491%" height="15" fill="rgb(212,87,7)" fg:x="6731" fg:w="34"/><text x="9.9797%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.05%)</title><rect x="9.7297%" y="885" width="0.0491%" height="15" fill="rgb(245,114,25)" fg:x="6731" fg:w="34"/><text x="9.9797%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 0.02%)</title><rect x="9.7600%" y="869" width="0.0188%" height="15" fill="rgb(210,61,42)" fg:x="6752" fg:w="13"/><text x="10.0100%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.02%)</title><rect x="9.7600%" y="853" width="0.0188%" height="15" fill="rgb(211,52,33)" fg:x="6752" fg:w="13"/><text x="10.0100%" y="863.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}}::{{closure}} (13 samples, 0.02%)</title><rect x="9.7600%" y="837" width="0.0188%" height="15" fill="rgb(234,58,33)" fg:x="6752" fg:w="13"/><text x="10.0100%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.06%)</title><rect x="9.7297%" y="933" width="0.0564%" height="15" fill="rgb(220,115,36)" fg:x="6731" fg:w="39"/><text x="9.9797%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="9.7861%" y="933" width="0.0130%" height="15" fill="rgb(243,153,54)" fg:x="6770" fg:w="9"/><text x="10.0361%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="9.7861%" y="917" width="0.0130%" height="15" fill="rgb(251,47,18)" fg:x="6770" fg:w="9"/><text x="10.0361%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="9.7861%" y="901" width="0.0130%" height="15" fill="rgb(242,102,42)" fg:x="6770" fg:w="9"/><text x="10.0361%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="9.7861%" y="885" width="0.0130%" height="15" fill="rgb(234,31,38)" fg:x="6770" fg:w="9"/><text x="10.0361%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (68 samples, 0.10%)</title><rect x="9.7109%" y="965" width="0.0983%" height="15" fill="rgb(221,117,51)" fg:x="6718" fg:w="68"/><text x="9.9609%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 0.09%)</title><rect x="9.7181%" y="949" width="0.0911%" height="15" fill="rgb(212,20,18)" fg:x="6723" fg:w="63"/><text x="9.9681%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 0.11%)</title><rect x="9.7066%" y="1029" width="0.1084%" height="15" fill="rgb(245,133,36)" fg:x="6715" fg:w="75"/><text x="9.9566%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (75 samples, 0.11%)</title><rect x="9.7066%" y="1013" width="0.1084%" height="15" fill="rgb(212,6,19)" fg:x="6715" fg:w="75"/><text x="9.9566%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.11%)</title><rect x="9.7080%" y="997" width="0.1070%" height="15" fill="rgb(218,1,36)" fg:x="6716" fg:w="74"/><text x="9.9580%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (74 samples, 0.11%)</title><rect x="9.7080%" y="981" width="0.1070%" height="15" fill="rgb(246,84,54)" fg:x="6716" fg:w="74"/><text x="9.9580%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.13%)</title><rect x="9.6878%" y="1093" width="0.1286%" height="15" fill="rgb(242,110,6)" fg:x="6702" fg:w="89"/><text x="9.9378%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.12%)</title><rect x="9.6993%" y="1077" width="0.1171%" height="15" fill="rgb(214,47,5)" fg:x="6710" fg:w="81"/><text x="9.9493%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (80 samples, 0.12%)</title><rect x="9.7008%" y="1061" width="0.1156%" height="15" fill="rgb(218,159,25)" fg:x="6711" fg:w="80"/><text x="9.9508%" y="1071.50"></text></g><g><title>amg_match::partitioner::find_pairs::{{closure}} (78 samples, 0.11%)</title><rect x="9.7037%" y="1045" width="0.1127%" height="15" fill="rgb(215,211,28)" fg:x="6713" fg:w="78"/><text x="9.9537%" y="1055.50"></text></g><g><title>amg_match::partitioner::find_pairs (92 samples, 0.13%)</title><rect x="9.6878%" y="1205" width="0.1330%" height="15" fill="rgb(238,59,32)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (92 samples, 0.13%)</title><rect x="9.6878%" y="1189" width="0.1330%" height="15" fill="rgb(226,82,3)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (92 samples, 0.13%)</title><rect x="9.6878%" y="1173" width="0.1330%" height="15" fill="rgb(240,164,32)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 0.13%)</title><rect x="9.6878%" y="1157" width="0.1330%" height="15" fill="rgb(232,46,7)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (92 samples, 0.13%)</title><rect x="9.6878%" y="1141" width="0.1330%" height="15" fill="rgb(229,129,53)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (92 samples, 0.13%)</title><rect x="9.6878%" y="1125" width="0.1330%" height="15" fill="rgb(234,188,29)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (92 samples, 0.13%)</title><rect x="9.6878%" y="1109" width="0.1330%" height="15" fill="rgb(246,141,4)" fg:x="6702" fg:w="92"/><text x="9.9378%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (27 samples, 0.04%)</title><rect x="10.1908%" y="1173" width="0.0390%" height="15" fill="rgb(229,23,39)" fg:x="7050" fg:w="27"/><text x="10.4408%" y="1183.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (25 samples, 0.04%)</title><rect x="10.1937%" y="1157" width="0.0361%" height="15" fill="rgb(206,12,3)" fg:x="7052" fg:w="25"/><text x="10.4437%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (23 samples, 0.03%)</title><rect x="10.1966%" y="1141" width="0.0332%" height="15" fill="rgb(252,226,20)" fg:x="7054" fg:w="23"/><text x="10.4466%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.10%)</title><rect x="10.2298%" y="1173" width="0.0954%" height="15" fill="rgb(216,123,35)" fg:x="7077" fg:w="66"/><text x="10.4798%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.06%)</title><rect x="10.3252%" y="1173" width="0.0622%" height="15" fill="rgb(212,68,40)" fg:x="7143" fg:w="43"/><text x="10.5752%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (66 samples, 0.10%)</title><rect x="10.3874%" y="1173" width="0.0954%" height="15" fill="rgb(254,125,32)" fg:x="7186" fg:w="66"/><text x="10.6374%" y="1183.50"></text></g><g><title>core::ptr::write (15 samples, 0.02%)</title><rect x="10.4611%" y="1157" width="0.0217%" height="15" fill="rgb(253,97,22)" fg:x="7237" fg:w="15"/><text x="10.7111%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (518 samples, 0.75%)</title><rect x="9.8208%" y="1205" width="0.7488%" height="15" fill="rgb(241,101,14)" fg:x="6794" fg:w="518"/><text x="10.0708%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::serial::pattern::spmm_csr_pattern (518 samples, 0.75%)</title><rect x="9.8208%" y="1189" width="0.7488%" height="15" fill="rgb(238,103,29)" fg:x="6794" fg:w="518"/><text x="10.0708%" y="1199.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::lane (58 samples, 0.08%)</title><rect x="10.4857%" y="1173" width="0.0838%" height="15" fill="rgb(233,195,47)" fg:x="7254" fg:w="58"/><text x="10.7357%" y="1183.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (58 samples, 0.08%)</title><rect x="10.4857%" y="1157" width="0.0838%" height="15" fill="rgb(246,218,30)" fg:x="7254" fg:w="58"/><text x="10.7357%" y="1167.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23 samples, 0.03%)</title><rect x="10.5363%" y="1141" width="0.0332%" height="15" fill="rgb(219,145,47)" fg:x="7289" fg:w="23"/><text x="10.7863%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23 samples, 0.03%)</title><rect x="10.5363%" y="1125" width="0.0332%" height="15" fill="rgb(243,12,26)" fg:x="7289" fg:w="23"/><text x="10.7863%" y="1135.50"></text></g><g><title>[unknown] (7,015 samples, 10.14%)</title><rect x="0.4423%" y="1461" width="10.1402%" height="15" fill="rgb(214,87,16)" fg:x="306" fg:w="7015"/><text x="0.6923%" y="1471.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1445" width="1.4527%" height="15" fill="rgb(208,99,42)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1429" width="1.4527%" height="15" fill="rgb(253,99,2)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1439.50"></text></g><g><title>std::panicking::try (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1413" width="1.4527%" height="15" fill="rgb(220,168,23)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1397" width="1.4527%" height="15" fill="rgb(242,38,24)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1407.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1381" width="1.4527%" height="15" fill="rgb(225,182,9)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1365" width="1.4527%" height="15" fill="rgb(243,178,37)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1375.50"></text></g><g><title>std::panicking::try (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1349" width="1.4527%" height="15" fill="rgb(232,139,19)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1333" width="1.4527%" height="15" fill="rgb(225,201,24)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1317" width="1.4527%" height="15" fill="rgb(221,47,46)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1327.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1301" width="1.4527%" height="15" fill="rgb(249,23,13)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1311.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1285" width="1.4527%" height="15" fill="rgb(219,9,5)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1269" width="1.4527%" height="15" fill="rgb(254,171,16)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1279.50"></text></g><g><title>adaptive::main (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1253" width="1.4527%" height="15" fill="rgb(230,171,20)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1263.50"></text></g><g><title>amg_match::adaptive::build_adaptive (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1237" width="1.4527%" height="15" fill="rgb(210,71,41)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1247.50"></text></g><g><title>amg_match::partitioner::modularity_matching (1,005 samples, 1.45%)</title><rect x="9.1298%" y="1221" width="1.4527%" height="15" fill="rgb(206,173,20)" fg:x="6316" fg:w="1005"/><text x="9.3798%" y="1231.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (9 samples, 0.01%)</title><rect x="10.5695%" y="1205" width="0.0130%" height="15" fill="rgb(233,88,34)" fg:x="7312" fg:w="9"/><text x="10.8195%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (9 samples, 0.01%)</title><rect x="10.5695%" y="1189" width="0.0130%" height="15" fill="rgb(223,209,46)" fg:x="7312" fg:w="9"/><text x="10.8195%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (9 samples, 0.01%)</title><rect x="10.5695%" y="1173" width="0.0130%" height="15" fill="rgb(250,43,18)" fg:x="7312" fg:w="9"/><text x="10.8195%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (9 samples, 0.01%)</title><rect x="10.5695%" y="1157" width="0.0130%" height="15" fill="rgb(208,13,10)" fg:x="7312" fg:w="9"/><text x="10.8195%" y="1167.50"></text></g><g><title>&lt;amg_match::preconditioner::L1 as amg_match::preconditioner::Preconditioner&gt;::apply (7 samples, 0.01%)</title><rect x="10.5825%" y="1125" width="0.0101%" height="15" fill="rgb(212,200,36)" fg:x="7321" fg:w="7"/><text x="10.8325%" y="1135.50"></text></g><g><title>nalgebra::base::componentwise::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::component_mul_assign (7 samples, 0.01%)</title><rect x="10.5825%" y="1109" width="0.0101%" height="15" fill="rgb(225,90,30)" fg:x="7321" fg:w="7"/><text x="10.8325%" y="1119.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="11.4903%" y="1045" width="0.0260%" height="15" fill="rgb(236,182,39)" fg:x="7949" fg:w="18"/><text x="11.7403%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (278 samples, 0.40%)</title><rect x="11.1506%" y="1077" width="0.4019%" height="15" fill="rgb(212,144,35)" fg:x="7714" fg:w="278"/><text x="11.4006%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (278 samples, 0.40%)</title><rect x="11.1506%" y="1061" width="0.4019%" height="15" fill="rgb(228,63,44)" fg:x="7714" fg:w="278"/><text x="11.4006%" y="1071.50"></text></g><g><title>&lt;nalgebra_sparse::cs::CsLaneIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.04%)</title><rect x="11.5163%" y="1045" width="0.0361%" height="15" fill="rgb(228,109,6)" fg:x="7967" fg:w="25"/><text x="11.7663%" y="1055.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (21 samples, 0.03%)</title><rect x="11.5221%" y="1029" width="0.0304%" height="15" fill="rgb(238,117,24)" fg:x="7971" fg:w="21"/><text x="11.7721%" y="1039.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (11 samples, 0.02%)</title><rect x="11.5525%" y="1077" width="0.0159%" height="15" fill="rgb(242,26,26)" fg:x="7992" fg:w="11"/><text x="11.8025%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (164 samples, 0.24%)</title><rect x="11.5684%" y="1077" width="0.2371%" height="15" fill="rgb(221,92,48)" fg:x="8003" fg:w="164"/><text x="11.8184%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (15 samples, 0.02%)</title><rect x="11.8054%" y="1077" width="0.0217%" height="15" fill="rgb(209,209,32)" fg:x="8167" fg:w="15"/><text x="12.0554%" y="1087.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (196 samples, 0.28%)</title><rect x="11.8315%" y="1077" width="0.2833%" height="15" fill="rgb(221,70,22)" fg:x="8185" fg:w="196"/><text x="12.0815%" y="1087.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (196 samples, 0.28%)</title><rect x="11.8315%" y="1061" width="0.2833%" height="15" fill="rgb(248,145,5)" fg:x="8185" fg:w="196"/><text x="12.0815%" y="1071.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (196 samples, 0.28%)</title><rect x="11.8315%" y="1045" width="0.2833%" height="15" fill="rgb(226,116,26)" fg:x="8185" fg:w="196"/><text x="12.0815%" y="1055.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (196 samples, 0.28%)</title><rect x="11.8315%" y="1029" width="0.2833%" height="15" fill="rgb(244,5,17)" fg:x="8185" fg:w="196"/><text x="12.0815%" y="1039.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (196 samples, 0.28%)</title><rect x="11.8315%" y="1013" width="0.2833%" height="15" fill="rgb(252,159,33)" fg:x="8185" fg:w="196"/><text x="12.0815%" y="1023.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (195 samples, 0.28%)</title><rect x="11.8329%" y="997" width="0.2819%" height="15" fill="rgb(206,71,0)" fg:x="8186" fg:w="195"/><text x="12.0829%" y="1007.50"></text></g><g><title>&lt;amg_match::preconditioner::Multilevel&lt;amg_match::preconditioner::L1&gt; as amg_match::preconditioner::Preconditioner&gt;::apply (1,063 samples, 1.54%)</title><rect x="10.5825%" y="1141" width="1.5366%" height="15" fill="rgb(233,118,54)" fg:x="7321" fg:w="1063"/><text x="10.8325%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (1,040 samples, 1.50%)</title><rect x="10.6158%" y="1125" width="1.5033%" height="15" fill="rgb(234,83,48)" fg:x="7344" fg:w="1040"/><text x="10.8658%" y="1135.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (1,040 samples, 1.50%)</title><rect x="10.6158%" y="1109" width="1.5033%" height="15" fill="rgb(228,3,54)" fg:x="7344" fg:w="1040"/><text x="10.8658%" y="1119.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (1,040 samples, 1.50%)</title><rect x="10.6158%" y="1093" width="1.5033%" height="15" fill="rgb(226,155,13)" fg:x="7344" fg:w="1040"/><text x="10.8658%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.03%)</title><rect x="12.2029%" y="1093" width="0.0347%" height="15" fill="rgb(241,28,37)" fg:x="8442" fg:w="24"/><text x="12.4529%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (24 samples, 0.03%)</title><rect x="12.2029%" y="1077" width="0.0347%" height="15" fill="rgb(233,93,10)" fg:x="8442" fg:w="24"/><text x="12.4529%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (10 samples, 0.01%)</title><rect x="12.2391%" y="1093" width="0.0145%" height="15" fill="rgb(225,113,19)" fg:x="8467" fg:w="10"/><text x="12.4891%" y="1103.50"></text></g><g><title>&lt;amg_match::preconditioner::Composite as amg_match::preconditioner::Preconditioner&gt;::apply (1,184 samples, 1.71%)</title><rect x="10.5825%" y="1157" width="1.7115%" height="15" fill="rgb(241,2,18)" fg:x="7321" fg:w="1184"/><text x="10.8325%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (119 samples, 0.17%)</title><rect x="12.1220%" y="1141" width="0.1720%" height="15" fill="rgb(228,207,21)" fg:x="8386" fg:w="119"/><text x="12.3720%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (119 samples, 0.17%)</title><rect x="12.1220%" y="1125" width="0.1720%" height="15" fill="rgb(213,211,35)" fg:x="8386" fg:w="119"/><text x="12.3720%" y="1135.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (119 samples, 0.17%)</title><rect x="12.1220%" y="1109" width="0.1720%" height="15" fill="rgb(209,83,10)" fg:x="8386" fg:w="119"/><text x="12.3720%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (26 samples, 0.04%)</title><rect x="12.2564%" y="1093" width="0.0376%" height="15" fill="rgb(209,164,1)" fg:x="8479" fg:w="26"/><text x="12.5064%" y="1103.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (26 samples, 0.04%)</title><rect x="12.2564%" y="1077" width="0.0376%" height="15" fill="rgb(213,184,43)" fg:x="8479" fg:w="26"/><text x="12.5064%" y="1087.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (26 samples, 0.04%)</title><rect x="12.2564%" y="1061" width="0.0376%" height="15" fill="rgb(231,61,34)" fg:x="8479" fg:w="26"/><text x="12.5064%" y="1071.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (25 samples, 0.04%)</title><rect x="12.2579%" y="1045" width="0.0361%" height="15" fill="rgb(235,75,3)" fg:x="8480" fg:w="25"/><text x="12.5079%" y="1055.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (25 samples, 0.04%)</title><rect x="12.2579%" y="1029" width="0.0361%" height="15" fill="rgb(220,106,47)" fg:x="8480" fg:w="25"/><text x="12.5079%" y="1039.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (25 samples, 0.04%)</title><rect x="12.2579%" y="1013" width="0.0361%" height="15" fill="rgb(210,196,33)" fg:x="8480" fg:w="25"/><text x="12.5079%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.3316%" y="1093" width="0.0159%" height="15" fill="rgb(229,154,42)" fg:x="8531" fg:w="11"/><text x="12.5816%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (11 samples, 0.02%)</title><rect x="12.3316%" y="1077" width="0.0159%" height="15" fill="rgb(228,114,26)" fg:x="8531" fg:w="11"/><text x="12.5816%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (8 samples, 0.01%)</title><rect x="12.3489%" y="1093" width="0.0116%" height="15" fill="rgb(208,144,1)" fg:x="8543" fg:w="8"/><text x="12.5989%" y="1103.50"></text></g><g><title>amg_match::adaptive::stationary_composite (1,244 samples, 1.80%)</title><rect x="10.5825%" y="1173" width="1.7982%" height="15" fill="rgb(239,112,37)" fg:x="7321" fg:w="1244"/><text x="10.8325%" y="1183.50">a..</text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (59 samples, 0.09%)</title><rect x="12.2955%" y="1157" width="0.0853%" height="15" fill="rgb(210,96,50)" fg:x="8506" fg:w="59"/><text x="12.5455%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (59 samples, 0.09%)</title><rect x="12.2955%" y="1141" width="0.0853%" height="15" fill="rgb(222,178,2)" fg:x="8506" fg:w="59"/><text x="12.5455%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (59 samples, 0.09%)</title><rect x="12.2955%" y="1125" width="0.0853%" height="15" fill="rgb(226,74,18)" fg:x="8506" fg:w="59"/><text x="12.5455%" y="1135.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (59 samples, 0.09%)</title><rect x="12.2955%" y="1109" width="0.0853%" height="15" fill="rgb(225,67,54)" fg:x="8506" fg:w="59"/><text x="12.5455%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (13 samples, 0.02%)</title><rect x="12.3620%" y="1093" width="0.0188%" height="15" fill="rgb(251,92,32)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1103.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (13 samples, 0.02%)</title><rect x="12.3620%" y="1077" width="0.0188%" height="15" fill="rgb(228,149,22)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1087.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (13 samples, 0.02%)</title><rect x="12.3620%" y="1061" width="0.0188%" height="15" fill="rgb(243,54,13)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1071.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (13 samples, 0.02%)</title><rect x="12.3620%" y="1045" width="0.0188%" height="15" fill="rgb(243,180,28)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1055.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (13 samples, 0.02%)</title><rect x="12.3620%" y="1029" width="0.0188%" height="15" fill="rgb(208,167,24)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1039.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (13 samples, 0.02%)</title><rect x="12.3620%" y="1013" width="0.0188%" height="15" fill="rgb(245,73,45)" fg:x="8552" fg:w="13"/><text x="12.6120%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="12.4140%" y="1109" width="0.0289%" height="15" fill="rgb(237,203,48)" fg:x="8588" fg:w="20"/><text x="12.6640%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20 samples, 0.03%)</title><rect x="12.4140%" y="1093" width="0.0289%" height="15" fill="rgb(211,197,16)" fg:x="8588" fg:w="20"/><text x="12.6640%" y="1103.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (11 samples, 0.02%)</title><rect x="12.4429%" y="1109" width="0.0159%" height="15" fill="rgb(243,99,51)" fg:x="8608" fg:w="11"/><text x="12.6929%" y="1119.50"></text></g><g><title>amg_match::adaptive::find_near_null (1,313 samples, 1.90%)</title><rect x="10.5825%" y="1189" width="1.8979%" height="15" fill="rgb(215,123,29)" fg:x="7321" fg:w="1313"/><text x="10.8325%" y="1199.50">a..</text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (69 samples, 0.10%)</title><rect x="12.3807%" y="1173" width="0.0997%" height="15" fill="rgb(239,186,37)" fg:x="8565" fg:w="69"/><text x="12.6307%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (69 samples, 0.10%)</title><rect x="12.3807%" y="1157" width="0.0997%" height="15" fill="rgb(252,136,39)" fg:x="8565" fg:w="69"/><text x="12.6307%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (69 samples, 0.10%)</title><rect x="12.3807%" y="1141" width="0.0997%" height="15" fill="rgb(223,213,32)" fg:x="8565" fg:w="69"/><text x="12.6307%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (69 samples, 0.10%)</title><rect x="12.3807%" y="1125" width="0.0997%" height="15" fill="rgb(233,115,5)" fg:x="8565" fg:w="69"/><text x="12.6307%" y="1135.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (13 samples, 0.02%)</title><rect x="12.4617%" y="1109" width="0.0188%" height="15" fill="rgb(207,226,44)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (13 samples, 0.02%)</title><rect x="12.4617%" y="1093" width="0.0188%" height="15" fill="rgb(208,126,0)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1103.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (13 samples, 0.02%)</title><rect x="12.4617%" y="1077" width="0.0188%" height="15" fill="rgb(244,66,21)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1087.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (13 samples, 0.02%)</title><rect x="12.4617%" y="1061" width="0.0188%" height="15" fill="rgb(222,97,12)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1071.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (13 samples, 0.02%)</title><rect x="12.4617%" y="1045" width="0.0188%" height="15" fill="rgb(219,213,19)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1055.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (13 samples, 0.02%)</title><rect x="12.4617%" y="1029" width="0.0188%" height="15" fill="rgb(252,169,30)" fg:x="8621" fg:w="13"/><text x="12.7117%" y="1039.50"></text></g><g><title>amg_match::partitioner::build_partition_from_pairs (7 samples, 0.01%)</title><rect x="12.4805%" y="1173" width="0.0101%" height="15" fill="rgb(206,32,51)" fg:x="8634" fg:w="7"/><text x="12.7305%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5311%" y="1157" width="0.0159%" height="15" fill="rgb(250,172,42)" fg:x="8669" fg:w="11"/><text x="12.7811%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.02%)</title><rect x="12.5311%" y="1141" width="0.0159%" height="15" fill="rgb(209,34,43)" fg:x="8669" fg:w="11"/><text x="12.7811%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.02%)</title><rect x="12.5311%" y="1125" width="0.0159%" height="15" fill="rgb(223,11,35)" fg:x="8669" fg:w="11"/><text x="12.7811%" y="1135.50"></text></g><g><title>&lt;nalgebra_sparse::csr::CsrTripletIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5311%" y="1109" width="0.0159%" height="15" fill="rgb(251,219,26)" fg:x="8669" fg:w="11"/><text x="12.7811%" y="1119.50"></text></g><g><title>&lt;nalgebra_sparse::pattern::SparsityPatternIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="12.5369%" y="1093" width="0.0101%" height="15" fill="rgb(231,119,3)" fg:x="8673" fg:w="7"/><text x="12.7869%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (7 samples, 0.01%)</title><rect x="12.5369%" y="1077" width="0.0101%" height="15" fill="rgb(216,97,11)" fg:x="8673" fg:w="7"/><text x="12.7869%" y="1087.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (8 samples, 0.01%)</title><rect x="12.5470%" y="1141" width="0.0116%" height="15" fill="rgb(223,59,9)" fg:x="8680" fg:w="8"/><text x="12.7970%" y="1151.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (20 samples, 0.03%)</title><rect x="12.5470%" y="1157" width="0.0289%" height="15" fill="rgb(233,93,31)" fg:x="8680" fg:w="20"/><text x="12.7970%" y="1167.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (12 samples, 0.02%)</title><rect x="12.5585%" y="1141" width="0.0173%" height="15" fill="rgb(239,81,33)" fg:x="8688" fg:w="12"/><text x="12.8085%" y="1151.50"></text></g><g><title>amg_match::partitioner::build_weighted_matrix (116 samples, 0.17%)</title><rect x="12.4906%" y="1173" width="0.1677%" height="15" fill="rgb(213,120,34)" fg:x="8641" fg:w="116"/><text x="12.7406%" y="1183.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::push (57 samples, 0.08%)</title><rect x="12.5759%" y="1157" width="0.0824%" height="15" fill="rgb(243,49,53)" fg:x="8700" fg:w="57"/><text x="12.8259%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.08%)</title><rect x="12.5817%" y="1141" width="0.0766%" height="15" fill="rgb(247,216,33)" fg:x="8704" fg:w="53"/><text x="12.8317%" y="1151.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="12.6453%" y="1125" width="0.0130%" height="15" fill="rgb(226,26,14)" fg:x="8748" fg:w="9"/><text x="12.8953%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.01%)</title><rect x="12.7016%" y="1157" width="0.0101%" height="15" fill="rgb(215,49,53)" fg:x="8787" fg:w="7"/><text x="12.9516%" y="1167.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="12.7016%" y="1141" width="0.0101%" height="15" fill="rgb(245,162,40)" fg:x="8787" fg:w="7"/><text x="12.9516%" y="1151.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="12.7016%" y="1125" width="0.0101%" height="15" fill="rgb(229,68,17)" fg:x="8787" fg:w="7"/><text x="12.9516%" y="1135.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front (10 samples, 0.01%)</title><rect x="12.7161%" y="1157" width="0.0145%" height="15" fill="rgb(213,182,10)" fg:x="8797" fg:w="10"/><text x="12.9661%" y="1167.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="12.7161%" y="1141" width="0.0145%" height="15" fill="rgb(245,125,30)" fg:x="8797" fg:w="10"/><text x="12.9661%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (16 samples, 0.02%)</title><rect x="12.7349%" y="1141" width="0.0231%" height="15" fill="rgb(232,202,2)" fg:x="8810" fg:w="16"/><text x="12.9849%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (19 samples, 0.03%)</title><rect x="12.7320%" y="1157" width="0.0275%" height="15" fill="rgb(237,140,51)" fg:x="8808" fg:w="19"/><text x="12.9820%" y="1167.50"></text></g><g><title>amg_match::partitioner::modularity_matching (198 samples, 0.29%)</title><rect x="12.4805%" y="1189" width="0.2862%" height="15" fill="rgb(236,157,25)" fg:x="8634" fg:w="198"/><text x="12.7305%" y="1199.50"></text></g><g><title>amg_match::partitioner::find_pairs (75 samples, 0.11%)</title><rect x="12.6583%" y="1173" width="0.1084%" height="15" fill="rgb(219,209,0)" fg:x="8757" fg:w="75"/><text x="12.9083%" y="1183.50"></text></g><g><title>amg_match::preconditioner::L1::new (8 samples, 0.01%)</title><rect x="12.7667%" y="1189" width="0.0116%" height="15" fill="rgb(240,116,54)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="12.7667%" y="1173" width="0.0116%" height="15" fill="rgb(216,10,36)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="12.7667%" y="1157" width="0.0116%" height="15" fill="rgb(222,72,44)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="12.7667%" y="1141" width="0.0116%" height="15" fill="rgb(232,159,9)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="12.7667%" y="1125" width="0.0116%" height="15" fill="rgb(210,39,32)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="12.7667%" y="1109" width="0.0116%" height="15" fill="rgb(216,194,45)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.01%)</title><rect x="12.7667%" y="1093" width="0.0116%" height="15" fill="rgb(218,18,35)" fg:x="8832" fg:w="8"/><text x="13.0167%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="12.7681%" y="1077" width="0.0101%" height="15" fill="rgb(207,83,51)" fg:x="8833" fg:w="7"/><text x="13.0181%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="12.7797%" y="1061" width="0.0188%" height="15" fill="rgb(225,63,43)" fg:x="8841" fg:w="13"/><text x="13.0297%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="12.7826%" y="1045" width="0.0159%" height="15" fill="rgb(207,57,36)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.02%)</title><rect x="12.7826%" y="1029" width="0.0159%" height="15" fill="rgb(216,99,33)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="1039.50"></text></g><g><title>amg_match::preconditioner::L1::new::{{closure}} (11 samples, 0.02%)</title><rect x="12.7826%" y="1013" width="0.0159%" height="15" fill="rgb(225,42,16)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (11 samples, 0.02%)</title><rect x="12.7826%" y="997" width="0.0159%" height="15" fill="rgb(220,201,45)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="1007.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (11 samples, 0.02%)</title><rect x="12.7826%" y="981" width="0.0159%" height="15" fill="rgb(225,33,4)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="12.7826%" y="965" width="0.0159%" height="15" fill="rgb(224,33,50)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.02%)</title><rect x="12.7826%" y="949" width="0.0159%" height="15" fill="rgb(246,198,51)" fg:x="8843" fg:w="11"/><text x="13.0326%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.01%)</title><rect x="12.7884%" y="933" width="0.0101%" height="15" fill="rgb(205,22,4)" fg:x="8847" fg:w="7"/><text x="13.0384%" y="943.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.01%)</title><rect x="12.7884%" y="917" width="0.0101%" height="15" fill="rgb(206,3,8)" fg:x="8847" fg:w="7"/><text x="13.0384%" y="927.50"></text></g><g><title>amg_match::preconditioner::L1::new (15 samples, 0.02%)</title><rect x="12.7783%" y="1173" width="0.0217%" height="15" fill="rgb(251,23,15)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="12.7783%" y="1157" width="0.0217%" height="15" fill="rgb(252,88,28)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="12.7783%" y="1141" width="0.0217%" height="15" fill="rgb(212,127,14)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="12.7783%" y="1125" width="0.0217%" height="15" fill="rgb(247,145,37)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="12.7783%" y="1109" width="0.0217%" height="15" fill="rgb(209,117,53)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="12.7783%" y="1093" width="0.0217%" height="15" fill="rgb(212,90,42)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.02%)</title><rect x="12.7783%" y="1077" width="0.0217%" height="15" fill="rgb(218,164,37)" fg:x="8840" fg:w="15"/><text x="13.0283%" y="1087.50"></text></g><g><title>amg_match::preconditioner::Multilevel&lt;amg_match::preconditioner::L1&gt;::new (20 samples, 0.03%)</title><rect x="12.7783%" y="1189" width="0.0289%" height="15" fill="rgb(246,65,34)" fg:x="8840" fg:w="20"/><text x="13.0283%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.03%)</title><rect x="12.8953%" y="1125" width="0.0347%" height="15" fill="rgb(231,100,33)" fg:x="8921" fg:w="24"/><text x="13.1453%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (24 samples, 0.03%)</title><rect x="12.8953%" y="1109" width="0.0347%" height="15" fill="rgb(228,126,14)" fg:x="8921" fg:w="24"/><text x="13.1453%" y="1119.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (13 samples, 0.02%)</title><rect x="12.9329%" y="1125" width="0.0188%" height="15" fill="rgb(215,173,21)" fg:x="8947" fg:w="13"/><text x="13.1829%" y="1135.50"></text></g><g><title>amg_match::solver::pcg (125 samples, 0.18%)</title><rect x="12.8101%" y="1189" width="0.1807%" height="15" fill="rgb(210,6,40)" fg:x="8862" fg:w="125"/><text x="13.0601%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (119 samples, 0.17%)</title><rect x="12.8187%" y="1173" width="0.1720%" height="15" fill="rgb(212,48,18)" fg:x="8868" fg:w="119"/><text x="13.0687%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (119 samples, 0.17%)</title><rect x="12.8187%" y="1157" width="0.1720%" height="15" fill="rgb(230,214,11)" fg:x="8868" fg:w="119"/><text x="13.0687%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (119 samples, 0.17%)</title><rect x="12.8187%" y="1141" width="0.1720%" height="15" fill="rgb(254,105,39)" fg:x="8868" fg:w="119"/><text x="13.0687%" y="1151.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (25 samples, 0.04%)</title><rect x="12.9546%" y="1125" width="0.0361%" height="15" fill="rgb(245,158,5)" fg:x="8962" fg:w="25"/><text x="13.2046%" y="1135.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (25 samples, 0.04%)</title><rect x="12.9546%" y="1109" width="0.0361%" height="15" fill="rgb(249,208,11)" fg:x="8962" fg:w="25"/><text x="13.2046%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (25 samples, 0.04%)</title><rect x="12.9546%" y="1093" width="0.0361%" height="15" fill="rgb(210,39,28)" fg:x="8962" fg:w="25"/><text x="13.2046%" y="1103.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (25 samples, 0.04%)</title><rect x="12.9546%" y="1077" width="0.0361%" height="15" fill="rgb(211,56,53)" fg:x="8962" fg:w="25"/><text x="13.2046%" y="1087.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (25 samples, 0.04%)</title><rect x="12.9546%" y="1061" width="0.0361%" height="15" fill="rgb(226,201,30)" fg:x="8962" fg:w="25"/><text x="13.2046%" y="1071.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (24 samples, 0.03%)</title><rect x="12.9561%" y="1045" width="0.0347%" height="15" fill="rgb(239,101,34)" fg:x="8963" fg:w="24"/><text x="13.2061%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="13.0471%" y="1125" width="0.0289%" height="15" fill="rgb(226,209,5)" fg:x="9026" fg:w="20"/><text x="13.2971%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20 samples, 0.03%)</title><rect x="13.0471%" y="1109" width="0.0289%" height="15" fill="rgb(250,105,47)" fg:x="9026" fg:w="20"/><text x="13.2971%" y="1119.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (17 samples, 0.02%)</title><rect x="13.0760%" y="1125" width="0.0246%" height="15" fill="rgb(230,72,3)" fg:x="9046" fg:w="17"/><text x="13.3260%" y="1135.50"></text></g><g><title>amg_match::adaptive::build_adaptive (1,783 samples, 2.58%)</title><rect x="10.5825%" y="1205" width="2.5773%" height="15" fill="rgb(232,218,39)" fg:x="7321" fg:w="1783"/><text x="10.8325%" y="1215.50">am..</text></g><g><title>amg_match::solver::stationary (117 samples, 0.17%)</title><rect x="12.9907%" y="1189" width="0.1691%" height="15" fill="rgb(248,166,6)" fg:x="8987" fg:w="117"/><text x="13.2407%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (115 samples, 0.17%)</title><rect x="12.9936%" y="1173" width="0.1662%" height="15" fill="rgb(247,89,20)" fg:x="8989" fg:w="115"/><text x="13.2436%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (115 samples, 0.17%)</title><rect x="12.9936%" y="1157" width="0.1662%" height="15" fill="rgb(248,130,54)" fg:x="8989" fg:w="115"/><text x="13.2436%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (115 samples, 0.17%)</title><rect x="12.9936%" y="1141" width="0.1662%" height="15" fill="rgb(234,196,4)" fg:x="8989" fg:w="115"/><text x="13.2436%" y="1151.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (39 samples, 0.06%)</title><rect x="13.1035%" y="1125" width="0.0564%" height="15" fill="rgb(250,143,31)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1135.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (39 samples, 0.06%)</title><rect x="13.1035%" y="1109" width="0.0564%" height="15" fill="rgb(211,110,34)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (39 samples, 0.06%)</title><rect x="13.1035%" y="1093" width="0.0564%" height="15" fill="rgb(215,124,48)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1103.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (39 samples, 0.06%)</title><rect x="13.1035%" y="1077" width="0.0564%" height="15" fill="rgb(216,46,13)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1087.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (39 samples, 0.06%)</title><rect x="13.1035%" y="1061" width="0.0564%" height="15" fill="rgb(205,184,25)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1071.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (39 samples, 0.06%)</title><rect x="13.1035%" y="1045" width="0.0564%" height="15" fill="rgb(228,1,10)" fg:x="9065" fg:w="39"/><text x="13.3535%" y="1055.50"></text></g><g><title>&lt;f64 as core::ops::arith::MulAssign&gt;::mul_assign (126 samples, 0.18%)</title><rect x="13.3145%" y="1125" width="0.1821%" height="15" fill="rgb(213,116,27)" fg:x="9211" fg:w="126"/><text x="13.5645%" y="1135.50"></text></g><g><title>&lt;amg_match::preconditioner::L1 as amg_match::preconditioner::Preconditioner&gt;::apply (247 samples, 0.36%)</title><rect x="13.1628%" y="1157" width="0.3570%" height="15" fill="rgb(241,95,50)" fg:x="9106" fg:w="247"/><text x="13.4128%" y="1167.50"></text></g><g><title>nalgebra::base::componentwise::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::component_mul_assign (247 samples, 0.36%)</title><rect x="13.1628%" y="1141" width="0.3570%" height="15" fill="rgb(238,48,32)" fg:x="9106" fg:w="247"/><text x="13.4128%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="13.4967%" y="1125" width="0.0231%" height="15" fill="rgb(235,113,49)" fg:x="9337" fg:w="16"/><text x="13.7467%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.02%)</title><rect x="13.4967%" y="1109" width="0.0231%" height="15" fill="rgb(205,127,43)" fg:x="9337" fg:w="16"/><text x="13.7467%" y="1119.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (15 samples, 0.02%)</title><rect x="13.4981%" y="1093" width="0.0217%" height="15" fill="rgb(250,162,2)" fg:x="9338" fg:w="15"/><text x="13.7481%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (15 samples, 0.02%)</title><rect x="13.4981%" y="1077" width="0.0217%" height="15" fill="rgb(220,13,41)" fg:x="9338" fg:w="15"/><text x="13.7481%" y="1087.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="13.5285%" y="1077" width="0.0101%" height="15" fill="rgb(249,221,25)" fg:x="9359" fg:w="7"/><text x="13.7785%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.02%)</title><rect x="13.5285%" y="1141" width="0.0217%" height="15" fill="rgb(215,208,19)" fg:x="9359" fg:w="15"/><text x="13.7785%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.02%)</title><rect x="13.5285%" y="1125" width="0.0217%" height="15" fill="rgb(236,175,2)" fg:x="9359" fg:w="15"/><text x="13.7785%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="13.5285%" y="1109" width="0.0217%" height="15" fill="rgb(241,52,2)" fg:x="9359" fg:w="15"/><text x="13.7785%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.02%)</title><rect x="13.5285%" y="1093" width="0.0217%" height="15" fill="rgb(248,140,14)" fg:x="9359" fg:w="15"/><text x="13.7785%" y="1103.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="13.5386%" y="1077" width="0.0116%" height="15" fill="rgb(253,22,42)" fg:x="9366" fg:w="8"/><text x="13.7886%" y="1087.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="13.8378%" y="1061" width="0.0159%" height="15" fill="rgb(234,61,47)" fg:x="9573" fg:w="11"/><text x="14.0878%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.17%)</title><rect x="13.7178%" y="1093" width="0.1691%" height="15" fill="rgb(208,226,15)" fg:x="9490" fg:w="117"/><text x="13.9678%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (117 samples, 0.17%)</title><rect x="13.7178%" y="1077" width="0.1691%" height="15" fill="rgb(217,221,4)" fg:x="9490" fg:w="117"/><text x="13.9678%" y="1087.50"></text></g><g><title>&lt;nalgebra_sparse::cs::CsLaneIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="13.8537%" y="1061" width="0.0332%" height="15" fill="rgb(212,174,34)" fg:x="9584" fg:w="23"/><text x="14.1037%" y="1071.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (21 samples, 0.03%)</title><rect x="13.8566%" y="1045" width="0.0304%" height="15" fill="rgb(253,83,4)" fg:x="9586" fg:w="21"/><text x="14.1066%" y="1055.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (10 samples, 0.01%)</title><rect x="13.8870%" y="1093" width="0.0145%" height="15" fill="rgb(250,195,49)" fg:x="9607" fg:w="10"/><text x="14.1370%" y="1103.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (40 samples, 0.06%)</title><rect x="13.9014%" y="1093" width="0.0578%" height="15" fill="rgb(241,192,25)" fg:x="9617" fg:w="40"/><text x="14.1514%" y="1103.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (12 samples, 0.02%)</title><rect x="13.9592%" y="1093" width="0.0173%" height="15" fill="rgb(208,124,10)" fg:x="9657" fg:w="12"/><text x="14.2092%" y="1103.50"></text></g><g><title>amg_match::solver::pcg (380 samples, 0.55%)</title><rect x="13.5198%" y="1157" width="0.5493%" height="15" fill="rgb(222,33,0)" fg:x="9353" fg:w="380"/><text x="13.7698%" y="1167.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (346 samples, 0.50%)</title><rect x="13.5690%" y="1141" width="0.5001%" height="15" fill="rgb(234,209,28)" fg:x="9387" fg:w="346"/><text x="13.8190%" y="1151.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (346 samples, 0.50%)</title><rect x="13.5690%" y="1125" width="0.5001%" height="15" fill="rgb(224,11,23)" fg:x="9387" fg:w="346"/><text x="13.8190%" y="1135.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (346 samples, 0.50%)</title><rect x="13.5690%" y="1109" width="0.5001%" height="15" fill="rgb(232,99,1)" fg:x="9387" fg:w="346"/><text x="13.8190%" y="1119.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (63 samples, 0.09%)</title><rect x="13.9780%" y="1093" width="0.0911%" height="15" fill="rgb(237,95,45)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1103.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (63 samples, 0.09%)</title><rect x="13.9780%" y="1077" width="0.0911%" height="15" fill="rgb(208,109,11)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1087.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (63 samples, 0.09%)</title><rect x="13.9780%" y="1061" width="0.0911%" height="15" fill="rgb(216,190,48)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1071.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (63 samples, 0.09%)</title><rect x="13.9780%" y="1045" width="0.0911%" height="15" fill="rgb(251,171,36)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1055.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (63 samples, 0.09%)</title><rect x="13.9780%" y="1029" width="0.0911%" height="15" fill="rgb(230,62,22)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1039.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (63 samples, 0.09%)</title><rect x="13.9780%" y="1013" width="0.0911%" height="15" fill="rgb(225,114,35)" fg:x="9670" fg:w="63"/><text x="14.2280%" y="1023.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fill (257 samples, 0.37%)</title><rect x="14.0691%" y="1157" width="0.3715%" height="15" fill="rgb(215,118,42)" fg:x="9733" fg:w="257"/><text x="14.3191%" y="1167.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.22%)</title><rect x="14.2180%" y="1141" width="0.2226%" height="15" fill="rgb(243,119,21)" fg:x="9836" fg:w="154"/><text x="14.4680%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="14.4261%" y="1125" width="0.0145%" height="15" fill="rgb(252,177,53)" fg:x="9980" fg:w="10"/><text x="14.6761%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.01%)</title><rect x="14.4261%" y="1109" width="0.0145%" height="15" fill="rgb(237,209,29)" fg:x="9980" fg:w="10"/><text x="14.6761%" y="1119.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (316 samples, 0.46%)</title><rect x="14.4406%" y="1157" width="0.4568%" height="15" fill="rgb(212,65,23)" fg:x="9990" fg:w="316"/><text x="14.6906%" y="1167.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (179 samples, 0.26%)</title><rect x="14.9378%" y="1125" width="0.2587%" height="15" fill="rgb(230,222,46)" fg:x="10334" fg:w="179"/><text x="15.1878%" y="1135.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (219 samples, 0.32%)</title><rect x="14.8974%" y="1157" width="0.3166%" height="15" fill="rgb(215,135,32)" fg:x="10306" fg:w="219"/><text x="15.1474%" y="1167.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (219 samples, 0.32%)</title><rect x="14.8974%" y="1141" width="0.3166%" height="15" fill="rgb(246,101,22)" fg:x="10306" fg:w="219"/><text x="15.1474%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.02%)</title><rect x="15.1966%" y="1125" width="0.0173%" height="15" fill="rgb(206,107,13)" fg:x="10513" fg:w="12"/><text x="15.4466%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.02%)</title><rect x="15.1966%" y="1109" width="0.0173%" height="15" fill="rgb(250,100,44)" fg:x="10513" fg:w="12"/><text x="15.4466%" y="1119.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12 samples, 0.02%)</title><rect x="15.1966%" y="1093" width="0.0173%" height="15" fill="rgb(231,147,38)" fg:x="10513" fg:w="12"/><text x="15.4466%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12 samples, 0.02%)</title><rect x="15.1966%" y="1077" width="0.0173%" height="15" fill="rgb(229,8,40)" fg:x="10513" fg:w="12"/><text x="15.4466%" y="1087.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.05%)</title><rect x="55.2934%" y="1077" width="0.0549%" height="15" fill="rgb(221,135,30)" fg:x="38252" fg:w="38"/><text x="55.5434%" y="1087.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (864 samples, 1.25%)</title><rect x="55.3484%" y="1077" width="1.2489%" height="15" fill="rgb(249,193,18)" fg:x="38290" fg:w="864"/><text x="55.5984%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (125 samples, 0.18%)</title><rect x="56.5973%" y="1061" width="0.1807%" height="15" fill="rgb(209,133,39)" fg:x="39154" fg:w="125"/><text x="56.8473%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (125 samples, 0.18%)</title><rect x="56.5973%" y="1045" width="0.1807%" height="15" fill="rgb(232,100,14)" fg:x="39154" fg:w="125"/><text x="56.8473%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (125 samples, 0.18%)</title><rect x="56.5973%" y="1029" width="0.1807%" height="15" fill="rgb(224,185,1)" fg:x="39154" fg:w="125"/><text x="56.8473%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (157 samples, 0.23%)</title><rect x="57.4501%" y="1045" width="0.2269%" height="15" fill="rgb(223,139,8)" fg:x="39744" fg:w="157"/><text x="57.7001%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (157 samples, 0.23%)</title><rect x="57.4501%" y="1029" width="0.2269%" height="15" fill="rgb(232,213,38)" fg:x="39744" fg:w="157"/><text x="57.7001%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (156 samples, 0.23%)</title><rect x="57.6771%" y="1045" width="0.2255%" height="15" fill="rgb(207,94,22)" fg:x="39901" fg:w="156"/><text x="57.9271%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (156 samples, 0.23%)</title><rect x="57.6771%" y="1029" width="0.2255%" height="15" fill="rgb(219,183,54)" fg:x="39901" fg:w="156"/><text x="57.9271%" y="1039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (156 samples, 0.23%)</title><rect x="57.6771%" y="1013" width="0.2255%" height="15" fill="rgb(216,185,54)" fg:x="39901" fg:w="156"/><text x="57.9271%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (156 samples, 0.23%)</title><rect x="57.6771%" y="997" width="0.2255%" height="15" fill="rgb(254,217,39)" fg:x="39901" fg:w="156"/><text x="57.9271%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (156 samples, 0.23%)</title><rect x="57.6771%" y="981" width="0.2255%" height="15" fill="rgb(240,178,23)" fg:x="39901" fg:w="156"/><text x="57.9271%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,747 samples, 18.43%)</title><rect x="39.6777%" y="1109" width="18.4258%" height="15" fill="rgb(218,11,47)" fg:x="27449" fg:w="12747"/><text x="39.9277%" y="1119.50">&lt;core::iter::adapters::zip::Z..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (12,747 samples, 18.43%)</title><rect x="39.6777%" y="1093" width="18.4258%" height="15" fill="rgb(218,51,51)" fg:x="27449" fg:w="12747"/><text x="39.9277%" y="1103.50">&lt;core::iter::adapters::zip::Z..</text></g><g><title>&lt;nalgebra_sparse::cs::CsLaneIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,042 samples, 1.51%)</title><rect x="56.5973%" y="1077" width="1.5062%" height="15" fill="rgb(238,126,27)" fg:x="39154" fg:w="1042"/><text x="56.8473%" y="1087.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (917 samples, 1.33%)</title><rect x="56.7780%" y="1061" width="1.3255%" height="15" fill="rgb(249,202,22)" fg:x="39279" fg:w="917"/><text x="57.0280%" y="1071.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::major_offsets (139 samples, 0.20%)</title><rect x="57.9026%" y="1045" width="0.2009%" height="15" fill="rgb(254,195,49)" fg:x="40057" fg:w="139"/><text x="58.1526%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (139 samples, 0.20%)</title><rect x="57.9026%" y="1029" width="0.2009%" height="15" fill="rgb(208,123,14)" fg:x="40057" fg:w="139"/><text x="58.1526%" y="1039.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (527 samples, 0.76%)</title><rect x="58.1035%" y="1109" width="0.7618%" height="15" fill="rgb(224,200,8)" fg:x="40196" fg:w="527"/><text x="58.3535%" y="1119.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (6,795 samples, 9.82%)</title><rect x="58.8653%" y="1109" width="9.8222%" height="15" fill="rgb(217,61,36)" fg:x="40723" fg:w="6795"/><text x="59.1153%" y="1119.50">&lt;f64 as core::..</text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1,269 samples, 1.83%)</title><rect x="68.6875%" y="1109" width="1.8343%" height="15" fill="rgb(206,35,45)" fg:x="47518" fg:w="1269"/><text x="68.9375%" y="1119.50">&lt;..</text></g><g><title>core::cmp::min (160 samples, 0.23%)</title><rect x="70.5218%" y="1061" width="0.2313%" height="15" fill="rgb(217,65,33)" fg:x="48787" fg:w="160"/><text x="70.7718%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (160 samples, 0.23%)</title><rect x="70.5218%" y="1045" width="0.2313%" height="15" fill="rgb(222,158,48)" fg:x="48787" fg:w="160"/><text x="70.7718%" y="1055.50"></text></g><g><title>core::cmp::min_by (160 samples, 0.23%)</title><rect x="70.5218%" y="1029" width="0.2313%" height="15" fill="rgb(254,2,54)" fg:x="48787" fg:w="160"/><text x="70.7718%" y="1039.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (187 samples, 0.27%)</title><rect x="70.5218%" y="1093" width="0.2703%" height="15" fill="rgb(250,143,38)" fg:x="48787" fg:w="187"/><text x="70.7718%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (187 samples, 0.27%)</title><rect x="70.5218%" y="1077" width="0.2703%" height="15" fill="rgb(248,25,0)" fg:x="48787" fg:w="187"/><text x="70.7718%" y="1087.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (27 samples, 0.04%)</title><rect x="70.7531%" y="1061" width="0.0390%" height="15" fill="rgb(206,152,27)" fg:x="48947" fg:w="27"/><text x="71.0031%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (27 samples, 0.04%)</title><rect x="70.7531%" y="1045" width="0.0390%" height="15" fill="rgb(240,77,30)" fg:x="48947" fg:w="27"/><text x="71.0031%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (204 samples, 0.29%)</title><rect x="70.5218%" y="1109" width="0.2949%" height="15" fill="rgb(231,5,3)" fg:x="48787" fg:w="204"/><text x="70.7718%" y="1119.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (17 samples, 0.02%)</title><rect x="70.7921%" y="1093" width="0.0246%" height="15" fill="rgb(207,226,32)" fg:x="48974" fg:w="17"/><text x="71.0421%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.02%)</title><rect x="70.7921%" y="1077" width="0.0246%" height="15" fill="rgb(222,207,47)" fg:x="48974" fg:w="17"/><text x="71.0421%" y="1087.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="70.7921%" y="1061" width="0.0246%" height="15" fill="rgb(229,115,45)" fg:x="48974" fg:w="17"/><text x="71.0421%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (17 samples, 0.02%)</title><rect x="70.7921%" y="1045" width="0.0246%" height="15" fill="rgb(224,191,6)" fg:x="48974" fg:w="17"/><text x="71.0421%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (17 samples, 0.02%)</title><rect x="70.7921%" y="1029" width="0.0246%" height="15" fill="rgb(230,227,24)" fg:x="48974" fg:w="17"/><text x="71.0421%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (33 samples, 0.05%)</title><rect x="70.8182%" y="1077" width="0.0477%" height="15" fill="rgb(228,80,19)" fg:x="48992" fg:w="33"/><text x="71.0682%" y="1087.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::contained_by (34 samples, 0.05%)</title><rect x="70.8702%" y="1061" width="0.0491%" height="15" fill="rgb(247,229,0)" fg:x="49028" fg:w="34"/><text x="71.1202%" y="1071.50"></text></g><g><title>&lt;usize as nalgebra::base::indexing::DimRange&lt;D&gt;&gt;::contained_by (34 samples, 0.05%)</title><rect x="70.8702%" y="1045" width="0.0491%" height="15" fill="rgb(237,194,15)" fg:x="49028" fg:w="34"/><text x="71.1202%" y="1055.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked_linear (23 samples, 0.03%)</title><rect x="70.9193%" y="1029" width="0.0332%" height="15" fill="rgb(219,203,20)" fg:x="49062" fg:w="23"/><text x="71.1693%" y="1039.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (23 samples, 0.03%)</title><rect x="70.9193%" y="1013" width="0.0332%" height="15" fill="rgb(234,128,8)" fg:x="49062" fg:w="23"/><text x="71.1693%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (23 samples, 0.03%)</title><rect x="70.9193%" y="997" width="0.0332%" height="15" fill="rgb(248,202,8)" fg:x="49062" fg:w="23"/><text x="71.1693%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (23 samples, 0.03%)</title><rect x="70.9193%" y="981" width="0.0332%" height="15" fill="rgb(206,104,37)" fg:x="49062" fg:w="23"/><text x="71.1693%" y="991.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (10,918 samples, 15.78%)</title><rect x="70.8182%" y="1109" width="15.7820%" height="15" fill="rgb(223,8,27)" fg:x="48992" fg:w="10918"/><text x="71.0682%" y="1119.50">nalgebra::base::indexing..</text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (10,918 samples, 15.78%)</title><rect x="70.8182%" y="1093" width="15.7820%" height="15" fill="rgb(216,217,28)" fg:x="48992" fg:w="10918"/><text x="71.0682%" y="1103.50">nalgebra::base::indexing..</text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (10,885 samples, 15.73%)</title><rect x="70.8659%" y="1077" width="15.7343%" height="15" fill="rgb(249,199,1)" fg:x="49025" fg:w="10885"/><text x="71.1159%" y="1087.50">nalgebra::base::indexing..</text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (10,848 samples, 15.68%)</title><rect x="70.9193%" y="1061" width="15.6808%" height="15" fill="rgb(240,85,17)" fg:x="49062" fg:w="10848"/><text x="71.1693%" y="1071.50">&lt;(usize,usize) as nalgeb..</text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (10,848 samples, 15.68%)</title><rect x="70.9193%" y="1045" width="15.6808%" height="15" fill="rgb(206,108,45)" fg:x="49062" fg:w="10848"/><text x="71.1693%" y="1055.50">nalgebra::base::storage:..</text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (10,825 samples, 15.65%)</title><rect x="70.9526%" y="1029" width="15.6476%" height="15" fill="rgb(245,210,41)" fg:x="49085" fg:w="10825"/><text x="71.2026%" y="1039.50">nalgebra::base::storage:..</text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::iter (32 samples, 0.05%)</title><rect x="86.6002%" y="1109" width="0.0463%" height="15" fill="rgb(206,13,37)" fg:x="59910" fg:w="32"/><text x="86.8502%" y="1119.50"></text></g><g><title>nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt;::new (32 samples, 0.05%)</title><rect x="86.6002%" y="1093" width="0.0463%" height="15" fill="rgb(250,61,18)" fg:x="59910" fg:w="32"/><text x="86.8502%" y="1103.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::iter_mut (15 samples, 0.02%)</title><rect x="86.6464%" y="1109" width="0.0217%" height="15" fill="rgb(235,172,48)" fg:x="59942" fg:w="15"/><text x="86.8964%" y="1119.50"></text></g><g><title>nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt;::new (15 samples, 0.02%)</title><rect x="86.6464%" y="1093" width="0.0217%" height="15" fill="rgb(249,201,17)" fg:x="59942" fg:w="15"/><text x="86.8964%" y="1103.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_mut (11 samples, 0.02%)</title><rect x="86.6681%" y="1109" width="0.0159%" height="15" fill="rgb(219,208,6)" fg:x="59957" fg:w="11"/><text x="86.9181%" y="1119.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows_mut (11 samples, 0.02%)</title><rect x="86.6681%" y="1093" width="0.0159%" height="15" fill="rgb(248,31,23)" fg:x="59957" fg:w="11"/><text x="86.9181%" y="1103.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic_mut (11 samples, 0.02%)</title><rect x="86.6681%" y="1077" width="0.0159%" height="15" fill="rgb(245,15,42)" fg:x="59957" fg:w="11"/><text x="86.9181%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::MulAssign&gt;::mul_assign (18 samples, 0.03%)</title><rect x="86.6840%" y="1093" width="0.0260%" height="15" fill="rgb(222,217,39)" fg:x="59968" fg:w="18"/><text x="86.9340%" y="1103.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul_assign (19 samples, 0.03%)</title><rect x="86.6840%" y="1109" width="0.0275%" height="15" fill="rgb(210,219,27)" fg:x="59968" fg:w="19"/><text x="86.9340%" y="1119.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (34 samples, 0.05%)</title><rect x="86.7361%" y="1093" width="0.0491%" height="15" fill="rgb(252,166,36)" fg:x="60004" fg:w="34"/><text x="86.9861%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.05%)</title><rect x="86.7361%" y="1077" width="0.0491%" height="15" fill="rgb(245,132,34)" fg:x="60004" fg:w="34"/><text x="86.9861%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="86.7635%" y="1061" width="0.0217%" height="15" fill="rgb(236,54,3)" fg:x="60023" fg:w="15"/><text x="87.0135%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (15 samples, 0.02%)</title><rect x="86.7635%" y="1045" width="0.0217%" height="15" fill="rgb(241,173,43)" fg:x="60023" fg:w="15"/><text x="87.0135%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (15 samples, 0.02%)</title><rect x="86.7635%" y="1029" width="0.0217%" height="15" fill="rgb(215,190,9)" fg:x="60023" fg:w="15"/><text x="87.0135%" y="1039.50"></text></g><g><title>&lt;amg_match::preconditioner::Multilevel&lt;amg_match::preconditioner::L1&gt; as amg_match::preconditioner::Preconditioner&gt;::apply (50,992 samples, 73.71%)</title><rect x="13.1599%" y="1173" width="73.7092%" height="15" fill="rgb(242,101,16)" fg:x="9104" fg:w="50992"/><text x="13.4099%" y="1183.50">&lt;amg_match::preconditioner::Multilevel&lt;amg_match::preconditioner::L1&gt; as amg_match::preconditioner::Preconditioner&gt;::apply</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (49,571 samples, 71.66%)</title><rect x="15.2139%" y="1157" width="71.6551%" height="15" fill="rgb(223,190,21)" fg:x="10525" fg:w="49571"/><text x="15.4639%" y="1167.50">nalgebra_sparse::ops::serial::csr::spmm_csr_dense</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (49,570 samples, 71.65%)</title><rect x="15.2154%" y="1141" width="71.6537%" height="15" fill="rgb(215,228,25)" fg:x="10526" fg:w="49570"/><text x="15.4654%" y="1151.50">nalgebra_sparse::ops::serial::csr::spmm_csr_dense_</text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (49,569 samples, 71.65%)</title><rect x="15.2168%" y="1125" width="71.6522%" height="15" fill="rgb(225,36,22)" fg:x="10527" fg:w="49569"/><text x="15.4668%" y="1135.50">nalgebra_sparse::ops::serial::cs::spmm_cs_dense</text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_lane (109 samples, 0.16%)</title><rect x="86.7115%" y="1109" width="0.1576%" height="15" fill="rgb(251,106,46)" fg:x="59987" fg:w="109"/><text x="86.9615%" y="1119.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::get_index_range (58 samples, 0.08%)</title><rect x="86.7852%" y="1093" width="0.0838%" height="15" fill="rgb(208,90,1)" fg:x="60038" fg:w="58"/><text x="87.0352%" y="1103.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::major_offsets (15 samples, 0.02%)</title><rect x="86.8474%" y="1077" width="0.0217%" height="15" fill="rgb(243,10,4)" fg:x="60081" fg:w="15"/><text x="87.0974%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.02%)</title><rect x="86.8474%" y="1061" width="0.0217%" height="15" fill="rgb(212,137,27)" fg:x="60081" fg:w="15"/><text x="87.0974%" y="1071.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fill (9 samples, 0.01%)</title><rect x="86.8690%" y="1173" width="0.0130%" height="15" fill="rgb(231,220,49)" fg:x="60096" fg:w="9"/><text x="87.1190%" y="1183.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (94 samples, 0.14%)</title><rect x="86.8820%" y="1173" width="0.1359%" height="15" fill="rgb(237,96,20)" fg:x="60105" fg:w="94"/><text x="87.1320%" y="1183.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (24 samples, 0.03%)</title><rect x="87.0237%" y="1141" width="0.0347%" height="15" fill="rgb(239,229,30)" fg:x="60203" fg:w="24"/><text x="87.2737%" y="1151.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (29 samples, 0.04%)</title><rect x="87.0179%" y="1173" width="0.0419%" height="15" fill="rgb(219,65,33)" fg:x="60199" fg:w="29"/><text x="87.2679%" y="1183.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (29 samples, 0.04%)</title><rect x="87.0179%" y="1157" width="0.0419%" height="15" fill="rgb(243,134,7)" fg:x="60199" fg:w="29"/><text x="87.2679%" y="1167.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.09%)</title><rect x="91.4788%" y="1093" width="0.0853%" height="15" fill="rgb(216,177,54)" fg:x="63285" fg:w="59"/><text x="91.7288%" y="1103.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="91.5640%" y="1077" width="0.0159%" height="15" fill="rgb(211,160,20)" fg:x="63344" fg:w="11"/><text x="91.8140%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="91.5640%" y="1061" width="0.0159%" height="15" fill="rgb(239,85,39)" fg:x="63344" fg:w="11"/><text x="91.8140%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="91.5640%" y="1045" width="0.0159%" height="15" fill="rgb(232,125,22)" fg:x="63344" fg:w="11"/><text x="91.8140%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (12 samples, 0.02%)</title><rect x="91.6392%" y="1061" width="0.0173%" height="15" fill="rgb(244,57,34)" fg:x="63396" fg:w="12"/><text x="91.8892%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (12 samples, 0.02%)</title><rect x="91.6392%" y="1045" width="0.0173%" height="15" fill="rgb(214,203,32)" fg:x="63396" fg:w="12"/><text x="91.8892%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="91.6565%" y="1061" width="0.0159%" height="15" fill="rgb(207,58,43)" fg:x="63408" fg:w="11"/><text x="91.9065%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="91.6565%" y="1045" width="0.0159%" height="15" fill="rgb(215,193,15)" fg:x="63408" fg:w="11"/><text x="91.9065%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="91.6565%" y="1029" width="0.0159%" height="15" fill="rgb(232,15,44)" fg:x="63408" fg:w="11"/><text x="91.9065%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.02%)</title><rect x="91.6565%" y="1013" width="0.0159%" height="15" fill="rgb(212,3,48)" fg:x="63408" fg:w="11"/><text x="91.9065%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.02%)</title><rect x="91.6565%" y="997" width="0.0159%" height="15" fill="rgb(218,128,7)" fg:x="63408" fg:w="11"/><text x="91.9065%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,361 samples, 1.97%)</title><rect x="89.7123%" y="1125" width="1.9673%" height="15" fill="rgb(226,216,39)" fg:x="62063" fg:w="1361"/><text x="89.9623%" y="1135.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,361 samples, 1.97%)</title><rect x="89.7123%" y="1109" width="1.9673%" height="15" fill="rgb(243,47,51)" fg:x="62063" fg:w="1361"/><text x="89.9623%" y="1119.50">&lt;..</text></g><g><title>&lt;nalgebra_sparse::cs::CsLaneIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.12%)</title><rect x="91.5640%" y="1093" width="0.1156%" height="15" fill="rgb(241,183,40)" fg:x="63344" fg:w="80"/><text x="91.8140%" y="1103.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (69 samples, 0.10%)</title><rect x="91.5799%" y="1077" width="0.0997%" height="15" fill="rgb(231,217,32)" fg:x="63355" fg:w="69"/><text x="91.8299%" y="1087.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (54 samples, 0.08%)</title><rect x="91.6797%" y="1125" width="0.0781%" height="15" fill="rgb(229,61,38)" fg:x="63424" fg:w="54"/><text x="91.9297%" y="1135.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (784 samples, 1.13%)</title><rect x="91.7577%" y="1125" width="1.1333%" height="15" fill="rgb(225,210,5)" fg:x="63478" fg:w="784"/><text x="92.0077%" y="1135.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (118 samples, 0.17%)</title><rect x="92.8910%" y="1125" width="0.1706%" height="15" fill="rgb(231,79,45)" fg:x="64262" fg:w="118"/><text x="93.1410%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (8 samples, 0.01%)</title><rect x="93.0616%" y="1125" width="0.0116%" height="15" fill="rgb(224,100,7)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1135.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (8 samples, 0.01%)</title><rect x="93.0616%" y="1109" width="0.0116%" height="15" fill="rgb(241,198,18)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (8 samples, 0.01%)</title><rect x="93.0616%" y="1093" width="0.0116%" height="15" fill="rgb(252,97,53)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1103.50"></text></g><g><title>core::cmp::min (8 samples, 0.01%)</title><rect x="93.0616%" y="1077" width="0.0116%" height="15" fill="rgb(220,88,7)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1087.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.01%)</title><rect x="93.0616%" y="1061" width="0.0116%" height="15" fill="rgb(213,176,14)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1071.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.01%)</title><rect x="93.0616%" y="1045" width="0.0116%" height="15" fill="rgb(246,73,7)" fg:x="64380" fg:w="8"/><text x="93.3116%" y="1055.50"></text></g><g><title>&lt;amg_match::preconditioner::Composite as amg_match::preconditioner::Preconditioner&gt;::apply (56,518 samples, 81.70%)</title><rect x="13.1599%" y="1189" width="81.6970%" height="15" fill="rgb(245,64,36)" fg:x="9104" fg:w="56518"/><text x="13.4099%" y="1199.50">&lt;amg_match::preconditioner::Composite as amg_match::preconditioner::Preconditioner&gt;::apply</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (5,394 samples, 7.80%)</title><rect x="87.0598%" y="1173" width="7.7971%" height="15" fill="rgb(245,80,10)" fg:x="60228" fg:w="5394"/><text x="87.3098%" y="1183.50">nalgebra_sp..</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (5,394 samples, 7.80%)</title><rect x="87.0598%" y="1157" width="7.7971%" height="15" fill="rgb(232,107,50)" fg:x="60228" fg:w="5394"/><text x="87.3098%" y="1167.50">nalgebra_sp..</text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (5,394 samples, 7.80%)</title><rect x="87.0598%" y="1141" width="7.7971%" height="15" fill="rgb(253,3,0)" fg:x="60228" fg:w="5394"/><text x="87.3098%" y="1151.50">nalgebra_sp..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (1,234 samples, 1.78%)</title><rect x="93.0731%" y="1125" width="1.7838%" height="15" fill="rgb(212,99,53)" fg:x="64388" fg:w="1234"/><text x="93.3231%" y="1135.50">n..</text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (1,234 samples, 1.78%)</title><rect x="93.0731%" y="1109" width="1.7838%" height="15" fill="rgb(249,111,54)" fg:x="64388" fg:w="1234"/><text x="93.3231%" y="1119.50">n..</text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (1,231 samples, 1.78%)</title><rect x="93.0775%" y="1093" width="1.7794%" height="15" fill="rgb(249,55,30)" fg:x="64391" fg:w="1231"/><text x="93.3275%" y="1103.50">n..</text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (1,229 samples, 1.78%)</title><rect x="93.0804%" y="1077" width="1.7765%" height="15" fill="rgb(237,47,42)" fg:x="64393" fg:w="1229"/><text x="93.3304%" y="1087.50">&lt;..</text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (1,229 samples, 1.78%)</title><rect x="93.0804%" y="1061" width="1.7765%" height="15" fill="rgb(211,20,18)" fg:x="64393" fg:w="1229"/><text x="93.3304%" y="1071.50">n..</text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (1,225 samples, 1.77%)</title><rect x="93.0862%" y="1045" width="1.7707%" height="15" fill="rgb(231,203,46)" fg:x="64397" fg:w="1225"/><text x="93.3362%" y="1055.50">n..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="94.8583%" y="1157" width="0.0289%" height="15" fill="rgb(237,142,3)" fg:x="65623" fg:w="20"/><text x="95.1083%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20 samples, 0.03%)</title><rect x="94.8583%" y="1141" width="0.0289%" height="15" fill="rgb(241,107,1)" fg:x="65623" fg:w="20"/><text x="95.1083%" y="1151.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="94.8670%" y="1125" width="0.0202%" height="15" fill="rgb(229,83,13)" fg:x="65629" fg:w="14"/><text x="95.1170%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.03%)</title><rect x="94.8583%" y="1189" width="0.0304%" height="15" fill="rgb(241,91,40)" fg:x="65623" fg:w="21"/><text x="95.1083%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.03%)</title><rect x="94.8583%" y="1173" width="0.0304%" height="15" fill="rgb(225,3,45)" fg:x="65623" fg:w="21"/><text x="95.1083%" y="1183.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (18 samples, 0.03%)</title><rect x="94.8887%" y="1189" width="0.0260%" height="15" fill="rgb(244,223,14)" fg:x="65644" fg:w="18"/><text x="95.1387%" y="1199.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (18 samples, 0.03%)</title><rect x="94.8887%" y="1173" width="0.0260%" height="15" fill="rgb(224,124,37)" fg:x="65644" fg:w="18"/><text x="95.1387%" y="1183.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (7 samples, 0.01%)</title><rect x="94.9147%" y="1189" width="0.0101%" height="15" fill="rgb(251,171,30)" fg:x="65662" fg:w="7"/><text x="95.1647%" y="1199.50"></text></g><g><title>&lt;f64 as core::ops::arith::MulAssign&gt;::mul_assign (8 samples, 0.01%)</title><rect x="94.9321%" y="1173" width="0.0116%" height="15" fill="rgb(236,46,54)" fg:x="65674" fg:w="8"/><text x="95.1821%" y="1183.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul_assign (10 samples, 0.01%)</title><rect x="94.9321%" y="1189" width="0.0145%" height="15" fill="rgb(245,213,5)" fg:x="65674" fg:w="10"/><text x="95.1821%" y="1199.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::SubAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign (13 samples, 0.02%)</title><rect x="94.9465%" y="1189" width="0.0188%" height="15" fill="rgb(230,144,27)" fg:x="65684" fg:w="13"/><text x="95.1965%" y="1199.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked (13 samples, 0.02%)</title><rect x="94.9465%" y="1173" width="0.0188%" height="15" fill="rgb(220,86,6)" fg:x="65684" fg:w="13"/><text x="95.1965%" y="1183.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (11 samples, 0.02%)</title><rect x="94.9494%" y="1157" width="0.0159%" height="15" fill="rgb(240,20,13)" fg:x="65686" fg:w="11"/><text x="95.1994%" y="1167.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="96.2157%" y="1109" width="0.0217%" height="15" fill="rgb(217,89,34)" fg:x="66562" fg:w="15"/><text x="96.4657%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (350 samples, 0.51%)</title><rect x="95.7632%" y="1141" width="0.5059%" height="15" fill="rgb(229,13,5)" fg:x="66249" fg:w="350"/><text x="96.0132%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (350 samples, 0.51%)</title><rect x="95.7632%" y="1125" width="0.5059%" height="15" fill="rgb(244,67,35)" fg:x="66249" fg:w="350"/><text x="96.0132%" y="1135.50"></text></g><g><title>&lt;nalgebra_sparse::cs::CsLaneIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="96.2374%" y="1109" width="0.0318%" height="15" fill="rgb(221,40,2)" fg:x="66577" fg:w="22"/><text x="96.4874%" y="1119.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (19 samples, 0.03%)</title><rect x="96.2417%" y="1093" width="0.0275%" height="15" fill="rgb(237,157,21)" fg:x="66580" fg:w="19"/><text x="96.4917%" y="1103.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (13 samples, 0.02%)</title><rect x="96.2692%" y="1141" width="0.0188%" height="15" fill="rgb(222,94,11)" fg:x="66599" fg:w="13"/><text x="96.5192%" y="1151.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (192 samples, 0.28%)</title><rect x="96.2879%" y="1141" width="0.2775%" height="15" fill="rgb(249,113,6)" fg:x="66612" fg:w="192"/><text x="96.5379%" y="1151.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (30 samples, 0.04%)</title><rect x="96.5655%" y="1141" width="0.0434%" height="15" fill="rgb(238,137,36)" fg:x="66804" fg:w="30"/><text x="96.8155%" y="1151.50"></text></g><g><title>amg_match::solver::pcg (58,067 samples, 83.94%)</title><rect x="13.1599%" y="1205" width="83.9361%" height="15" fill="rgb(210,102,26)" fg:x="9104" fg:w="58067"/><text x="13.4099%" y="1215.50">amg_match::solver::pcg</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (1,474 samples, 2.13%)</title><rect x="94.9653%" y="1189" width="2.1307%" height="15" fill="rgb(218,30,30)" fg:x="65697" fg:w="1474"/><text x="95.2153%" y="1199.50">n..</text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (1,474 samples, 2.13%)</title><rect x="94.9653%" y="1173" width="2.1307%" height="15" fill="rgb(214,67,26)" fg:x="65697" fg:w="1474"/><text x="95.2153%" y="1183.50">n..</text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (1,474 samples, 2.13%)</title><rect x="94.9653%" y="1157" width="2.1307%" height="15" fill="rgb(251,9,53)" fg:x="65697" fg:w="1474"/><text x="95.2153%" y="1167.50">n..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (333 samples, 0.48%)</title><rect x="96.6146%" y="1141" width="0.4814%" height="15" fill="rgb(228,204,25)" fg:x="66838" fg:w="333"/><text x="96.8646%" y="1151.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::index (333 samples, 0.48%)</title><rect x="96.6146%" y="1125" width="0.4814%" height="15" fill="rgb(207,153,8)" fg:x="66838" fg:w="333"/><text x="96.8646%" y="1135.50"></text></g><g><title>nalgebra::base::indexing::MatrixIndex::get (332 samples, 0.48%)</title><rect x="96.6161%" y="1109" width="0.4799%" height="15" fill="rgb(242,9,16)" fg:x="66839" fg:w="332"/><text x="96.8661%" y="1119.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (332 samples, 0.48%)</title><rect x="96.6161%" y="1093" width="0.4799%" height="15" fill="rgb(217,211,10)" fg:x="66839" fg:w="332"/><text x="96.8661%" y="1103.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (332 samples, 0.48%)</title><rect x="96.6161%" y="1077" width="0.4799%" height="15" fill="rgb(219,228,52)" fg:x="66839" fg:w="332"/><text x="96.8661%" y="1087.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (331 samples, 0.48%)</title><rect x="96.6175%" y="1061" width="0.4785%" height="15" fill="rgb(231,92,29)" fg:x="66840" fg:w="331"/><text x="96.8675%" y="1071.50"></text></g><g><title>nalgebra_sparse::convert::serial::combine_duplicates (36 samples, 0.05%)</title><rect x="97.0974%" y="1157" width="0.0520%" height="15" fill="rgb(232,8,23)" fg:x="67172" fg:w="36"/><text x="97.3474%" y="1167.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs::{{closure}} (22 samples, 0.03%)</title><rect x="97.1177%" y="1141" width="0.0318%" height="15" fill="rgb(216,211,34)" fg:x="67186" fg:w="22"/><text x="97.3677%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.03%)</title><rect x="97.1177%" y="1125" width="0.0318%" height="15" fill="rgb(236,151,0)" fg:x="67186" fg:w="22"/><text x="97.3677%" y="1135.50"></text></g><g><title>nalgebra_sparse::convert::serial::coo_to_unsorted_cs (56 samples, 0.08%)</title><rect x="97.1495%" y="1157" width="0.0809%" height="15" fill="rgb(209,168,3)" fg:x="67208" fg:w="56"/><text x="97.3995%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="97.2203%" y="1141" width="0.0101%" height="15" fill="rgb(208,129,28)" fg:x="67257" fg:w="7"/><text x="97.4703%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.01%)</title><rect x="97.2203%" y="1125" width="0.0101%" height="15" fill="rgb(229,78,22)" fg:x="67257" fg:w="7"/><text x="97.4703%" y="1135.50"></text></g><g><title>nalgebra_sparse::utils::apply_permutation (14 samples, 0.02%)</title><rect x="97.2304%" y="1141" width="0.0202%" height="15" fill="rgb(228,187,13)" fg:x="67264" fg:w="14"/><text x="97.4804%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (7 samples, 0.01%)</title><rect x="97.2637%" y="1061" width="0.0101%" height="15" fill="rgb(240,119,24)" fg:x="67287" fg:w="7"/><text x="97.5137%" y="1071.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_cs (124 samples, 0.18%)</title><rect x="97.0960%" y="1173" width="0.1792%" height="15" fill="rgb(209,194,42)" fg:x="67171" fg:w="124"/><text x="97.3460%" y="1183.50"></text></g><g><title>nalgebra_sparse::convert::serial::sort_lane (31 samples, 0.04%)</title><rect x="97.2304%" y="1157" width="0.0448%" height="15" fill="rgb(247,200,46)" fg:x="67264" fg:w="31"/><text x="97.4804%" y="1167.50"></text></g><g><title>nalgebra_sparse::utils::compute_sort_permutation (17 samples, 0.02%)</title><rect x="97.2507%" y="1141" width="0.0246%" height="15" fill="rgb(218,76,16)" fg:x="67278" fg:w="17"/><text x="97.5007%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (16 samples, 0.02%)</title><rect x="97.2521%" y="1125" width="0.0231%" height="15" fill="rgb(225,21,48)" fg:x="67279" fg:w="16"/><text x="97.5021%" y="1135.50"></text></g><g><title>core::slice::sort::quicksort (16 samples, 0.02%)</title><rect x="97.2521%" y="1109" width="0.0231%" height="15" fill="rgb(239,223,50)" fg:x="67279" fg:w="16"/><text x="97.5021%" y="1119.50"></text></g><g><title>core::slice::sort::recurse (16 samples, 0.02%)</title><rect x="97.2521%" y="1093" width="0.0231%" height="15" fill="rgb(244,45,21)" fg:x="67279" fg:w="16"/><text x="97.5021%" y="1103.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (12 samples, 0.02%)</title><rect x="97.2579%" y="1077" width="0.0173%" height="15" fill="rgb(232,33,43)" fg:x="67283" fg:w="12"/><text x="97.5079%" y="1087.50"></text></g><g><title>nalgebra_sparse::convert::impl_std_ops::&lt;impl core::convert::From&lt;&amp;nalgebra_sparse::coo::CooMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::from (136 samples, 0.20%)</title><rect x="97.0960%" y="1205" width="0.1966%" height="15" fill="rgb(209,8,3)" fg:x="67171" fg:w="136"/><text x="97.3460%" y="1215.50"></text></g><g><title>nalgebra_sparse::convert::serial::convert_coo_csr (136 samples, 0.20%)</title><rect x="97.0960%" y="1189" width="0.1966%" height="15" fill="rgb(214,25,53)" fg:x="67171" fg:w="136"/><text x="97.3460%" y="1199.50"></text></g><g><title>nalgebra_sparse::csr::CsrMatrix&lt;T&gt;::try_from_csr_data (12 samples, 0.02%)</title><rect x="97.2752%" y="1173" width="0.0173%" height="15" fill="rgb(254,186,54)" fg:x="67295" fg:w="12"/><text x="97.5252%" y="1183.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (12 samples, 0.02%)</title><rect x="97.2752%" y="1157" width="0.0173%" height="15" fill="rgb(208,174,49)" fg:x="67295" fg:w="12"/><text x="97.5252%" y="1167.50"></text></g><g><title>nalgebra_sparse::csr::CsrMatrix&lt;T&gt;::diagonal_as_csr (12 samples, 0.02%)</title><rect x="97.2926%" y="1205" width="0.0173%" height="15" fill="rgb(233,191,51)" fg:x="67307" fg:w="12"/><text x="97.5426%" y="1215.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::diagonal_as_matrix (12 samples, 0.02%)</title><rect x="97.2926%" y="1189" width="0.0173%" height="15" fill="rgb(222,134,10)" fg:x="67307" fg:w="12"/><text x="97.5426%" y="1199.50"></text></g><g><title>nalgebra_sparse::cs::CsMatrix&lt;T&gt;::filter (12 samples, 0.02%)</title><rect x="97.2926%" y="1173" width="0.0173%" height="15" fill="rgb(230,226,20)" fg:x="67307" fg:w="12"/><text x="97.5426%" y="1183.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="97.4068%" y="389" width="0.0116%" height="15" fill="rgb(251,111,25)" fg:x="67386" fg:w="8"/><text x="97.6568%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (8 samples, 0.01%)</title><rect x="97.4068%" y="373" width="0.0116%" height="15" fill="rgb(224,40,46)" fg:x="67386" fg:w="8"/><text x="97.6568%" y="383.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (40 samples, 0.06%)</title><rect x="97.3764%" y="501" width="0.0578%" height="15" fill="rgb(236,108,47)" fg:x="67365" fg:w="40"/><text x="97.6264%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (34 samples, 0.05%)</title><rect x="97.3851%" y="485" width="0.0491%" height="15" fill="rgb(234,93,0)" fg:x="67371" fg:w="34"/><text x="97.6351%" y="495.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (32 samples, 0.05%)</title><rect x="97.3880%" y="469" width="0.0463%" height="15" fill="rgb(224,213,32)" fg:x="67373" fg:w="32"/><text x="97.6380%" y="479.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (32 samples, 0.05%)</title><rect x="97.3880%" y="453" width="0.0463%" height="15" fill="rgb(251,11,48)" fg:x="67373" fg:w="32"/><text x="97.6380%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (26 samples, 0.04%)</title><rect x="97.3966%" y="437" width="0.0376%" height="15" fill="rgb(236,173,5)" fg:x="67379" fg:w="26"/><text x="97.6466%" y="447.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (23 samples, 0.03%)</title><rect x="97.4010%" y="421" width="0.0332%" height="15" fill="rgb(230,95,12)" fg:x="67382" fg:w="23"/><text x="97.6510%" y="431.50"></text></g><g><title>pest::position::Position::match_range (23 samples, 0.03%)</title><rect x="97.4010%" y="405" width="0.0332%" height="15" fill="rgb(232,209,1)" fg:x="67382" fg:w="23"/><text x="97.6510%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (11 samples, 0.02%)</title><rect x="97.4183%" y="389" width="0.0159%" height="15" fill="rgb(232,6,1)" fg:x="67394" fg:w="11"/><text x="97.6683%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (11 samples, 0.02%)</title><rect x="97.4183%" y="373" width="0.0159%" height="15" fill="rgb(210,224,50)" fg:x="67394" fg:w="11"/><text x="97.6683%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (11 samples, 0.02%)</title><rect x="97.4183%" y="357" width="0.0159%" height="15" fill="rgb(228,127,35)" fg:x="67394" fg:w="11"/><text x="97.6683%" y="367.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (43 samples, 0.06%)</title><rect x="97.3764%" y="565" width="0.0622%" height="15" fill="rgb(245,102,45)" fg:x="67365" fg:w="43"/><text x="97.6264%" y="575.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (43 samples, 0.06%)</title><rect x="97.3764%" y="549" width="0.0622%" height="15" fill="rgb(214,1,49)" fg:x="67365" fg:w="43"/><text x="97.6264%" y="559.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (43 samples, 0.06%)</title><rect x="97.3764%" y="533" width="0.0622%" height="15" fill="rgb(226,163,40)" fg:x="67365" fg:w="43"/><text x="97.6264%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (43 samples, 0.06%)</title><rect x="97.3764%" y="517" width="0.0622%" height="15" fill="rgb(239,212,28)" fg:x="67365" fg:w="43"/><text x="97.6264%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="97.4386%" y="565" width="0.0145%" height="15" fill="rgb(220,20,13)" fg:x="67408" fg:w="10"/><text x="97.6886%" y="575.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (61 samples, 0.09%)</title><rect x="97.3692%" y="597" width="0.0882%" height="15" fill="rgb(210,164,35)" fg:x="67360" fg:w="61"/><text x="97.6192%" y="607.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (61 samples, 0.09%)</title><rect x="97.3692%" y="581" width="0.0882%" height="15" fill="rgb(248,109,41)" fg:x="67360" fg:w="61"/><text x="97.6192%" y="591.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::hidden::skip (20 samples, 0.03%)</title><rect x="97.4588%" y="565" width="0.0289%" height="15" fill="rgb(238,23,50)" fg:x="67422" fg:w="20"/><text x="97.7088%" y="575.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (15 samples, 0.02%)</title><rect x="97.4660%" y="549" width="0.0217%" height="15" fill="rgb(211,48,49)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="559.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::hidden::skip::{{closure}} (15 samples, 0.02%)</title><rect x="97.4660%" y="533" width="0.0217%" height="15" fill="rgb(223,36,21)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="543.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::WHITESPACE (15 samples, 0.02%)</title><rect x="97.4660%" y="517" width="0.0217%" height="15" fill="rgb(207,123,46)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="527.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (15 samples, 0.02%)</title><rect x="97.4660%" y="501" width="0.0217%" height="15" fill="rgb(240,218,32)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="511.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::WHITESPACE::{{closure}} (15 samples, 0.02%)</title><rect x="97.4660%" y="485" width="0.0217%" height="15" fill="rgb(252,5,43)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="495.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_string (15 samples, 0.02%)</title><rect x="97.4660%" y="469" width="0.0217%" height="15" fill="rgb(252,84,19)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="479.50"></text></g><g><title>pest::position::Position::match_string (15 samples, 0.02%)</title><rect x="97.4660%" y="453" width="0.0217%" height="15" fill="rgb(243,152,39)" fg:x="67427" fg:w="15"/><text x="97.7160%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (13 samples, 0.02%)</title><rect x="97.4949%" y="453" width="0.0188%" height="15" fill="rgb(234,160,15)" fg:x="67447" fg:w="13"/><text x="97.7449%" y="463.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (11 samples, 0.02%)</title><rect x="97.4978%" y="437" width="0.0159%" height="15" fill="rgb(237,34,20)" fg:x="67449" fg:w="11"/><text x="97.7478%" y="447.50"></text></g><g><title>pest::position::Position::match_range (11 samples, 0.02%)</title><rect x="97.4978%" y="421" width="0.0159%" height="15" fill="rgb(229,97,13)" fg:x="67449" fg:w="11"/><text x="97.7478%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (46 samples, 0.07%)</title><rect x="97.4949%" y="469" width="0.0665%" height="15" fill="rgb(234,71,50)" fg:x="67447" fg:w="46"/><text x="97.7449%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (33 samples, 0.05%)</title><rect x="97.5137%" y="453" width="0.0477%" height="15" fill="rgb(253,155,4)" fg:x="67460" fg:w="33"/><text x="97.7637%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (30 samples, 0.04%)</title><rect x="97.5181%" y="437" width="0.0434%" height="15" fill="rgb(222,185,37)" fg:x="67463" fg:w="30"/><text x="97.7681%" y="447.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (30 samples, 0.04%)</title><rect x="97.5181%" y="421" width="0.0434%" height="15" fill="rgb(251,177,13)" fg:x="67463" fg:w="30"/><text x="97.7681%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (28 samples, 0.04%)</title><rect x="97.5210%" y="405" width="0.0405%" height="15" fill="rgb(250,179,40)" fg:x="67465" fg:w="28"/><text x="97.7710%" y="415.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (25 samples, 0.04%)</title><rect x="97.5253%" y="389" width="0.0361%" height="15" fill="rgb(242,44,2)" fg:x="67468" fg:w="25"/><text x="97.7753%" y="399.50"></text></g><g><title>pest::position::Position::match_range (25 samples, 0.04%)</title><rect x="97.5253%" y="373" width="0.0361%" height="15" fill="rgb(216,177,13)" fg:x="67468" fg:w="25"/><text x="97.7753%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (16 samples, 0.02%)</title><rect x="97.5383%" y="357" width="0.0231%" height="15" fill="rgb(216,106,43)" fg:x="67477" fg:w="16"/><text x="97.7883%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (16 samples, 0.02%)</title><rect x="97.5383%" y="341" width="0.0231%" height="15" fill="rgb(216,183,2)" fg:x="67477" fg:w="16"/><text x="97.7883%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (16 samples, 0.02%)</title><rect x="97.5383%" y="325" width="0.0231%" height="15" fill="rgb(249,75,3)" fg:x="67477" fg:w="16"/><text x="97.7883%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (8 samples, 0.01%)</title><rect x="97.5499%" y="309" width="0.0116%" height="15" fill="rgb(219,67,39)" fg:x="67485" fg:w="8"/><text x="97.7999%" y="319.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (53 samples, 0.08%)</title><rect x="97.4949%" y="533" width="0.0766%" height="15" fill="rgb(253,228,2)" fg:x="67447" fg:w="53"/><text x="97.7449%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (53 samples, 0.08%)</title><rect x="97.4949%" y="517" width="0.0766%" height="15" fill="rgb(235,138,27)" fg:x="67447" fg:w="53"/><text x="97.7449%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (53 samples, 0.08%)</title><rect x="97.4949%" y="501" width="0.0766%" height="15" fill="rgb(236,97,51)" fg:x="67447" fg:w="53"/><text x="97.7449%" y="511.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (53 samples, 0.08%)</title><rect x="97.4949%" y="485" width="0.0766%" height="15" fill="rgb(240,80,30)" fg:x="67447" fg:w="53"/><text x="97.7449%" y="495.50"></text></g><g><title>&lt;pest::position::Position as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="97.5614%" y="469" width="0.0101%" height="15" fill="rgb(230,178,19)" fg:x="67493" fg:w="7"/><text x="97.8114%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.02%)</title><rect x="97.5716%" y="533" width="0.0202%" height="15" fill="rgb(210,190,27)" fg:x="67500" fg:w="14"/><text x="97.8216%" y="543.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="97.5802%" y="517" width="0.0116%" height="15" fill="rgb(222,107,31)" fg:x="67506" fg:w="8"/><text x="97.8302%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (73 samples, 0.11%)</title><rect x="97.4877%" y="565" width="0.1055%" height="15" fill="rgb(216,127,34)" fg:x="67442" fg:w="73"/><text x="97.7377%" y="575.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (73 samples, 0.11%)</title><rect x="97.4877%" y="549" width="0.1055%" height="15" fill="rgb(234,116,52)" fg:x="67442" fg:w="73"/><text x="97.7377%" y="559.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}}::{{closure}}::{{closure}} (8 samples, 0.01%)</title><rect x="97.6612%" y="117" width="0.0116%" height="15" fill="rgb(222,124,15)" fg:x="67562" fg:w="8"/><text x="97.9112%" y="127.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_insensitive (8 samples, 0.01%)</title><rect x="97.6612%" y="101" width="0.0116%" height="15" fill="rgb(231,179,28)" fg:x="67562" fg:w="8"/><text x="97.9112%" y="111.50"></text></g><g><title>pest::position::Position::match_insensitive (8 samples, 0.01%)</title><rect x="97.6612%" y="85" width="0.0116%" height="15" fill="rgb(226,93,45)" fg:x="67562" fg:w="8"/><text x="97.9112%" y="95.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}} (11 samples, 0.02%)</title><rect x="97.6612%" y="181" width="0.0159%" height="15" fill="rgb(215,8,51)" fg:x="67562" fg:w="11"/><text x="97.9112%" y="191.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (11 samples, 0.02%)</title><rect x="97.6612%" y="165" width="0.0159%" height="15" fill="rgb(223,106,5)" fg:x="67562" fg:w="11"/><text x="97.9112%" y="175.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}}::{{closure}} (11 samples, 0.02%)</title><rect x="97.6612%" y="149" width="0.0159%" height="15" fill="rgb(250,191,5)" fg:x="67562" fg:w="11"/><text x="97.9112%" y="159.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (11 samples, 0.02%)</title><rect x="97.6612%" y="133" width="0.0159%" height="15" fill="rgb(242,132,44)" fg:x="67562" fg:w="11"/><text x="97.9112%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (16 samples, 0.02%)</title><rect x="97.6568%" y="277" width="0.0231%" height="15" fill="rgb(251,152,29)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="287.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.02%)</title><rect x="97.6568%" y="261" width="0.0231%" height="15" fill="rgb(218,179,5)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="271.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (16 samples, 0.02%)</title><rect x="97.6568%" y="245" width="0.0231%" height="15" fill="rgb(227,67,19)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="255.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.02%)</title><rect x="97.6568%" y="229" width="0.0231%" height="15" fill="rgb(233,119,31)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="239.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp (16 samples, 0.02%)</title><rect x="97.6568%" y="213" width="0.0231%" height="15" fill="rgb(241,120,22)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="223.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (16 samples, 0.02%)</title><rect x="97.6568%" y="197" width="0.0231%" height="15" fill="rgb(224,102,30)" fg:x="67559" fg:w="16"/><text x="97.9068%" y="207.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (14 samples, 0.02%)</title><rect x="97.6857%" y="229" width="0.0202%" height="15" fill="rgb(210,164,37)" fg:x="67579" fg:w="14"/><text x="97.9357%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (20 samples, 0.03%)</title><rect x="97.6800%" y="277" width="0.0289%" height="15" fill="rgb(226,191,16)" fg:x="67575" fg:w="20"/><text x="97.9300%" y="287.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (20 samples, 0.03%)</title><rect x="97.6800%" y="261" width="0.0289%" height="15" fill="rgb(214,40,45)" fg:x="67575" fg:w="20"/><text x="97.9300%" y="271.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (20 samples, 0.03%)</title><rect x="97.6800%" y="245" width="0.0289%" height="15" fill="rgb(244,29,26)" fg:x="67575" fg:w="20"/><text x="97.9300%" y="255.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="97.7493%" y="133" width="0.0130%" height="15" fill="rgb(216,16,5)" fg:x="67623" fg:w="9"/><text x="97.9993%" y="143.50"></text></g><g><title>core::str::validations::next_code_point (9 samples, 0.01%)</title><rect x="97.7493%" y="117" width="0.0130%" height="15" fill="rgb(249,76,35)" fg:x="67623" fg:w="9"/><text x="97.9993%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (59 samples, 0.09%)</title><rect x="97.7089%" y="245" width="0.0853%" height="15" fill="rgb(207,11,44)" fg:x="67595" fg:w="59"/><text x="97.9589%" y="255.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (59 samples, 0.09%)</title><rect x="97.7089%" y="229" width="0.0853%" height="15" fill="rgb(228,190,49)" fg:x="67595" fg:w="59"/><text x="97.9589%" y="239.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (58 samples, 0.08%)</title><rect x="97.7103%" y="213" width="0.0838%" height="15" fill="rgb(214,173,12)" fg:x="67596" fg:w="58"/><text x="97.9603%" y="223.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (51 samples, 0.07%)</title><rect x="97.7204%" y="197" width="0.0737%" height="15" fill="rgb(218,26,35)" fg:x="67603" fg:w="51"/><text x="97.9704%" y="207.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (51 samples, 0.07%)</title><rect x="97.7204%" y="181" width="0.0737%" height="15" fill="rgb(220,200,19)" fg:x="67603" fg:w="51"/><text x="97.9704%" y="191.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (38 samples, 0.05%)</title><rect x="97.7392%" y="165" width="0.0549%" height="15" fill="rgb(239,95,49)" fg:x="67616" fg:w="38"/><text x="97.9892%" y="175.50"></text></g><g><title>pest::position::Position::match_range (38 samples, 0.05%)</title><rect x="97.7392%" y="149" width="0.0549%" height="15" fill="rgb(235,85,53)" fg:x="67616" fg:w="38"/><text x="97.9892%" y="159.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (22 samples, 0.03%)</title><rect x="97.7624%" y="133" width="0.0318%" height="15" fill="rgb(233,133,31)" fg:x="67632" fg:w="22"/><text x="98.0124%" y="143.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (22 samples, 0.03%)</title><rect x="97.7624%" y="117" width="0.0318%" height="15" fill="rgb(218,25,20)" fg:x="67632" fg:w="22"/><text x="98.0124%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (22 samples, 0.03%)</title><rect x="97.7624%" y="101" width="0.0318%" height="15" fill="rgb(252,210,38)" fg:x="67632" fg:w="22"/><text x="98.0124%" y="111.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (11 samples, 0.02%)</title><rect x="97.7783%" y="85" width="0.0159%" height="15" fill="rgb(242,134,21)" fg:x="67643" fg:w="11"/><text x="98.0283%" y="95.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (10 samples, 0.01%)</title><rect x="97.7999%" y="213" width="0.0145%" height="15" fill="rgb(213,28,48)" fg:x="67658" fg:w="10"/><text x="98.0499%" y="223.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (7 samples, 0.01%)</title><rect x="97.8043%" y="197" width="0.0101%" height="15" fill="rgb(250,196,2)" fg:x="67661" fg:w="7"/><text x="98.0543%" y="207.50"></text></g><g><title>pest::position::Position::match_range (7 samples, 0.01%)</title><rect x="97.8043%" y="181" width="0.0101%" height="15" fill="rgb(227,5,17)" fg:x="67661" fg:w="7"/><text x="98.0543%" y="191.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="97.8722%" y="117" width="0.0202%" height="15" fill="rgb(221,226,24)" fg:x="67708" fg:w="14"/><text x="98.1222%" y="127.50"></text></g><g><title>core::str::validations::next_code_point (14 samples, 0.02%)</title><rect x="97.8722%" y="101" width="0.0202%" height="15" fill="rgb(211,5,48)" fg:x="67708" fg:w="14"/><text x="98.1222%" y="111.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (91 samples, 0.13%)</title><rect x="97.7971%" y="229" width="0.1315%" height="15" fill="rgb(219,150,6)" fg:x="67656" fg:w="91"/><text x="98.0471%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (79 samples, 0.11%)</title><rect x="97.8144%" y="213" width="0.1142%" height="15" fill="rgb(251,46,16)" fg:x="67668" fg:w="79"/><text x="98.0644%" y="223.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (79 samples, 0.11%)</title><rect x="97.8144%" y="197" width="0.1142%" height="15" fill="rgb(220,204,40)" fg:x="67668" fg:w="79"/><text x="98.0644%" y="207.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (79 samples, 0.11%)</title><rect x="97.8144%" y="181" width="0.1142%" height="15" fill="rgb(211,85,2)" fg:x="67668" fg:w="79"/><text x="98.0644%" y="191.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (67 samples, 0.10%)</title><rect x="97.8317%" y="165" width="0.0968%" height="15" fill="rgb(229,17,7)" fg:x="67680" fg:w="67"/><text x="98.0817%" y="175.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (57 samples, 0.08%)</title><rect x="97.8462%" y="149" width="0.0824%" height="15" fill="rgb(239,72,28)" fg:x="67690" fg:w="57"/><text x="98.0962%" y="159.50"></text></g><g><title>pest::position::Position::match_range (57 samples, 0.08%)</title><rect x="97.8462%" y="133" width="0.0824%" height="15" fill="rgb(230,47,54)" fg:x="67690" fg:w="57"/><text x="98.0962%" y="143.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (25 samples, 0.04%)</title><rect x="97.8925%" y="117" width="0.0361%" height="15" fill="rgb(214,50,8)" fg:x="67722" fg:w="25"/><text x="98.1425%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (25 samples, 0.04%)</title><rect x="97.8925%" y="101" width="0.0361%" height="15" fill="rgb(216,198,43)" fg:x="67722" fg:w="25"/><text x="98.1425%" y="111.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (25 samples, 0.04%)</title><rect x="97.8925%" y="85" width="0.0361%" height="15" fill="rgb(234,20,35)" fg:x="67722" fg:w="25"/><text x="98.1425%" y="95.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (10 samples, 0.01%)</title><rect x="97.9141%" y="69" width="0.0145%" height="15" fill="rgb(254,45,19)" fg:x="67737" fg:w="10"/><text x="98.1641%" y="79.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (155 samples, 0.22%)</title><rect x="97.7089%" y="261" width="0.2241%" height="15" fill="rgb(219,14,44)" fg:x="67595" fg:w="155"/><text x="97.9589%" y="271.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (96 samples, 0.14%)</title><rect x="97.7942%" y="245" width="0.1388%" height="15" fill="rgb(217,220,26)" fg:x="67654" fg:w="96"/><text x="98.0442%" y="255.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}} (196 samples, 0.28%)</title><rect x="97.6539%" y="325" width="0.2833%" height="15" fill="rgb(213,158,28)" fg:x="67557" fg:w="196"/><text x="97.9039%" y="335.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (196 samples, 0.28%)</title><rect x="97.6539%" y="309" width="0.2833%" height="15" fill="rgb(252,51,52)" fg:x="67557" fg:w="196"/><text x="97.9039%" y="319.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}} (194 samples, 0.28%)</title><rect x="97.6568%" y="293" width="0.2804%" height="15" fill="rgb(246,89,16)" fg:x="67559" fg:w="194"/><text x="97.9068%" y="303.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (158 samples, 0.23%)</title><rect x="97.7089%" y="277" width="0.2284%" height="15" fill="rgb(216,158,49)" fg:x="67595" fg:w="158"/><text x="97.9589%" y="287.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}} (201 samples, 0.29%)</title><rect x="97.6482%" y="357" width="0.2905%" height="15" fill="rgb(236,107,19)" fg:x="67553" fg:w="201"/><text x="97.8982%" y="367.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (201 samples, 0.29%)</title><rect x="97.6482%" y="341" width="0.2905%" height="15" fill="rgb(228,185,30)" fg:x="67553" fg:w="201"/><text x="97.8982%" y="351.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number (227 samples, 0.33%)</title><rect x="97.6265%" y="389" width="0.3281%" height="15" fill="rgb(246,134,8)" fg:x="67538" fg:w="227"/><text x="97.8765%" y="399.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (227 samples, 0.33%)</title><rect x="97.6265%" y="373" width="0.3281%" height="15" fill="rgb(214,143,50)" fg:x="67538" fg:w="227"/><text x="97.8765%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (231 samples, 0.33%)</title><rect x="97.6250%" y="421" width="0.3339%" height="15" fill="rgb(228,75,8)" fg:x="67537" fg:w="231"/><text x="97.8750%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (231 samples, 0.33%)</title><rect x="97.6250%" y="405" width="0.3339%" height="15" fill="rgb(207,175,4)" fg:x="67537" fg:w="231"/><text x="97.8750%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (237 samples, 0.34%)</title><rect x="97.6250%" y="453" width="0.3426%" height="15" fill="rgb(205,108,24)" fg:x="67537" fg:w="237"/><text x="97.8750%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}} (237 samples, 0.34%)</title><rect x="97.6250%" y="437" width="0.3426%" height="15" fill="rgb(244,120,49)" fg:x="67537" fg:w="237"/><text x="97.8750%" y="447.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Sign::{{closure}} (11 samples, 0.02%)</title><rect x="97.9951%" y="389" width="0.0159%" height="15" fill="rgb(223,47,38)" fg:x="67793" fg:w="11"/><text x="98.2451%" y="399.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}} (274 samples, 0.40%)</title><rect x="97.6250%" y="469" width="0.3961%" height="15" fill="rgb(229,179,11)" fg:x="67537" fg:w="274"/><text x="97.8750%" y="479.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (37 samples, 0.05%)</title><rect x="97.9676%" y="453" width="0.0535%" height="15" fill="rgb(231,122,1)" fg:x="67774" fg:w="37"/><text x="98.2176%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}} (37 samples, 0.05%)</title><rect x="97.9676%" y="437" width="0.0535%" height="15" fill="rgb(245,119,9)" fg:x="67774" fg:w="37"/><text x="98.2176%" y="447.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Sign (36 samples, 0.05%)</title><rect x="97.9691%" y="421" width="0.0520%" height="15" fill="rgb(241,163,25)" fg:x="67775" fg:w="36"/><text x="98.2191%" y="431.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (36 samples, 0.05%)</title><rect x="97.9691%" y="405" width="0.0520%" height="15" fill="rgb(217,214,3)" fg:x="67775" fg:w="36"/><text x="98.2191%" y="415.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}} (285 samples, 0.41%)</title><rect x="97.6149%" y="533" width="0.4120%" height="15" fill="rgb(240,86,28)" fg:x="67530" fg:w="285"/><text x="97.8649%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (285 samples, 0.41%)</title><rect x="97.6149%" y="517" width="0.4120%" height="15" fill="rgb(215,47,9)" fg:x="67530" fg:w="285"/><text x="97.8649%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}} (281 samples, 0.41%)</title><rect x="97.6207%" y="501" width="0.4062%" height="15" fill="rgb(252,25,45)" fg:x="67534" fg:w="281"/><text x="97.8707%" y="511.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (281 samples, 0.41%)</title><rect x="97.6207%" y="485" width="0.4062%" height="15" fill="rgb(251,164,9)" fg:x="67534" fg:w="281"/><text x="97.8707%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.02%)</title><rect x="98.0298%" y="533" width="0.0188%" height="15" fill="rgb(233,194,0)" fg:x="67817" fg:w="13"/><text x="98.2798%" y="543.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="98.0370%" y="517" width="0.0116%" height="15" fill="rgb(249,111,24)" fg:x="67822" fg:w="8"/><text x="98.2870%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}}::{{closure}} (481 samples, 0.70%)</title><rect x="97.3677%" y="613" width="0.6953%" height="15" fill="rgb(250,223,3)" fg:x="67359" fg:w="481"/><text x="97.6177%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (419 samples, 0.61%)</title><rect x="97.4574%" y="597" width="0.6057%" height="15" fill="rgb(236,178,37)" fg:x="67421" fg:w="419"/><text x="97.7074%" y="607.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}}::{{closure}}::{{closure}} (419 samples, 0.61%)</title><rect x="97.4574%" y="581" width="0.6057%" height="15" fill="rgb(241,158,50)" fg:x="67421" fg:w="419"/><text x="97.7074%" y="591.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real (325 samples, 0.47%)</title><rect x="97.5932%" y="565" width="0.4698%" height="15" fill="rgb(213,121,41)" fg:x="67515" fg:w="325"/><text x="97.8432%" y="575.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (325 samples, 0.47%)</title><rect x="97.5932%" y="549" width="0.4698%" height="15" fill="rgb(240,92,3)" fg:x="67515" fg:w="325"/><text x="97.8432%" y="559.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::track (7 samples, 0.01%)</title><rect x="98.0529%" y="533" width="0.0101%" height="15" fill="rgb(205,123,3)" fg:x="67833" fg:w="7"/><text x="98.3029%" y="543.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex::{{closure}} (488 samples, 0.71%)</title><rect x="97.3648%" y="645" width="0.7054%" height="15" fill="rgb(205,97,47)" fg:x="67357" fg:w="488"/><text x="97.6148%" y="655.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (488 samples, 0.71%)</title><rect x="97.3648%" y="629" width="0.7054%" height="15" fill="rgb(247,152,14)" fg:x="67357" fg:w="488"/><text x="97.6148%" y="639.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseComplex (503 samples, 0.73%)</title><rect x="97.3605%" y="677" width="0.7271%" height="15" fill="rgb(248,195,53)" fg:x="67354" fg:w="503"/><text x="97.6105%" y="687.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (503 samples, 0.73%)</title><rect x="97.3605%" y="661" width="0.7271%" height="15" fill="rgb(226,201,16)" fg:x="67354" fg:w="503"/><text x="97.6105%" y="671.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (34 samples, 0.05%)</title><rect x="98.1310%" y="533" width="0.0491%" height="15" fill="rgb(205,98,0)" fg:x="67887" fg:w="34"/><text x="98.3810%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (34 samples, 0.05%)</title><rect x="98.1310%" y="517" width="0.0491%" height="15" fill="rgb(214,191,48)" fg:x="67887" fg:w="34"/><text x="98.3810%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (33 samples, 0.05%)</title><rect x="98.1324%" y="501" width="0.0477%" height="15" fill="rgb(237,112,39)" fg:x="67888" fg:w="33"/><text x="98.3824%" y="511.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (33 samples, 0.05%)</title><rect x="98.1324%" y="485" width="0.0477%" height="15" fill="rgb(247,203,27)" fg:x="67888" fg:w="33"/><text x="98.3824%" y="495.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (33 samples, 0.05%)</title><rect x="98.1324%" y="469" width="0.0477%" height="15" fill="rgb(235,124,28)" fg:x="67888" fg:w="33"/><text x="98.3824%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (27 samples, 0.04%)</title><rect x="98.1411%" y="453" width="0.0390%" height="15" fill="rgb(208,207,46)" fg:x="67894" fg:w="27"/><text x="98.3911%" y="463.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (27 samples, 0.04%)</title><rect x="98.1411%" y="437" width="0.0390%" height="15" fill="rgb(234,176,4)" fg:x="67894" fg:w="27"/><text x="98.3911%" y="447.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (27 samples, 0.04%)</title><rect x="98.1411%" y="421" width="0.0390%" height="15" fill="rgb(230,133,28)" fg:x="67894" fg:w="27"/><text x="98.3911%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (25 samples, 0.04%)</title><rect x="98.1440%" y="405" width="0.0361%" height="15" fill="rgb(211,137,40)" fg:x="67896" fg:w="25"/><text x="98.3940%" y="415.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (18 samples, 0.03%)</title><rect x="98.1541%" y="389" width="0.0260%" height="15" fill="rgb(254,35,13)" fg:x="67903" fg:w="18"/><text x="98.4041%" y="399.50"></text></g><g><title>pest::position::Position::match_range (18 samples, 0.03%)</title><rect x="98.1541%" y="373" width="0.0260%" height="15" fill="rgb(225,49,51)" fg:x="67903" fg:w="18"/><text x="98.4041%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (12 samples, 0.02%)</title><rect x="98.1628%" y="357" width="0.0173%" height="15" fill="rgb(251,10,15)" fg:x="67909" fg:w="12"/><text x="98.4128%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (12 samples, 0.02%)</title><rect x="98.1628%" y="341" width="0.0173%" height="15" fill="rgb(228,207,15)" fg:x="67909" fg:w="12"/><text x="98.4128%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (12 samples, 0.02%)</title><rect x="98.1628%" y="325" width="0.0173%" height="15" fill="rgb(241,99,19)" fg:x="67909" fg:w="12"/><text x="98.4128%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (8 samples, 0.01%)</title><rect x="98.1685%" y="309" width="0.0116%" height="15" fill="rgb(207,104,49)" fg:x="67913" fg:w="8"/><text x="98.4185%" y="319.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (54 samples, 0.08%)</title><rect x="98.1165%" y="565" width="0.0781%" height="15" fill="rgb(234,99,18)" fg:x="67877" fg:w="54"/><text x="98.3665%" y="575.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (54 samples, 0.08%)</title><rect x="98.1165%" y="549" width="0.0781%" height="15" fill="rgb(213,191,49)" fg:x="67877" fg:w="54"/><text x="98.3665%" y="559.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::hidden::skip (15 samples, 0.02%)</title><rect x="98.1960%" y="533" width="0.0217%" height="15" fill="rgb(210,226,19)" fg:x="67932" fg:w="15"/><text x="98.4460%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (13 samples, 0.02%)</title><rect x="98.1989%" y="517" width="0.0188%" height="15" fill="rgb(229,97,18)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::hidden::skip::{{closure}} (13 samples, 0.02%)</title><rect x="98.1989%" y="501" width="0.0188%" height="15" fill="rgb(211,167,15)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="511.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::WHITESPACE (13 samples, 0.02%)</title><rect x="98.1989%" y="485" width="0.0188%" height="15" fill="rgb(210,169,34)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="495.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (13 samples, 0.02%)</title><rect x="98.1989%" y="469" width="0.0188%" height="15" fill="rgb(241,121,31)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="479.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::WHITESPACE::{{closure}} (13 samples, 0.02%)</title><rect x="98.1989%" y="453" width="0.0188%" height="15" fill="rgb(232,40,11)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="463.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_string (13 samples, 0.02%)</title><rect x="98.1989%" y="437" width="0.0188%" height="15" fill="rgb(205,86,26)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="447.50"></text></g><g><title>pest::position::Position::match_string (13 samples, 0.02%)</title><rect x="98.1989%" y="421" width="0.0188%" height="15" fill="rgb(231,126,28)" fg:x="67934" fg:w="13"/><text x="98.4489%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (10 samples, 0.01%)</title><rect x="98.2278%" y="421" width="0.0145%" height="15" fill="rgb(219,221,18)" fg:x="67954" fg:w="10"/><text x="98.4778%" y="431.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (9 samples, 0.01%)</title><rect x="98.2293%" y="405" width="0.0130%" height="15" fill="rgb(211,40,0)" fg:x="67955" fg:w="9"/><text x="98.4793%" y="415.50"></text></g><g><title>pest::position::Position::match_range (9 samples, 0.01%)</title><rect x="98.2293%" y="389" width="0.0130%" height="15" fill="rgb(239,85,43)" fg:x="67955" fg:w="9"/><text x="98.4793%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (7 samples, 0.01%)</title><rect x="98.2321%" y="373" width="0.0101%" height="15" fill="rgb(231,55,21)" fg:x="67957" fg:w="7"/><text x="98.4821%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (7 samples, 0.01%)</title><rect x="98.2321%" y="357" width="0.0101%" height="15" fill="rgb(225,184,43)" fg:x="67957" fg:w="7"/><text x="98.4821%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (7 samples, 0.01%)</title><rect x="98.2321%" y="341" width="0.0101%" height="15" fill="rgb(251,158,41)" fg:x="67957" fg:w="7"/><text x="98.4821%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="98.2654%" y="325" width="0.0145%" height="15" fill="rgb(234,159,37)" fg:x="67980" fg:w="10"/><text x="98.5154%" y="335.50"></text></g><g><title>core::str::validations::next_code_point (10 samples, 0.01%)</title><rect x="98.2654%" y="309" width="0.0145%" height="15" fill="rgb(216,204,22)" fg:x="67980" fg:w="10"/><text x="98.5154%" y="319.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}} (49 samples, 0.07%)</title><rect x="98.2278%" y="437" width="0.0708%" height="15" fill="rgb(214,17,3)" fg:x="67954" fg:w="49"/><text x="98.4778%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (39 samples, 0.06%)</title><rect x="98.2423%" y="421" width="0.0564%" height="15" fill="rgb(212,111,17)" fg:x="67964" fg:w="39"/><text x="98.4923%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}}::{{closure}}::{{closure}} (38 samples, 0.05%)</title><rect x="98.2437%" y="405" width="0.0549%" height="15" fill="rgb(221,157,24)" fg:x="67965" fg:w="38"/><text x="98.4937%" y="415.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (38 samples, 0.05%)</title><rect x="98.2437%" y="389" width="0.0549%" height="15" fill="rgb(252,16,13)" fg:x="67965" fg:w="38"/><text x="98.4937%" y="399.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (32 samples, 0.05%)</title><rect x="98.2524%" y="373" width="0.0463%" height="15" fill="rgb(221,62,2)" fg:x="67971" fg:w="32"/><text x="98.5024%" y="383.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (26 samples, 0.04%)</title><rect x="98.2611%" y="357" width="0.0376%" height="15" fill="rgb(247,87,22)" fg:x="67977" fg:w="26"/><text x="98.5111%" y="367.50"></text></g><g><title>pest::position::Position::match_range (26 samples, 0.04%)</title><rect x="98.2611%" y="341" width="0.0376%" height="15" fill="rgb(215,73,9)" fg:x="67977" fg:w="26"/><text x="98.5111%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (13 samples, 0.02%)</title><rect x="98.2798%" y="325" width="0.0188%" height="15" fill="rgb(207,175,33)" fg:x="67990" fg:w="13"/><text x="98.5298%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (13 samples, 0.02%)</title><rect x="98.2798%" y="309" width="0.0188%" height="15" fill="rgb(243,129,54)" fg:x="67990" fg:w="13"/><text x="98.5298%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (13 samples, 0.02%)</title><rect x="98.2798%" y="293" width="0.0188%" height="15" fill="rgb(227,119,45)" fg:x="67990" fg:w="13"/><text x="98.5298%" y="303.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}} (59 samples, 0.09%)</title><rect x="98.2278%" y="501" width="0.0853%" height="15" fill="rgb(205,109,36)" fg:x="67954" fg:w="59"/><text x="98.4778%" y="511.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (59 samples, 0.09%)</title><rect x="98.2278%" y="485" width="0.0853%" height="15" fill="rgb(205,6,39)" fg:x="67954" fg:w="59"/><text x="98.4778%" y="495.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension::{{closure}}::{{closure}} (59 samples, 0.09%)</title><rect x="98.2278%" y="469" width="0.0853%" height="15" fill="rgb(221,32,16)" fg:x="67954" fg:w="59"/><text x="98.4778%" y="479.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (59 samples, 0.09%)</title><rect x="98.2278%" y="453" width="0.0853%" height="15" fill="rgb(228,144,50)" fg:x="67954" fg:w="59"/><text x="98.4778%" y="463.50"></text></g><g><title>&lt;pest::position::Position as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="98.2986%" y="437" width="0.0145%" height="15" fill="rgb(229,201,53)" fg:x="68003" fg:w="10"/><text x="98.5486%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="98.3131%" y="501" width="0.0145%" height="15" fill="rgb(249,153,27)" fg:x="68013" fg:w="10"/><text x="98.5631%" y="511.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="98.3160%" y="485" width="0.0116%" height="15" fill="rgb(227,106,25)" fg:x="68015" fg:w="8"/><text x="98.5660%" y="495.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Dimension (77 samples, 0.11%)</title><rect x="98.2177%" y="533" width="0.1113%" height="15" fill="rgb(230,65,29)" fg:x="67947" fg:w="77"/><text x="98.4677%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (77 samples, 0.11%)</title><rect x="98.2177%" y="517" width="0.1113%" height="15" fill="rgb(221,57,46)" fg:x="67947" fg:w="77"/><text x="98.4677%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}}::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="98.3868%" y="85" width="0.0145%" height="15" fill="rgb(229,161,17)" fg:x="68064" fg:w="10"/><text x="98.6368%" y="95.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_insensitive (10 samples, 0.01%)</title><rect x="98.3868%" y="69" width="0.0145%" height="15" fill="rgb(222,213,11)" fg:x="68064" fg:w="10"/><text x="98.6368%" y="79.50"></text></g><g><title>pest::position::Position::match_insensitive (10 samples, 0.01%)</title><rect x="98.3868%" y="53" width="0.0145%" height="15" fill="rgb(235,35,13)" fg:x="68064" fg:w="10"/><text x="98.6368%" y="63.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}} (12 samples, 0.02%)</title><rect x="98.3854%" y="149" width="0.0173%" height="15" fill="rgb(233,158,34)" fg:x="68063" fg:w="12"/><text x="98.6354%" y="159.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (12 samples, 0.02%)</title><rect x="98.3854%" y="133" width="0.0173%" height="15" fill="rgb(215,151,48)" fg:x="68063" fg:w="12"/><text x="98.6354%" y="143.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp::{{closure}}::{{closure}} (11 samples, 0.02%)</title><rect x="98.3868%" y="117" width="0.0159%" height="15" fill="rgb(229,84,14)" fg:x="68064" fg:w="11"/><text x="98.6368%" y="127.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (11 samples, 0.02%)</title><rect x="98.3868%" y="101" width="0.0159%" height="15" fill="rgb(229,68,14)" fg:x="68064" fg:w="11"/><text x="98.6368%" y="111.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (23 samples, 0.03%)</title><rect x="98.3738%" y="245" width="0.0332%" height="15" fill="rgb(243,106,26)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="255.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="98.3738%" y="229" width="0.0332%" height="15" fill="rgb(206,45,38)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="239.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (23 samples, 0.03%)</title><rect x="98.3738%" y="213" width="0.0332%" height="15" fill="rgb(226,6,15)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="223.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="98.3738%" y="197" width="0.0332%" height="15" fill="rgb(232,22,54)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="207.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Exp (23 samples, 0.03%)</title><rect x="98.3738%" y="181" width="0.0332%" height="15" fill="rgb(229,222,32)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="191.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (23 samples, 0.03%)</title><rect x="98.3738%" y="165" width="0.0332%" height="15" fill="rgb(228,62,29)" fg:x="68055" fg:w="23"/><text x="98.6238%" y="175.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_string (10 samples, 0.01%)</title><rect x="98.4071%" y="181" width="0.0145%" height="15" fill="rgb(251,103,34)" fg:x="68078" fg:w="10"/><text x="98.6571%" y="191.50"></text></g><g><title>pest::position::Position::match_string (10 samples, 0.01%)</title><rect x="98.4071%" y="165" width="0.0145%" height="15" fill="rgb(233,12,30)" fg:x="68078" fg:w="10"/><text x="98.6571%" y="175.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="98.4692%" y="101" width="0.0173%" height="15" fill="rgb(238,52,0)" fg:x="68121" fg:w="12"/><text x="98.7192%" y="111.50"></text></g><g><title>core::str::validations::next_code_point (12 samples, 0.02%)</title><rect x="98.4692%" y="85" width="0.0173%" height="15" fill="rgb(223,98,5)" fg:x="68121" fg:w="12"/><text x="98.7192%" y="95.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (74 samples, 0.11%)</title><rect x="98.4071%" y="213" width="0.1070%" height="15" fill="rgb(228,75,37)" fg:x="68078" fg:w="74"/><text x="98.6571%" y="223.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (74 samples, 0.11%)</title><rect x="98.4071%" y="197" width="0.1070%" height="15" fill="rgb(205,115,49)" fg:x="68078" fg:w="74"/><text x="98.6571%" y="207.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (64 samples, 0.09%)</title><rect x="98.4215%" y="181" width="0.0925%" height="15" fill="rgb(250,154,43)" fg:x="68088" fg:w="64"/><text x="98.6715%" y="191.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (53 samples, 0.08%)</title><rect x="98.4374%" y="165" width="0.0766%" height="15" fill="rgb(226,43,29)" fg:x="68099" fg:w="53"/><text x="98.6874%" y="175.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (53 samples, 0.08%)</title><rect x="98.4374%" y="149" width="0.0766%" height="15" fill="rgb(249,228,39)" fg:x="68099" fg:w="53"/><text x="98.6874%" y="159.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (39 samples, 0.06%)</title><rect x="98.4576%" y="133" width="0.0564%" height="15" fill="rgb(216,79,43)" fg:x="68113" fg:w="39"/><text x="98.7076%" y="143.50"></text></g><g><title>pest::position::Position::match_range (39 samples, 0.06%)</title><rect x="98.4576%" y="117" width="0.0564%" height="15" fill="rgb(228,95,12)" fg:x="68113" fg:w="39"/><text x="98.7076%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (19 samples, 0.03%)</title><rect x="98.4866%" y="101" width="0.0275%" height="15" fill="rgb(249,221,15)" fg:x="68133" fg:w="19"/><text x="98.7366%" y="111.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (19 samples, 0.03%)</title><rect x="98.4866%" y="85" width="0.0275%" height="15" fill="rgb(233,34,13)" fg:x="68133" fg:w="19"/><text x="98.7366%" y="95.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (19 samples, 0.03%)</title><rect x="98.4866%" y="69" width="0.0275%" height="15" fill="rgb(214,103,39)" fg:x="68133" fg:w="19"/><text x="98.7366%" y="79.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (8 samples, 0.01%)</title><rect x="98.5025%" y="53" width="0.0116%" height="15" fill="rgb(251,126,39)" fg:x="68144" fg:w="8"/><text x="98.7525%" y="63.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (7 samples, 0.01%)</title><rect x="98.5184%" y="181" width="0.0101%" height="15" fill="rgb(214,216,36)" fg:x="68155" fg:w="7"/><text x="98.7684%" y="191.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="98.5776%" y="85" width="0.0159%" height="15" fill="rgb(220,221,8)" fg:x="68196" fg:w="11"/><text x="98.8276%" y="95.50"></text></g><g><title>core::str::validations::next_code_point (11 samples, 0.02%)</title><rect x="98.5776%" y="69" width="0.0159%" height="15" fill="rgb(240,216,3)" fg:x="68196" fg:w="11"/><text x="98.8276%" y="79.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}} (182 samples, 0.26%)</title><rect x="98.3709%" y="325" width="0.2631%" height="15" fill="rgb(232,218,17)" fg:x="68053" fg:w="182"/><text x="98.6209%" y="335.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (182 samples, 0.26%)</title><rect x="98.3709%" y="309" width="0.2631%" height="15" fill="rgb(229,163,45)" fg:x="68053" fg:w="182"/><text x="98.6209%" y="319.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}} (180 samples, 0.26%)</title><rect x="98.3738%" y="293" width="0.2602%" height="15" fill="rgb(231,110,42)" fg:x="68055" fg:w="180"/><text x="98.6238%" y="303.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (180 samples, 0.26%)</title><rect x="98.3738%" y="277" width="0.2602%" height="15" fill="rgb(208,170,48)" fg:x="68055" fg:w="180"/><text x="98.6238%" y="287.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}} (180 samples, 0.26%)</title><rect x="98.3738%" y="261" width="0.2602%" height="15" fill="rgb(239,116,25)" fg:x="68055" fg:w="180"/><text x="98.6238%" y="271.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (157 samples, 0.23%)</title><rect x="98.4071%" y="245" width="0.2269%" height="15" fill="rgb(219,200,50)" fg:x="68078" fg:w="157"/><text x="98.6571%" y="255.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}} (157 samples, 0.23%)</title><rect x="98.4071%" y="229" width="0.2269%" height="15" fill="rgb(245,200,0)" fg:x="68078" fg:w="157"/><text x="98.6571%" y="239.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (83 samples, 0.12%)</title><rect x="98.5140%" y="213" width="0.1200%" height="15" fill="rgb(245,119,33)" fg:x="68152" fg:w="83"/><text x="98.7640%" y="223.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (83 samples, 0.12%)</title><rect x="98.5140%" y="197" width="0.1200%" height="15" fill="rgb(231,125,12)" fg:x="68152" fg:w="83"/><text x="98.7640%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (73 samples, 0.11%)</title><rect x="98.5285%" y="181" width="0.1055%" height="15" fill="rgb(216,96,41)" fg:x="68162" fg:w="73"/><text x="98.7785%" y="191.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (70 samples, 0.10%)</title><rect x="98.5328%" y="165" width="0.1012%" height="15" fill="rgb(248,43,45)" fg:x="68165" fg:w="70"/><text x="98.7828%" y="175.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (70 samples, 0.10%)</title><rect x="98.5328%" y="149" width="0.1012%" height="15" fill="rgb(217,222,7)" fg:x="68165" fg:w="70"/><text x="98.7828%" y="159.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::ASCII_DIGIT (56 samples, 0.08%)</title><rect x="98.5531%" y="133" width="0.0809%" height="15" fill="rgb(233,28,6)" fg:x="68179" fg:w="56"/><text x="98.8031%" y="143.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_range (49 samples, 0.07%)</title><rect x="98.5632%" y="117" width="0.0708%" height="15" fill="rgb(231,218,15)" fg:x="68186" fg:w="49"/><text x="98.8132%" y="127.50"></text></g><g><title>pest::position::Position::match_range (49 samples, 0.07%)</title><rect x="98.5632%" y="101" width="0.0708%" height="15" fill="rgb(226,171,48)" fg:x="68186" fg:w="49"/><text x="98.8132%" y="111.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (28 samples, 0.04%)</title><rect x="98.5935%" y="85" width="0.0405%" height="15" fill="rgb(235,201,9)" fg:x="68207" fg:w="28"/><text x="98.8435%" y="95.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (28 samples, 0.04%)</title><rect x="98.5935%" y="69" width="0.0405%" height="15" fill="rgb(217,80,15)" fg:x="68207" fg:w="28"/><text x="98.8435%" y="79.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (28 samples, 0.04%)</title><rect x="98.5935%" y="53" width="0.0405%" height="15" fill="rgb(219,152,8)" fg:x="68207" fg:w="28"/><text x="98.8435%" y="63.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (15 samples, 0.02%)</title><rect x="98.6123%" y="37" width="0.0217%" height="15" fill="rgb(243,107,38)" fg:x="68220" fg:w="15"/><text x="98.8623%" y="47.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Number (193 samples, 0.28%)</title><rect x="98.3622%" y="357" width="0.2790%" height="15" fill="rgb(231,17,5)" fg:x="68047" fg:w="193"/><text x="98.6122%" y="367.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (193 samples, 0.28%)</title><rect x="98.3622%" y="341" width="0.2790%" height="15" fill="rgb(209,25,54)" fg:x="68047" fg:w="193"/><text x="98.6122%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (198 samples, 0.29%)</title><rect x="98.3565%" y="389" width="0.2862%" height="15" fill="rgb(219,0,2)" fg:x="68043" fg:w="198"/><text x="98.6065%" y="399.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (198 samples, 0.29%)</title><rect x="98.3565%" y="373" width="0.2862%" height="15" fill="rgb(246,9,5)" fg:x="68043" fg:w="198"/><text x="98.6065%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (202 samples, 0.29%)</title><rect x="98.3565%" y="421" width="0.2920%" height="15" fill="rgb(226,159,4)" fg:x="68043" fg:w="202"/><text x="98.6065%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}} (202 samples, 0.29%)</title><rect x="98.3565%" y="405" width="0.2920%" height="15" fill="rgb(219,175,34)" fg:x="68043" fg:w="202"/><text x="98.6065%" y="415.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}} (212 samples, 0.31%)</title><rect x="98.3565%" y="437" width="0.3064%" height="15" fill="rgb(236,10,46)" fg:x="68043" fg:w="212"/><text x="98.6065%" y="447.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (10 samples, 0.01%)</title><rect x="98.6485%" y="421" width="0.0145%" height="15" fill="rgb(240,211,16)" fg:x="68245" fg:w="10"/><text x="98.8985%" y="431.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}}::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="98.6485%" y="405" width="0.0145%" height="15" fill="rgb(205,3,43)" fg:x="68245" fg:w="10"/><text x="98.8985%" y="415.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Sign (10 samples, 0.01%)</title><rect x="98.6485%" y="389" width="0.0145%" height="15" fill="rgb(245,7,22)" fg:x="68245" fg:w="10"/><text x="98.8985%" y="399.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (10 samples, 0.01%)</title><rect x="98.6485%" y="373" width="0.0145%" height="15" fill="rgb(239,132,32)" fg:x="68245" fg:w="10"/><text x="98.8985%" y="383.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}} (217 samples, 0.31%)</title><rect x="98.3507%" y="501" width="0.3137%" height="15" fill="rgb(228,202,34)" fg:x="68039" fg:w="217"/><text x="98.6007%" y="511.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (217 samples, 0.31%)</title><rect x="98.3507%" y="485" width="0.3137%" height="15" fill="rgb(254,200,22)" fg:x="68039" fg:w="217"/><text x="98.6007%" y="495.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real::{{closure}}::{{closure}} (217 samples, 0.31%)</title><rect x="98.3507%" y="469" width="0.3137%" height="15" fill="rgb(219,10,39)" fg:x="68039" fg:w="217"/><text x="98.6007%" y="479.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (217 samples, 0.31%)</title><rect x="98.3507%" y="453" width="0.3137%" height="15" fill="rgb(226,210,39)" fg:x="68039" fg:w="217"/><text x="98.6007%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="98.6644%" y="501" width="0.0130%" height="15" fill="rgb(208,219,16)" fg:x="68256" fg:w="9"/><text x="98.9144%" y="511.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseReal::{{closure}} (391 samples, 0.57%)</title><rect x="98.1136%" y="613" width="0.5652%" height="15" fill="rgb(216,158,51)" fg:x="67875" fg:w="391"/><text x="98.3636%" y="623.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (391 samples, 0.57%)</title><rect x="98.1136%" y="597" width="0.5652%" height="15" fill="rgb(233,14,44)" fg:x="67875" fg:w="391"/><text x="98.3636%" y="607.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseReal::{{closure}}::{{closure}} (389 samples, 0.56%)</title><rect x="98.1165%" y="581" width="0.5623%" height="15" fill="rgb(237,97,39)" fg:x="67877" fg:w="389"/><text x="98.3665%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (335 samples, 0.48%)</title><rect x="98.1946%" y="565" width="0.4842%" height="15" fill="rgb(218,198,43)" fg:x="67931" fg:w="335"/><text x="98.4446%" y="575.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseReal::{{closure}}::{{closure}}::{{closure}} (335 samples, 0.48%)</title><rect x="98.1946%" y="549" width="0.4842%" height="15" fill="rgb(231,104,20)" fg:x="67931" fg:w="335"/><text x="98.4446%" y="559.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Real (242 samples, 0.35%)</title><rect x="98.3290%" y="533" width="0.3498%" height="15" fill="rgb(254,36,13)" fg:x="68024" fg:w="242"/><text x="98.5790%" y="543.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (242 samples, 0.35%)</title><rect x="98.3290%" y="517" width="0.3498%" height="15" fill="rgb(248,14,50)" fg:x="68024" fg:w="242"/><text x="98.5790%" y="527.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Entry::{{closure}} (921 samples, 1.33%)</title><rect x="97.3591%" y="693" width="1.3313%" height="15" fill="rgb(217,107,29)" fg:x="67353" fg:w="921"/><text x="97.6091%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (417 samples, 0.60%)</title><rect x="98.0876%" y="677" width="0.6028%" height="15" fill="rgb(251,169,33)" fg:x="67857" fg:w="417"/><text x="98.3376%" y="687.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Entry::{{closure}}::{{closure}} (415 samples, 0.60%)</title><rect x="98.0905%" y="661" width="0.5999%" height="15" fill="rgb(217,108,32)" fg:x="67859" fg:w="415"/><text x="98.3405%" y="671.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::SparseReal (414 samples, 0.60%)</title><rect x="98.0919%" y="645" width="0.5984%" height="15" fill="rgb(219,66,42)" fg:x="67860" fg:w="414"/><text x="98.3419%" y="655.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (414 samples, 0.60%)</title><rect x="98.0919%" y="629" width="0.5984%" height="15" fill="rgb(206,180,7)" fg:x="67860" fg:w="414"/><text x="98.3419%" y="639.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (953 samples, 1.38%)</title><rect x="97.3244%" y="869" width="1.3776%" height="15" fill="rgb(208,226,31)" fg:x="67329" fg:w="953"/><text x="97.5744%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (948 samples, 1.37%)</title><rect x="97.3316%" y="853" width="1.3703%" height="15" fill="rgb(218,26,49)" fg:x="67334" fg:w="948"/><text x="97.5816%" y="863.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (948 samples, 1.37%)</title><rect x="97.3316%" y="837" width="1.3703%" height="15" fill="rgb(233,197,48)" fg:x="67334" fg:w="948"/><text x="97.5816%" y="847.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (948 samples, 1.37%)</title><rect x="97.3316%" y="821" width="1.3703%" height="15" fill="rgb(252,181,51)" fg:x="67334" fg:w="948"/><text x="97.5816%" y="831.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (948 samples, 1.37%)</title><rect x="97.3316%" y="805" width="1.3703%" height="15" fill="rgb(253,90,19)" fg:x="67334" fg:w="948"/><text x="97.5816%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (943 samples, 1.36%)</title><rect x="97.3388%" y="789" width="1.3631%" height="15" fill="rgb(215,171,30)" fg:x="67339" fg:w="943"/><text x="97.5888%" y="799.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (943 samples, 1.36%)</title><rect x="97.3388%" y="773" width="1.3631%" height="15" fill="rgb(214,222,9)" fg:x="67339" fg:w="943"/><text x="97.5888%" y="783.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (938 samples, 1.36%)</title><rect x="97.3461%" y="757" width="1.3559%" height="15" fill="rgb(223,3,22)" fg:x="67344" fg:w="938"/><text x="97.5961%" y="767.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (938 samples, 1.36%)</title><rect x="97.3461%" y="741" width="1.3559%" height="15" fill="rgb(225,196,46)" fg:x="67344" fg:w="938"/><text x="97.5961%" y="751.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Entry (937 samples, 1.35%)</title><rect x="97.3475%" y="725" width="1.3544%" height="15" fill="rgb(209,110,37)" fg:x="67345" fg:w="937"/><text x="97.5975%" y="735.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (936 samples, 1.35%)</title><rect x="97.3489%" y="709" width="1.3530%" height="15" fill="rgb(249,89,12)" fg:x="67346" fg:w="936"/><text x="97.5989%" y="719.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse (955 samples, 1.38%)</title><rect x="97.3229%" y="1173" width="1.3805%" height="15" fill="rgb(226,27,33)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1183.50"></text></g><g><title>pest::parser_state::state (955 samples, 1.38%)</title><rect x="97.3229%" y="1157" width="1.3805%" height="15" fill="rgb(213,82,22)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1167.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="1141" width="1.3805%" height="15" fill="rgb(248,140,0)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1151.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document (955 samples, 1.38%)</title><rect x="97.3229%" y="1125" width="1.3805%" height="15" fill="rgb(228,106,3)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1135.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (955 samples, 1.38%)</title><rect x="97.3229%" y="1109" width="1.3805%" height="15" fill="rgb(209,23,37)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1119.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="1093" width="1.3805%" height="15" fill="rgb(241,93,50)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1103.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (955 samples, 1.38%)</title><rect x="97.3229%" y="1077" width="1.3805%" height="15" fill="rgb(253,46,43)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1087.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="1061" width="1.3805%" height="15" fill="rgb(226,206,43)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (955 samples, 1.38%)</title><rect x="97.3229%" y="1045" width="1.3805%" height="15" fill="rgb(217,54,7)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1055.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="1029" width="1.3805%" height="15" fill="rgb(223,5,52)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1039.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (955 samples, 1.38%)</title><rect x="97.3229%" y="1013" width="1.3805%" height="15" fill="rgb(206,52,46)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1023.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="997" width="1.3805%" height="15" fill="rgb(253,136,11)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="1007.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::optional (955 samples, 1.38%)</title><rect x="97.3229%" y="981" width="1.3805%" height="15" fill="rgb(208,106,33)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="991.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="965" width="1.3805%" height="15" fill="rgb(206,54,4)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (955 samples, 1.38%)</title><rect x="97.3229%" y="949" width="1.3805%" height="15" fill="rgb(213,3,15)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="959.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (955 samples, 1.38%)</title><rect x="97.3229%" y="933" width="1.3805%" height="15" fill="rgb(252,211,39)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="943.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::repeat (955 samples, 1.38%)</title><rect x="97.3229%" y="917" width="1.3805%" height="15" fill="rgb(223,6,36)" fg:x="67328" fg:w="955"/><text x="97.5729%" y="927.50"></text></g><g><title>&lt;nalgebra_sparse::io::matrix_market::MatrixMarketParser as pest::parser::Parser&lt;nalgebra_sparse::io::matrix_market::Rule&gt;&gt;::parse::rules::visible::Document::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (954 samples, 1.38%)</title><rect x="97.3244%" y="901" width="1.3790%" height="15" fill="rgb(252,169,45)" fg:x="67329" fg:w="954"/><text x="97.5744%" y="911.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (954 samples, 1.38%)</title><rect x="97.3244%" y="885" width="1.3790%" height="15" fill="rgb(212,48,26)" fg:x="67329" fg:w="954"/><text x="97.5744%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="98.7121%" y="1173" width="0.0130%" height="15" fill="rgb(251,102,48)" fg:x="68289" fg:w="9"/><text x="98.9621%" y="1183.50"></text></g><g><title>pest::iterators::pairs::Pairs&lt;R&gt;::pair (111 samples, 0.16%)</title><rect x="98.7280%" y="1125" width="0.1605%" height="15" fill="rgb(243,208,16)" fg:x="68300" fg:w="111"/><text x="98.9780%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (115 samples, 0.17%)</title><rect x="98.7251%" y="1173" width="0.1662%" height="15" fill="rgb(219,96,24)" fg:x="68298" fg:w="115"/><text x="98.9751%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (115 samples, 0.17%)</title><rect x="98.7251%" y="1157" width="0.1662%" height="15" fill="rgb(219,33,29)" fg:x="68298" fg:w="115"/><text x="98.9751%" y="1167.50"></text></g><g><title>&lt;pest::iterators::pairs::Pairs&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.17%)</title><rect x="98.7251%" y="1141" width="0.1662%" height="15" fill="rgb(223,176,5)" fg:x="68298" fg:w="115"/><text x="98.9751%" y="1151.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::try_from_triplets (11 samples, 0.02%)</title><rect x="98.8913%" y="1173" width="0.0159%" height="15" fill="rgb(228,140,14)" fg:x="68413" fg:w="11"/><text x="99.1413%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (11 samples, 0.02%)</title><rect x="98.8913%" y="1157" width="0.0159%" height="15" fill="rgb(217,179,31)" fg:x="68413" fg:w="11"/><text x="99.1413%" y="1167.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::try_from_triplets::{{closure}} (7 samples, 0.01%)</title><rect x="98.8971%" y="1141" width="0.0101%" height="15" fill="rgb(230,9,30)" fg:x="68417" fg:w="7"/><text x="99.1471%" y="1151.50"></text></g><g><title>&lt;pest::iterators::pairs::Pairs&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="98.9101%" y="1157" width="0.0130%" height="15" fill="rgb(230,136,20)" fg:x="68426" fg:w="9"/><text x="99.1601%" y="1167.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (18 samples, 0.03%)</title><rect x="98.9853%" y="1093" width="0.0260%" height="15" fill="rgb(215,210,22)" fg:x="68478" fg:w="18"/><text x="99.2353%" y="1103.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (33 samples, 0.05%)</title><rect x="98.9650%" y="1109" width="0.0477%" height="15" fill="rgb(218,43,5)" fg:x="68464" fg:w="33"/><text x="99.2150%" y="1119.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::step (14 samples, 0.02%)</title><rect x="99.0489%" y="1045" width="0.0202%" height="15" fill="rgb(216,11,5)" fg:x="68522" fg:w="14"/><text x="99.2989%" y="1055.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::step_by (14 samples, 0.02%)</title><rect x="99.0489%" y="1029" width="0.0202%" height="15" fill="rgb(209,82,29)" fg:x="68522" fg:w="14"/><text x="99.2989%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.02%)</title><rect x="99.0489%" y="1013" width="0.0202%" height="15" fill="rgb(244,115,12)" fg:x="68522" fg:w="14"/><text x="99.2989%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.02%)</title><rect x="99.0489%" y="997" width="0.0202%" height="15" fill="rgb(222,82,18)" fg:x="68522" fg:w="14"/><text x="99.2989%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.02%)</title><rect x="99.0489%" y="981" width="0.0202%" height="15" fill="rgb(249,227,8)" fg:x="68522" fg:w="14"/><text x="99.2989%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (105 samples, 0.15%)</title><rect x="98.9274%" y="1157" width="0.1518%" height="15" fill="rgb(253,141,45)" fg:x="68438" fg:w="105"/><text x="99.1774%" y="1167.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (105 samples, 0.15%)</title><rect x="98.9274%" y="1141" width="0.1518%" height="15" fill="rgb(234,184,4)" fg:x="68438" fg:w="105"/><text x="99.1774%" y="1151.50"></text></g><g><title>core::num::dec2flt::dec2flt (105 samples, 0.15%)</title><rect x="98.9274%" y="1125" width="0.1518%" height="15" fill="rgb(218,194,23)" fg:x="68438" fg:w="105"/><text x="99.1774%" y="1135.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (46 samples, 0.07%)</title><rect x="99.0127%" y="1109" width="0.0665%" height="15" fill="rgb(235,66,41)" fg:x="68497" fg:w="46"/><text x="99.2627%" y="1119.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (44 samples, 0.06%)</title><rect x="99.0156%" y="1093" width="0.0636%" height="15" fill="rgb(245,217,1)" fg:x="68499" fg:w="44"/><text x="99.2656%" y="1103.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (37 samples, 0.05%)</title><rect x="99.0257%" y="1077" width="0.0535%" height="15" fill="rgb(229,91,1)" fg:x="68506" fg:w="37"/><text x="99.2757%" y="1087.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::parse_digits (37 samples, 0.05%)</title><rect x="99.0257%" y="1061" width="0.0535%" height="15" fill="rgb(207,101,30)" fg:x="68506" fg:w="37"/><text x="99.2757%" y="1071.50"></text></g><g><title>&lt;pest::iterators::pairs::Pairs&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.09%)</title><rect x="99.0995%" y="1141" width="0.0925%" height="15" fill="rgb(223,82,49)" fg:x="68557" fg:w="64"/><text x="99.3495%" y="1151.50"></text></g><g><title>pest::iterators::pairs::Pairs&lt;R&gt;::peek (20 samples, 0.03%)</title><rect x="99.1631%" y="1125" width="0.0289%" height="15" fill="rgb(218,167,17)" fg:x="68601" fg:w="20"/><text x="99.4131%" y="1135.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (8 samples, 0.01%)</title><rect x="99.2469%" y="1093" width="0.0116%" height="15" fill="rgb(208,103,14)" fg:x="68659" fg:w="8"/><text x="99.4969%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (8 samples, 0.01%)</title><rect x="99.2469%" y="1077" width="0.0116%" height="15" fill="rgb(238,20,8)" fg:x="68659" fg:w="8"/><text x="99.4969%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (8 samples, 0.01%)</title><rect x="99.2469%" y="1061" width="0.0116%" height="15" fill="rgb(218,80,54)" fg:x="68659" fg:w="8"/><text x="99.4969%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (46 samples, 0.07%)</title><rect x="99.2021%" y="1141" width="0.0665%" height="15" fill="rgb(240,144,17)" fg:x="68628" fg:w="46"/><text x="99.4521%" y="1151.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (46 samples, 0.07%)</title><rect x="99.2021%" y="1125" width="0.0665%" height="15" fill="rgb(245,27,50)" fg:x="68628" fg:w="46"/><text x="99.4521%" y="1135.50"></text></g><g><title>core::num::from_str_radix (46 samples, 0.07%)</title><rect x="99.2021%" y="1109" width="0.0665%" height="15" fill="rgb(251,51,7)" fg:x="68628" fg:w="46"/><text x="99.4521%" y="1119.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (7 samples, 0.01%)</title><rect x="99.2585%" y="1093" width="0.0101%" height="15" fill="rgb(245,217,29)" fg:x="68667" fg:w="7"/><text x="99.5085%" y="1103.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_utf8_char_boundary (17 samples, 0.02%)</title><rect x="99.2816%" y="1061" width="0.0246%" height="15" fill="rgb(221,176,29)" fg:x="68683" fg:w="17"/><text x="99.5316%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (28 samples, 0.04%)</title><rect x="99.2686%" y="1125" width="0.0405%" height="15" fill="rgb(212,180,24)" fg:x="68674" fg:w="28"/><text x="99.5186%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (28 samples, 0.04%)</title><rect x="99.2686%" y="1109" width="0.0405%" height="15" fill="rgb(254,24,2)" fg:x="68674" fg:w="28"/><text x="99.5186%" y="1119.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (28 samples, 0.04%)</title><rect x="99.2686%" y="1093" width="0.0405%" height="15" fill="rgb(230,100,2)" fg:x="68674" fg:w="28"/><text x="99.5186%" y="1103.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (19 samples, 0.03%)</title><rect x="99.2816%" y="1077" width="0.0275%" height="15" fill="rgb(219,142,25)" fg:x="68683" fg:w="19"/><text x="99.5316%" y="1087.50"></text></g><g><title>pest::iterators::pair::Pair&lt;R&gt;::pair (11 samples, 0.02%)</title><rect x="99.3090%" y="1125" width="0.0159%" height="15" fill="rgb(240,73,43)" fg:x="68702" fg:w="11"/><text x="99.5590%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="99.3307%" y="1093" width="0.0231%" height="15" fill="rgb(214,114,15)" fg:x="68717" fg:w="16"/><text x="99.5807%" y="1103.50"></text></g><g><title>nalgebra_sparse::io::matrix_market::parse_sparse_coordinate (191 samples, 0.28%)</title><rect x="99.0792%" y="1157" width="0.2761%" height="15" fill="rgb(207,130,4)" fg:x="68543" fg:w="191"/><text x="99.3292%" y="1167.50"></text></g><g><title>pest::iterators::pair::Pair&lt;R&gt;::as_str (60 samples, 0.09%)</title><rect x="99.2686%" y="1141" width="0.0867%" height="15" fill="rgb(221,25,40)" fg:x="68674" fg:w="60"/><text x="99.5186%" y="1151.50"></text></g><g><title>pest::iterators::pair::Pair&lt;R&gt;::pos (21 samples, 0.03%)</title><rect x="99.3249%" y="1125" width="0.0304%" height="15" fill="rgb(241,184,7)" fg:x="68713" fg:w="21"/><text x="99.5749%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.02%)</title><rect x="99.3307%" y="1109" width="0.0246%" height="15" fill="rgb(235,159,4)" fg:x="68717" fg:w="17"/><text x="99.5807%" y="1119.50"></text></g><g><title>pest::iterators::pair::Pair&lt;R&gt;::as_str (10 samples, 0.01%)</title><rect x="99.3625%" y="1157" width="0.0145%" height="15" fill="rgb(214,87,48)" fg:x="68739" fg:w="10"/><text x="99.6125%" y="1167.50"></text></g><g><title>nalgebra_sparse::io::matrix_market::load_coo_from_matrix_market_str (1,433 samples, 2.07%)</title><rect x="97.3099%" y="1189" width="2.0714%" height="15" fill="rgb(246,198,24)" fg:x="67319" fg:w="1433"/><text x="97.5599%" y="1199.50">n..</text></g><g><title>nalgebra_sparse::io::matrix_market::parse_sparse_real (328 samples, 0.47%)</title><rect x="98.9072%" y="1173" width="0.4741%" height="15" fill="rgb(209,66,40)" fg:x="68424" fg:w="328"/><text x="99.1572%" y="1183.50"></text></g><g><title>nalgebra_sparse::io::matrix_market::load_coo_from_matrix_market_file (1,438 samples, 2.08%)</title><rect x="97.3099%" y="1205" width="2.0786%" height="15" fill="rgb(233,147,39)" fg:x="67319" fg:w="1438"/><text x="97.5599%" y="1215.50">n..</text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.02%)</title><rect x="99.4131%" y="1157" width="0.0217%" height="15" fill="rgb(231,145,52)" fg:x="68774" fg:w="15"/><text x="99.6631%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="99.4131%" y="1141" width="0.0217%" height="15" fill="rgb(206,20,26)" fg:x="68774" fg:w="15"/><text x="99.6631%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.02%)</title><rect x="99.4131%" y="1125" width="0.0217%" height="15" fill="rgb(238,220,4)" fg:x="68774" fg:w="15"/><text x="99.6631%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="99.4232%" y="1109" width="0.0116%" height="15" fill="rgb(252,195,42)" fg:x="68781" fg:w="8"/><text x="99.6732%" y="1119.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_prealloc (34 samples, 0.05%)</title><rect x="99.3886%" y="1189" width="0.0491%" height="15" fill="rgb(209,10,6)" fg:x="68757" fg:w="34"/><text x="99.6386%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc (34 samples, 0.05%)</title><rect x="99.3886%" y="1173" width="0.0491%" height="15" fill="rgb(229,3,52)" fg:x="68757" fg:w="34"/><text x="99.6386%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.02%)</title><rect x="99.4507%" y="1173" width="0.0188%" height="15" fill="rgb(253,49,37)" fg:x="68800" fg:w="13"/><text x="99.7007%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (74 samples, 0.11%)</title><rect x="99.3886%" y="1205" width="0.1070%" height="15" fill="rgb(240,103,49)" fg:x="68757" fg:w="74"/><text x="99.6386%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::serial::pattern::spmm_csr_pattern (40 samples, 0.06%)</title><rect x="99.4377%" y="1189" width="0.0578%" height="15" fill="rgb(250,182,30)" fg:x="68791" fg:w="40"/><text x="99.6877%" y="1199.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (11 samples, 0.02%)</title><rect x="99.4796%" y="1173" width="0.0159%" height="15" fill="rgb(248,8,30)" fg:x="68820" fg:w="11"/><text x="99.7296%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt; for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (11 samples, 0.02%)</title><rect x="99.4955%" y="1205" width="0.0159%" height="15" fill="rgb(237,120,30)" fg:x="68831" fg:w="11"/><text x="99.7455%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense (11 samples, 0.02%)</title><rect x="99.4955%" y="1189" width="0.0159%" height="15" fill="rgb(221,146,34)" fg:x="68831" fg:w="11"/><text x="99.7455%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_dense_ (11 samples, 0.02%)</title><rect x="99.4955%" y="1173" width="0.0159%" height="15" fill="rgb(242,55,13)" fg:x="68831" fg:w="11"/><text x="99.7455%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_dense (11 samples, 0.02%)</title><rect x="99.4955%" y="1157" width="0.0159%" height="15" fill="rgb(242,112,31)" fg:x="68831" fg:w="11"/><text x="99.7455%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (234 samples, 0.34%)</title><rect x="99.5389%" y="1141" width="0.3382%" height="15" fill="rgb(249,192,27)" fg:x="68861" fg:w="234"/><text x="99.7889%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (234 samples, 0.34%)</title><rect x="99.5389%" y="1125" width="0.3382%" height="15" fill="rgb(208,204,44)" fg:x="68861" fg:w="234"/><text x="99.7889%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (234 samples, 0.34%)</title><rect x="99.5389%" y="1109" width="0.3382%" height="15" fill="rgb(208,93,54)" fg:x="68861" fg:w="234"/><text x="99.7889%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (227 samples, 0.33%)</title><rect x="99.5490%" y="1093" width="0.3281%" height="15" fill="rgb(242,1,31)" fg:x="68868" fg:w="227"/><text x="99.7990%" y="1103.50"></text></g><g><title>nalgebra_sparse::ops::serial::csr::spmm_csr_prealloc (266 samples, 0.38%)</title><rect x="99.5114%" y="1173" width="0.3845%" height="15" fill="rgb(241,83,25)" fg:x="68842" fg:w="266"/><text x="99.7614%" y="1183.50"></text></g><g><title>nalgebra_sparse::ops::serial::cs::spmm_cs_prealloc (266 samples, 0.38%)</title><rect x="99.5114%" y="1157" width="0.3845%" height="15" fill="rgb(205,169,50)" fg:x="68842" fg:w="266"/><text x="99.7614%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="99.9205%" y="1157" width="0.0101%" height="15" fill="rgb(239,186,37)" fg:x="69125" fg:w="7"/><text x="100.1705%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (11 samples, 0.02%)</title><rect x="99.9306%" y="1157" width="0.0159%" height="15" fill="rgb(205,221,10)" fg:x="69132" fg:w="11"/><text x="100.1806%" y="1167.50"></text></g><g><title>core::slice::sort::quicksort (11 samples, 0.02%)</title><rect x="99.9306%" y="1141" width="0.0159%" height="15" fill="rgb(218,196,15)" fg:x="69132" fg:w="11"/><text x="100.1806%" y="1151.50"></text></g><g><title>core::slice::sort::recurse (11 samples, 0.02%)</title><rect x="99.9306%" y="1125" width="0.0159%" height="15" fill="rgb(218,196,35)" fg:x="69132" fg:w="11"/><text x="100.1806%" y="1135.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (11 samples, 0.02%)</title><rect x="99.9306%" y="1109" width="0.0159%" height="15" fill="rgb(233,63,24)" fg:x="69132" fg:w="11"/><text x="100.1806%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (7 samples, 0.01%)</title><rect x="99.9364%" y="1093" width="0.0101%" height="15" fill="rgb(225,8,4)" fg:x="69136" fg:w="7"/><text x="100.1864%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.01%)</title><rect x="99.9364%" y="1077" width="0.0101%" height="15" fill="rgb(234,105,35)" fg:x="69136" fg:w="7"/><text x="100.1864%" y="1087.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::lane (9 samples, 0.01%)</title><rect x="99.9465%" y="1157" width="0.0130%" height="15" fill="rgb(236,21,32)" fg:x="69143" fg:w="9"/><text x="100.1965%" y="1167.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::get_lane (9 samples, 0.01%)</title><rect x="99.9465%" y="1141" width="0.0130%" height="15" fill="rgb(228,109,6)" fg:x="69143" fg:w="9"/><text x="100.1965%" y="1151.50"></text></g><g><title>_start (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1461" width="89.3914%" height="15" fill="rgb(229,215,31)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1471.50">_start</text></g><g><title>__libc_start_main (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1445" width="89.3914%" height="15" fill="rgb(221,52,54)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1455.50">__libc_start_main</text></g><g><title>main (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1429" width="89.3914%" height="15" fill="rgb(252,129,43)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1439.50">main</text></g><g><title>std::rt::lang_start_internal (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1413" width="89.3914%" height="15" fill="rgb(248,183,27)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1423.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1397" width="89.3914%" height="15" fill="rgb(250,0,22)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1407.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1381" width="89.3914%" height="15" fill="rgb(213,166,10)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1391.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1365" width="89.3914%" height="15" fill="rgb(207,163,36)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1375.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1349" width="89.3914%" height="15" fill="rgb(208,122,22)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1359.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1333" width="89.3914%" height="15" fill="rgb(207,104,49)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1343.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1317" width="89.3914%" height="15" fill="rgb(248,211,50)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1327.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1301" width="89.3914%" height="15" fill="rgb(217,13,45)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1311.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1285" width="89.3914%" height="15" fill="rgb(211,216,49)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1295.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1269" width="89.3914%" height="15" fill="rgb(221,58,53)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1279.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1253" width="89.3914%" height="15" fill="rgb(220,112,41)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1263.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1237" width="89.3914%" height="15" fill="rgb(236,38,28)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>adaptive::main (61,841 samples, 89.39%)</title><rect x="10.5825%" y="1221" width="89.3914%" height="15" fill="rgb(227,195,22)" fg:x="7321" fg:w="61841"/><text x="10.8325%" y="1231.50">adaptive::main</text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt; for nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (320 samples, 0.46%)</title><rect x="99.5114%" y="1205" width="0.4626%" height="15" fill="rgb(214,55,33)" fg:x="68842" fg:w="320"/><text x="99.7614%" y="1215.50"></text></g><g><title>nalgebra_sparse::ops::impl_std_ops::&lt;impl core::ops::arith::Mul for &amp;nalgebra_sparse::csr::CsrMatrix&lt;T&gt;&gt;::mul (320 samples, 0.46%)</title><rect x="99.5114%" y="1189" width="0.4626%" height="15" fill="rgb(248,80,13)" fg:x="68842" fg:w="320"/><text x="99.7614%" y="1199.50"></text></g><g><title>nalgebra_sparse::ops::serial::pattern::spmm_csr_pattern (54 samples, 0.08%)</title><rect x="99.8959%" y="1173" width="0.0781%" height="15" fill="rgb(238,52,6)" fg:x="69108" fg:w="54"/><text x="100.1459%" y="1183.50"></text></g><g><title>nalgebra_sparse::pattern::SparsityPattern::try_from_offsets_and_indices (10 samples, 0.01%)</title><rect x="99.9595%" y="1157" width="0.0145%" height="15" fill="rgb(224,198,47)" fg:x="69152" fg:w="10"/><text x="100.2095%" y="1167.50"></text></g><g><title>amg_match::partitioner::build_sparse_modularity_matrix (12 samples, 0.02%)</title><rect x="99.9740%" y="1461" width="0.0173%" height="15" fill="rgb(233,171,20)" fg:x="69162" fg:w="12"/><text x="100.2240%" y="1471.50"></text></g><g><title>all (69,180 samples, 100%)</title><rect x="0.0000%" y="1493" width="100.0000%" height="15" fill="rgb(241,30,25)" fg:x="0" fg:w="69180"/><text x="0.2500%" y="1503.50"></text></g><g><title>adaptive (69,180 samples, 100.00%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(207,171,38)" fg:x="0" fg:w="69180"/><text x="0.2500%" y="1487.50">adaptive</text></g></svg></svg>